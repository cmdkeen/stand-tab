MINION 3

#This file has been automatically generated by TAILOR v0.3
#bug-reports: andrea@cs.st-and.ac.uk

# Model statistics:
#   Constraints:3955
#   Auxiliary variables: 801
#   Eliminated common subexpressions:1368


**VARIABLES**
DISCRETE alloc[50,4] {0..199}
DISCRETE pp[200,4] {0..1}
DISCRETE po[200] {0..3}

# auxiliary variables
BOUND aux0 {0..398}
BOOL aux1 
BOUND aux2 {0..398}
BOOL aux3 
BOUND aux4 {0..398}
BOOL aux5 
BOUND aux6 {0..398}
BOOL aux7 
BOUND aux8 {0..398}
BOOL aux9 
BOUND aux10 {0..398}
BOOL aux11 
BOUND aux12 {0..398}
BOOL aux13 
BOUND aux14 {0..398}
BOOL aux15 
BOUND aux16 {0..398}
BOOL aux17 
BOUND aux18 {0..398}
BOOL aux19 
BOUND aux20 {0..398}
BOOL aux21 
BOUND aux22 {0..398}
BOOL aux23 
BOUND aux24 {0..398}
BOOL aux25 
BOUND aux26 {0..398}
BOOL aux27 
BOUND aux28 {0..398}
BOOL aux29 
BOUND aux30 {0..398}
BOOL aux31 
BOUND aux32 {0..398}
BOOL aux33 
BOUND aux34 {0..398}
BOOL aux35 
BOUND aux36 {0..398}
BOOL aux37 
BOUND aux38 {0..398}
BOOL aux39 
BOUND aux40 {0..398}
BOOL aux41 
BOUND aux42 {0..398}
BOOL aux43 
BOUND aux44 {0..398}
BOOL aux45 
BOUND aux46 {0..398}
BOOL aux47 
BOUND aux48 {0..398}
BOOL aux49 
BOUND aux50 {0..398}
BOOL aux51 
BOUND aux52 {0..398}
BOOL aux53 
BOUND aux54 {0..398}
BOOL aux55 
BOUND aux56 {0..398}
BOOL aux57 
BOUND aux58 {0..398}
BOOL aux59 
BOUND aux60 {0..398}
BOOL aux61 
BOUND aux62 {0..398}
BOOL aux63 
BOUND aux64 {0..398}
BOOL aux65 
BOUND aux66 {0..398}
BOOL aux67 
BOUND aux68 {0..398}
BOOL aux69 
BOUND aux70 {0..398}
BOOL aux71 
BOUND aux72 {0..398}
BOOL aux73 
BOUND aux74 {0..398}
BOOL aux75 
BOUND aux76 {0..398}
BOOL aux77 
BOUND aux78 {0..398}
BOOL aux79 
BOUND aux80 {0..398}
BOOL aux81 
BOUND aux82 {0..398}
BOOL aux83 
BOUND aux84 {0..398}
BOOL aux85 
BOUND aux86 {0..398}
BOOL aux87 
BOUND aux88 {0..398}
BOOL aux89 
BOUND aux90 {0..398}
BOOL aux91 
BOUND aux92 {0..398}
BOOL aux93 
BOUND aux94 {0..398}
BOOL aux95 
BOUND aux96 {0..398}
BOOL aux97 
BOUND aux98 {0..398}
BOOL aux99 
BOUND aux100 {0..398}
BOOL aux101 
BOUND aux102 {0..398}
BOOL aux103 
BOUND aux104 {0..398}
BOOL aux105 
BOUND aux106 {0..398}
BOOL aux107 
BOUND aux108 {0..398}
BOOL aux109 
BOUND aux110 {0..398}
BOOL aux111 
BOUND aux112 {0..398}
BOOL aux113 
BOUND aux114 {0..398}
BOOL aux115 
BOUND aux116 {0..398}
BOOL aux117 
BOUND aux118 {0..398}
BOOL aux119 
BOUND aux120 {0..398}
BOOL aux121 
BOUND aux122 {0..398}
BOOL aux123 
BOUND aux124 {0..398}
BOOL aux125 
BOUND aux126 {0..398}
BOOL aux127 
BOUND aux128 {0..398}
BOOL aux129 
BOUND aux130 {0..398}
BOOL aux131 
BOUND aux132 {0..398}
BOOL aux133 
BOUND aux134 {0..398}
BOOL aux135 
BOUND aux136 {0..398}
BOOL aux137 
BOUND aux138 {0..398}
BOOL aux139 
BOUND aux140 {0..398}
BOOL aux141 
BOUND aux142 {0..398}
BOOL aux143 
BOUND aux144 {0..398}
BOOL aux145 
BOUND aux146 {0..398}
BOOL aux147 
BOUND aux148 {0..398}
BOOL aux149 
BOUND aux150 {0..398}
BOOL aux151 
BOUND aux152 {0..398}
BOOL aux153 
BOUND aux154 {0..398}
BOOL aux155 
BOUND aux156 {0..398}
BOOL aux157 
BOUND aux158 {0..398}
BOOL aux159 
BOUND aux160 {0..398}
BOOL aux161 
BOUND aux162 {0..398}
BOOL aux163 
BOUND aux164 {0..398}
BOOL aux165 
BOUND aux166 {0..398}
BOOL aux167 
BOUND aux168 {0..398}
BOOL aux169 
BOUND aux170 {0..398}
BOOL aux171 
BOUND aux172 {0..398}
BOOL aux173 
BOUND aux174 {0..398}
BOOL aux175 
BOUND aux176 {0..398}
BOOL aux177 
BOUND aux178 {0..398}
BOOL aux179 
BOUND aux180 {0..398}
BOOL aux181 
BOUND aux182 {0..398}
BOOL aux183 
BOUND aux184 {0..398}
BOOL aux185 
BOUND aux186 {0..398}
BOOL aux187 
BOUND aux188 {0..398}
BOOL aux189 
BOUND aux190 {0..398}
BOOL aux191 
BOUND aux192 {0..398}
BOOL aux193 
BOUND aux194 {0..398}
BOOL aux195 
BOUND aux196 {0..398}
BOOL aux197 
BOUND aux198 {0..398}
BOOL aux199 
BOUND aux200 {0..398}
BOOL aux201 
BOUND aux202 {0..398}
BOOL aux203 
BOUND aux204 {0..398}
BOOL aux205 
BOUND aux206 {0..398}
BOOL aux207 
BOUND aux208 {0..398}
BOOL aux209 
BOUND aux210 {0..398}
BOOL aux211 
BOUND aux212 {0..398}
BOOL aux213 
BOUND aux214 {0..398}
BOOL aux215 
BOUND aux216 {0..398}
BOOL aux217 
BOUND aux218 {0..398}
BOOL aux219 
BOUND aux220 {0..398}
BOOL aux221 
BOUND aux222 {0..398}
BOOL aux223 
BOUND aux224 {0..398}
BOOL aux225 
BOUND aux226 {0..398}
BOOL aux227 
BOUND aux228 {0..398}
BOOL aux229 
BOUND aux230 {0..398}
BOOL aux231 
BOUND aux232 {0..398}
BOOL aux233 
BOUND aux234 {0..398}
BOOL aux235 
BOUND aux236 {0..398}
BOOL aux237 
BOUND aux238 {0..398}
BOOL aux239 
BOUND aux240 {0..398}
BOOL aux241 
BOUND aux242 {0..398}
BOOL aux243 
BOUND aux244 {0..398}
BOOL aux245 
BOUND aux246 {0..398}
BOOL aux247 
BOUND aux248 {0..398}
BOOL aux249 
BOUND aux250 {0..398}
BOOL aux251 
BOUND aux252 {0..398}
BOOL aux253 
BOUND aux254 {0..398}
BOOL aux255 
BOUND aux256 {0..398}
BOOL aux257 
BOUND aux258 {0..398}
BOOL aux259 
BOUND aux260 {0..398}
BOOL aux261 
BOUND aux262 {0..398}
BOOL aux263 
BOUND aux264 {0..398}
BOOL aux265 
BOUND aux266 {0..398}
BOOL aux267 
BOUND aux268 {0..398}
BOOL aux269 
BOUND aux270 {0..398}
BOOL aux271 
BOUND aux272 {0..398}
BOOL aux273 
BOUND aux274 {0..398}
BOOL aux275 
BOUND aux276 {0..398}
BOOL aux277 
BOUND aux278 {0..398}
BOOL aux279 
BOUND aux280 {0..398}
BOOL aux281 
BOUND aux282 {0..398}
BOOL aux283 
BOUND aux284 {0..398}
BOOL aux285 
BOUND aux286 {0..398}
BOOL aux287 
BOUND aux288 {0..398}
BOOL aux289 
BOUND aux290 {0..398}
BOOL aux291 
BOUND aux292 {0..398}
BOOL aux293 
BOUND aux294 {0..398}
BOOL aux295 
BOUND aux296 {0..398}
BOOL aux297 
BOUND aux298 {0..398}
BOOL aux299 
BOUND aux300 {0..398}
BOOL aux301 
BOUND aux302 {0..398}
BOOL aux303 
BOUND aux304 {0..398}
BOOL aux305 
BOUND aux306 {0..398}
BOOL aux307 
BOUND aux308 {0..398}
BOOL aux309 
BOUND aux310 {0..398}
BOOL aux311 
BOUND aux312 {0..398}
BOOL aux313 
BOUND aux314 {0..398}
BOOL aux315 
BOUND aux316 {0..398}
BOOL aux317 
BOUND aux318 {0..398}
BOOL aux319 
BOUND aux320 {0..398}
BOOL aux321 
BOUND aux322 {0..398}
BOOL aux323 
BOUND aux324 {0..398}
BOOL aux325 
BOUND aux326 {0..398}
BOOL aux327 
BOUND aux328 {0..398}
BOOL aux329 
BOUND aux330 {0..398}
BOOL aux331 
BOUND aux332 {0..398}
BOOL aux333 
BOUND aux334 {0..398}
BOOL aux335 
BOUND aux336 {0..398}
BOOL aux337 
BOUND aux338 {0..398}
BOOL aux339 
BOUND aux340 {0..398}
BOOL aux341 
BOUND aux342 {0..398}
BOOL aux343 
BOUND aux344 {0..398}
BOOL aux345 
BOUND aux346 {0..398}
BOOL aux347 
BOUND aux348 {0..398}
BOOL aux349 
BOUND aux350 {0..398}
BOOL aux351 
BOUND aux352 {0..398}
BOOL aux353 
BOUND aux354 {0..398}
BOOL aux355 
BOUND aux356 {0..398}
BOOL aux357 
BOUND aux358 {0..398}
BOOL aux359 
BOUND aux360 {0..398}
BOOL aux361 
BOUND aux362 {0..398}
BOOL aux363 
BOUND aux364 {0..398}
BOOL aux365 
BOUND aux366 {0..398}
BOOL aux367 
BOUND aux368 {0..398}
BOOL aux369 
BOUND aux370 {0..398}
BOOL aux371 
BOUND aux372 {0..398}
BOOL aux373 
BOUND aux374 {0..398}
BOOL aux375 
BOUND aux376 {0..398}
BOOL aux377 
BOUND aux378 {0..398}
BOOL aux379 
BOUND aux380 {0..398}
BOOL aux381 
BOUND aux382 {0..398}
BOOL aux383 
BOUND aux384 {0..398}
BOOL aux385 
BOUND aux386 {0..398}
BOOL aux387 
BOUND aux388 {0..398}
BOOL aux389 
BOUND aux390 {0..398}
BOOL aux391 
BOUND aux392 {0..398}
BOOL aux393 
BOUND aux394 {0..398}
BOOL aux395 
BOUND aux396 {0..398}
BOOL aux397 
BOUND aux398 {0..398}
BOOL aux399 
BOUND aux400 {0..398}
BOUND aux401 {0..398}
BOUND aux402 {0..398}
BOUND aux403 {0..398}
BOUND aux404 {0..398}
BOUND aux405 {0..398}
BOUND aux406 {0..398}
BOUND aux407 {0..398}
BOUND aux408 {0..398}
BOUND aux409 {0..398}
BOUND aux410 {0..398}
BOUND aux411 {0..398}
BOUND aux412 {0..398}
BOUND aux413 {0..398}
BOUND aux414 {0..398}
BOUND aux415 {0..398}
BOUND aux416 {0..398}
BOUND aux417 {0..398}
BOUND aux418 {0..398}
BOUND aux419 {0..398}
BOUND aux420 {0..398}
BOUND aux421 {0..398}
BOUND aux422 {0..398}
BOUND aux423 {0..398}
BOUND aux424 {0..398}
BOUND aux425 {0..398}
BOUND aux426 {0..398}
BOUND aux427 {0..398}
BOUND aux428 {0..398}
BOUND aux429 {0..398}
BOUND aux430 {0..398}
BOUND aux431 {0..398}
BOUND aux432 {0..398}
BOUND aux433 {0..398}
BOUND aux434 {0..398}
BOUND aux435 {0..398}
BOUND aux436 {0..398}
BOUND aux437 {0..398}
BOUND aux438 {0..398}
BOUND aux439 {0..398}
BOUND aux440 {0..398}
BOUND aux441 {0..398}
BOUND aux442 {0..398}
BOUND aux443 {0..398}
BOUND aux444 {0..398}
BOUND aux445 {0..398}
BOUND aux446 {0..398}
BOUND aux447 {0..398}
BOUND aux448 {0..398}
BOUND aux449 {0..398}
BOUND aux450 {0..398}
BOUND aux451 {0..398}
BOUND aux452 {0..398}
BOUND aux453 {0..398}
BOUND aux454 {0..398}
BOUND aux455 {0..398}
BOUND aux456 {0..398}
BOUND aux457 {0..398}
BOUND aux458 {0..398}
BOUND aux459 {0..398}
BOUND aux460 {0..398}
BOUND aux461 {0..398}
BOUND aux462 {0..398}
BOUND aux463 {0..398}
BOUND aux464 {0..398}
BOUND aux465 {0..398}
BOUND aux466 {0..398}
BOUND aux467 {0..398}
BOUND aux468 {0..398}
BOUND aux469 {0..398}
BOUND aux470 {0..398}
BOUND aux471 {0..398}
BOUND aux472 {0..398}
BOUND aux473 {0..398}
BOUND aux474 {0..398}
BOUND aux475 {0..398}
BOUND aux476 {0..398}
BOUND aux477 {0..398}
BOUND aux478 {0..398}
BOUND aux479 {0..398}
BOUND aux480 {0..398}
BOUND aux481 {0..398}
BOUND aux482 {0..398}
BOUND aux483 {0..398}
BOUND aux484 {0..398}
BOUND aux485 {0..398}
BOUND aux486 {0..398}
BOUND aux487 {0..398}
BOUND aux488 {0..398}
BOUND aux489 {0..398}
BOUND aux490 {0..398}
BOUND aux491 {0..398}
BOUND aux492 {0..398}
BOUND aux493 {0..398}
BOUND aux494 {0..398}
BOUND aux495 {0..398}
BOUND aux496 {0..398}
BOUND aux497 {0..398}
BOUND aux498 {0..398}
BOUND aux499 {0..398}
BOUND aux500 {0..398}
BOUND aux501 {0..398}
BOUND aux502 {0..398}
BOUND aux503 {0..398}
BOUND aux504 {0..398}
BOUND aux505 {0..398}
BOUND aux506 {0..398}
BOUND aux507 {0..398}
BOUND aux508 {0..398}
BOUND aux509 {0..398}
BOUND aux510 {0..398}
BOUND aux511 {0..398}
BOUND aux512 {0..398}
BOUND aux513 {0..398}
BOUND aux514 {0..398}
BOUND aux515 {0..398}
BOUND aux516 {0..398}
BOUND aux517 {0..398}
BOUND aux518 {0..398}
BOUND aux519 {0..398}
BOUND aux520 {0..398}
BOUND aux521 {0..398}
BOUND aux522 {0..398}
BOUND aux523 {0..398}
BOUND aux524 {0..398}
BOUND aux525 {0..398}
BOUND aux526 {0..398}
BOUND aux527 {0..398}
BOUND aux528 {0..398}
BOUND aux529 {0..398}
BOUND aux530 {0..398}
BOUND aux531 {0..398}
BOUND aux532 {0..398}
BOUND aux533 {0..398}
BOUND aux534 {0..398}
BOUND aux535 {0..398}
BOUND aux536 {0..398}
BOUND aux537 {0..398}
BOUND aux538 {0..398}
BOUND aux539 {0..398}
BOUND aux540 {0..398}
BOUND aux541 {0..398}
BOUND aux542 {0..398}
BOUND aux543 {0..398}
BOUND aux544 {0..398}
BOUND aux545 {0..398}
BOUND aux546 {0..398}
BOUND aux547 {0..398}
BOUND aux548 {0..398}
BOUND aux549 {0..398}
BOUND aux550 {0..398}
BOUND aux551 {0..398}
BOUND aux552 {0..398}
BOUND aux553 {0..398}
BOUND aux554 {0..398}
BOUND aux555 {0..398}
BOUND aux556 {0..398}
BOUND aux557 {0..398}
BOUND aux558 {0..398}
BOUND aux559 {0..398}
BOUND aux560 {0..398}
BOUND aux561 {0..398}
BOUND aux562 {0..398}
BOUND aux563 {0..398}
BOUND aux564 {0..398}
BOUND aux565 {0..398}
BOUND aux566 {0..398}
BOUND aux567 {0..398}
BOUND aux568 {0..398}
BOUND aux569 {0..398}
BOUND aux570 {0..398}
BOUND aux571 {0..398}
BOUND aux572 {0..398}
BOUND aux573 {0..398}
BOUND aux574 {0..398}
BOUND aux575 {0..398}
BOUND aux576 {0..398}
BOUND aux577 {0..398}
BOUND aux578 {0..398}
BOUND aux579 {0..398}
BOUND aux580 {0..398}
BOUND aux581 {0..398}
BOUND aux582 {0..398}
BOUND aux583 {0..398}
BOUND aux584 {0..398}
BOUND aux585 {0..398}
BOUND aux586 {0..398}
BOUND aux587 {0..398}
BOUND aux588 {0..398}
BOUND aux589 {0..398}
BOUND aux590 {0..398}
BOUND aux591 {0..398}
BOUND aux592 {0..398}
BOUND aux593 {0..398}
BOUND aux594 {0..398}
BOUND aux595 {0..398}
BOUND aux596 {0..398}
BOUND aux597 {0..398}
BOUND aux598 {0..398}
BOUND aux599 {0..398}
BOUND aux600 {0..79600}
DISCRETE aux601 {0..3}
DISCRETE aux602 {0..3}
DISCRETE aux603 {0..3}
DISCRETE aux604 {0..3}
DISCRETE aux605 {0..3}
DISCRETE aux606 {0..3}
DISCRETE aux607 {0..3}
DISCRETE aux608 {0..3}
DISCRETE aux609 {0..3}
DISCRETE aux610 {0..3}
DISCRETE aux611 {0..3}
DISCRETE aux612 {0..3}
DISCRETE aux613 {0..3}
DISCRETE aux614 {0..3}
DISCRETE aux615 {0..3}
DISCRETE aux616 {0..3}
DISCRETE aux617 {0..3}
DISCRETE aux618 {0..3}
DISCRETE aux619 {0..3}
DISCRETE aux620 {0..3}
DISCRETE aux621 {0..3}
DISCRETE aux622 {0..3}
DISCRETE aux623 {0..3}
DISCRETE aux624 {0..3}
DISCRETE aux625 {0..3}
DISCRETE aux626 {0..3}
DISCRETE aux627 {0..3}
DISCRETE aux628 {0..3}
DISCRETE aux629 {0..3}
DISCRETE aux630 {0..3}
DISCRETE aux631 {0..3}
DISCRETE aux632 {0..3}
DISCRETE aux633 {0..3}
DISCRETE aux634 {0..3}
DISCRETE aux635 {0..3}
DISCRETE aux636 {0..3}
DISCRETE aux637 {0..3}
DISCRETE aux638 {0..3}
DISCRETE aux639 {0..3}
DISCRETE aux640 {0..3}
DISCRETE aux641 {0..3}
DISCRETE aux642 {0..3}
DISCRETE aux643 {0..3}
DISCRETE aux644 {0..3}
DISCRETE aux645 {0..3}
DISCRETE aux646 {0..3}
DISCRETE aux647 {0..3}
DISCRETE aux648 {0..3}
DISCRETE aux649 {0..3}
DISCRETE aux650 {0..3}
DISCRETE aux651 {0..3}
DISCRETE aux652 {0..3}
DISCRETE aux653 {0..3}
DISCRETE aux654 {0..3}
DISCRETE aux655 {0..3}
DISCRETE aux656 {0..3}
DISCRETE aux657 {0..3}
DISCRETE aux658 {0..3}
DISCRETE aux659 {0..3}
DISCRETE aux660 {0..3}
DISCRETE aux661 {0..3}
DISCRETE aux662 {0..3}
DISCRETE aux663 {0..3}
DISCRETE aux664 {0..3}
DISCRETE aux665 {0..3}
DISCRETE aux666 {0..3}
DISCRETE aux667 {0..3}
DISCRETE aux668 {0..3}
DISCRETE aux669 {0..3}
DISCRETE aux670 {0..3}
DISCRETE aux671 {0..3}
DISCRETE aux672 {0..3}
DISCRETE aux673 {0..3}
DISCRETE aux674 {0..3}
DISCRETE aux675 {0..3}
DISCRETE aux676 {0..3}
DISCRETE aux677 {0..3}
DISCRETE aux678 {0..3}
DISCRETE aux679 {0..3}
DISCRETE aux680 {0..3}
DISCRETE aux681 {0..3}
DISCRETE aux682 {0..3}
DISCRETE aux683 {0..3}
DISCRETE aux684 {0..3}
DISCRETE aux685 {0..3}
DISCRETE aux686 {0..3}
DISCRETE aux687 {0..3}
DISCRETE aux688 {0..3}
DISCRETE aux689 {0..3}
DISCRETE aux690 {0..3}
DISCRETE aux691 {0..3}
DISCRETE aux692 {0..3}
DISCRETE aux693 {0..3}
DISCRETE aux694 {0..3}
DISCRETE aux695 {0..3}
DISCRETE aux696 {0..3}
DISCRETE aux697 {0..3}
DISCRETE aux698 {0..3}
DISCRETE aux699 {0..3}
DISCRETE aux700 {0..3}
DISCRETE aux701 {0..3}
DISCRETE aux702 {0..3}
DISCRETE aux703 {0..3}
DISCRETE aux704 {0..3}
DISCRETE aux705 {0..3}
DISCRETE aux706 {0..3}
DISCRETE aux707 {0..3}
DISCRETE aux708 {0..3}
DISCRETE aux709 {0..3}
DISCRETE aux710 {0..3}
DISCRETE aux711 {0..3}
DISCRETE aux712 {0..3}
DISCRETE aux713 {0..3}
DISCRETE aux714 {0..3}
DISCRETE aux715 {0..3}
DISCRETE aux716 {0..3}
DISCRETE aux717 {0..3}
DISCRETE aux718 {0..3}
DISCRETE aux719 {0..3}
DISCRETE aux720 {0..3}
DISCRETE aux721 {0..3}
DISCRETE aux722 {0..3}
DISCRETE aux723 {0..3}
DISCRETE aux724 {0..3}
DISCRETE aux725 {0..3}
DISCRETE aux726 {0..3}
DISCRETE aux727 {0..3}
DISCRETE aux728 {0..3}
DISCRETE aux729 {0..3}
DISCRETE aux730 {0..3}
DISCRETE aux731 {0..3}
DISCRETE aux732 {0..3}
DISCRETE aux733 {0..3}
DISCRETE aux734 {0..3}
DISCRETE aux735 {0..3}
DISCRETE aux736 {0..3}
DISCRETE aux737 {0..3}
DISCRETE aux738 {0..3}
DISCRETE aux739 {0..3}
DISCRETE aux740 {0..3}
DISCRETE aux741 {0..3}
DISCRETE aux742 {0..3}
DISCRETE aux743 {0..3}
DISCRETE aux744 {0..3}
DISCRETE aux745 {0..3}
DISCRETE aux746 {0..3}
DISCRETE aux747 {0..3}
DISCRETE aux748 {0..3}
DISCRETE aux749 {0..3}
DISCRETE aux750 {0..3}
DISCRETE aux751 {0..3}
DISCRETE aux752 {0..3}
DISCRETE aux753 {0..3}
DISCRETE aux754 {0..3}
DISCRETE aux755 {0..3}
DISCRETE aux756 {0..3}
DISCRETE aux757 {0..3}
DISCRETE aux758 {0..3}
DISCRETE aux759 {0..3}
DISCRETE aux760 {0..3}
DISCRETE aux761 {0..3}
DISCRETE aux762 {0..3}
DISCRETE aux763 {0..3}
DISCRETE aux764 {0..3}
DISCRETE aux765 {0..3}
DISCRETE aux766 {0..3}
DISCRETE aux767 {0..3}
DISCRETE aux768 {0..3}
DISCRETE aux769 {0..3}
DISCRETE aux770 {0..3}
DISCRETE aux771 {0..3}
DISCRETE aux772 {0..3}
DISCRETE aux773 {0..3}
DISCRETE aux774 {0..3}
DISCRETE aux775 {0..3}
DISCRETE aux776 {0..3}
DISCRETE aux777 {0..3}
DISCRETE aux778 {0..3}
DISCRETE aux779 {0..3}
DISCRETE aux780 {0..3}
DISCRETE aux781 {0..3}
DISCRETE aux782 {0..3}
DISCRETE aux783 {0..3}
DISCRETE aux784 {0..3}
DISCRETE aux785 {0..3}
DISCRETE aux786 {0..3}
DISCRETE aux787 {0..3}
DISCRETE aux788 {0..3}
DISCRETE aux789 {0..3}
DISCRETE aux790 {0..3}
DISCRETE aux791 {0..3}
DISCRETE aux792 {0..3}
DISCRETE aux793 {0..3}
DISCRETE aux794 {0..3}
DISCRETE aux795 {0..3}
DISCRETE aux796 {0..3}
DISCRETE aux797 {0..3}
DISCRETE aux798 {0..3}
DISCRETE aux799 {0..3}
DISCRETE aux800 {0..3}

# aliases

**SEARCH**

MINIMISING aux600

PRINT [
alloc,pp,po]

VARORDER [
alloc,pp,po,
aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,
aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,
aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,
aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,
aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,
aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,
aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,
aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,
aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,
aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,
aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,
aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,
aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,
aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,
aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,
aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,
aux128,aux129,aux130,aux131,aux132,aux133,aux134,aux135,
aux136,aux137,aux138,aux139,aux140,aux141,aux142,aux143,
aux144,aux145,aux146,aux147,aux148,aux149,aux150,aux151,
aux152,aux153,aux154,aux155,aux156,aux157,aux158,aux159,
aux160,aux161,aux162,aux163,aux164,aux165,aux166,aux167,
aux168,aux169,aux170,aux171,aux172,aux173,aux174,aux175,
aux176,aux177,aux178,aux179,aux180,aux181,aux182,aux183,
aux184,aux185,aux186,aux187,aux188,aux189,aux190,aux191,
aux192,aux193,aux194,aux195,aux196,aux197,aux198,aux199,
aux200,aux201,aux202,aux203,aux204,aux205,aux206,aux207,
aux208,aux209,aux210,aux211,aux212,aux213,aux214,aux215,
aux216,aux217,aux218,aux219,aux220,aux221,aux222,aux223,
aux224,aux225,aux226,aux227,aux228,aux229,aux230,aux231,
aux232,aux233,aux234,aux235,aux236,aux237,aux238,aux239,
aux240,aux241,aux242,aux243,aux244,aux245,aux246,aux247,
aux248,aux249,aux250,aux251,aux252,aux253,aux254,aux255,
aux256,aux257,aux258,aux259,aux260,aux261,aux262,aux263,
aux264,aux265,aux266,aux267,aux268,aux269,aux270,aux271,
aux272,aux273,aux274,aux275,aux276,aux277,aux278,aux279,
aux280,aux281,aux282,aux283,aux284,aux285,aux286,aux287,
aux288,aux289,aux290,aux291,aux292,aux293,aux294,aux295,
aux296,aux297,aux298,aux299,aux300,aux301,aux302,aux303,
aux304,aux305,aux306,aux307,aux308,aux309,aux310,aux311,
aux312,aux313,aux314,aux315,aux316,aux317,aux318,aux319,
aux320,aux321,aux322,aux323,aux324,aux325,aux326,aux327,
aux328,aux329,aux330,aux331,aux332,aux333,aux334,aux335,
aux336,aux337,aux338,aux339,aux340,aux341,aux342,aux343,
aux344,aux345,aux346,aux347,aux348,aux349,aux350,aux351,
aux352,aux353,aux354,aux355,aux356,aux357,aux358,aux359,
aux360,aux361,aux362,aux363,aux364,aux365,aux366,aux367,
aux368,aux369,aux370,aux371,aux372,aux373,aux374,aux375,
aux376,aux377,aux378,aux379,aux380,aux381,aux382,aux383,
aux384,aux385,aux386,aux387,aux388,aux389,aux390,aux391,
aux392,aux393,aux394,aux395,aux396,aux397,aux398,aux399,
aux400,aux401,aux402,aux403,aux404,aux405,aux406,aux407,
aux408,aux409,aux410,aux411,aux412,aux413,aux414,aux415,
aux416,aux417,aux418,aux419,aux420,aux421,aux422,aux423,
aux424,aux425,aux426,aux427,aux428,aux429,aux430,aux431,
aux432,aux433,aux434,aux435,aux436,aux437,aux438,aux439,
aux440,aux441,aux442,aux443,aux444,aux445,aux446,aux447,
aux448,aux449,aux450,aux451,aux452,aux453,aux454,aux455,
aux456,aux457,aux458,aux459,aux460,aux461,aux462,aux463,
aux464,aux465,aux466,aux467,aux468,aux469,aux470,aux471,
aux472,aux473,aux474,aux475,aux476,aux477,aux478,aux479,
aux480,aux481,aux482,aux483,aux484,aux485,aux486,aux487,
aux488,aux489,aux490,aux491,aux492,aux493,aux494,aux495,
aux496,aux497,aux498,aux499,aux500,aux501,aux502,aux503,
aux504,aux505,aux506,aux507,aux508,aux509,aux510,aux511,
aux512,aux513,aux514,aux515,aux516,aux517,aux518,aux519,
aux520,aux521,aux522,aux523,aux524,aux525,aux526,aux527,
aux528,aux529,aux530,aux531,aux532,aux533,aux534,aux535,
aux536,aux537,aux538,aux539,aux540,aux541,aux542,aux543,
aux544,aux545,aux546,aux547,aux548,aux549,aux550,aux551,
aux552,aux553,aux554,aux555,aux556,aux557,aux558,aux559,
aux560,aux561,aux562,aux563,aux564,aux565,aux566,aux567,
aux568,aux569,aux570,aux571,aux572,aux573,aux574,aux575,
aux576,aux577,aux578,aux579,aux580,aux581,aux582,aux583,
aux584,aux585,aux586,aux587,aux588,aux589,aux590,aux591,
aux592,aux593,aux594,aux595,aux596,aux597,aux598,aux599,
aux600,aux601,aux602,aux603,aux604,aux605,aux606,aux607,
aux608,aux609,aux610,aux611,aux612,aux613,aux614,aux615,
aux616,aux617,aux618,aux619,aux620,aux621,aux622,aux623,
aux624,aux625,aux626,aux627,aux628,aux629,aux630,aux631,
aux632,aux633,aux634,aux635,aux636,aux637,aux638,aux639,
aux640,aux641,aux642,aux643,aux644,aux645,aux646,aux647,
aux648,aux649,aux650,aux651,aux652,aux653,aux654,aux655,
aux656,aux657,aux658,aux659,aux660,aux661,aux662,aux663,
aux664,aux665,aux666,aux667,aux668,aux669,aux670,aux671,
aux672,aux673,aux674,aux675,aux676,aux677,aux678,aux679,
aux680,aux681,aux682,aux683,aux684,aux685,aux686,aux687,
aux688,aux689,aux690,aux691,aux692,aux693,aux694,aux695,
aux696,aux697,aux698,aux699,aux700,aux701,aux702,aux703,
aux704,aux705,aux706,aux707,aux708,aux709,aux710,aux711,
aux712,aux713,aux714,aux715,aux716,aux717,aux718,aux719,
aux720,aux721,aux722,aux723,aux724,aux725,aux726,aux727,
aux728,aux729,aux730,aux731,aux732,aux733,aux734,aux735,
aux736,aux737,aux738,aux739,aux740,aux741,aux742,aux743,
aux744,aux745,aux746,aux747,aux748,aux749,aux750,aux751,
aux752,aux753,aux754,aux755,aux756,aux757,aux758,aux759,
aux760,aux761,aux762,aux763,aux764,aux765,aux766,aux767,
aux768,aux769,aux770,aux771,aux772,aux773,aux774,aux775,
aux776,aux777,aux778,aux779,aux780,aux781,aux782,aux783,
aux784,aux785,aux786,aux787,aux788,aux789,aux790,aux791,
aux792,aux793,aux794,aux795,aux796,aux797,aux798,aux799,
aux800]


**CONSTRAINTS**

watchelement([po], alloc[0, 0], aux601)
watchelement([po], alloc[1, 0], aux602)
watchelement([po], alloc[0, 0], aux601)
watchelement([po], alloc[1, 1], aux603)
watchelement([po], alloc[0, 0], aux601)
watchelement([po], alloc[1, 2], aux604)
watchelement([po], alloc[0, 0], aux601)
watchelement([po], alloc[1, 3], aux605)
ineq(aux602,aux601,0)
ineq(aux603,aux601,0)
ineq(aux604,aux601,0)
watchelement([po], alloc[0, 1], aux606)
watchelement([po], alloc[1, 0], aux602)
watchelement([po], alloc[0, 1], aux606)
watchelement([po], alloc[1, 1], aux603)
watchelement([po], alloc[0, 1], aux606)
watchelement([po], alloc[1, 2], aux604)
watchelement([po], alloc[0, 1], aux606)
watchelement([po], alloc[1, 3], aux605)
ineq(aux602,aux606,0)
ineq(aux603,aux606,0)
ineq(aux604,aux606,0)
watchelement([po], alloc[0, 2], aux607)
watchelement([po], alloc[1, 0], aux602)
watchelement([po], alloc[0, 2], aux607)
watchelement([po], alloc[1, 1], aux603)
watchelement([po], alloc[0, 2], aux607)
watchelement([po], alloc[1, 2], aux604)
watchelement([po], alloc[0, 2], aux607)
watchelement([po], alloc[1, 3], aux605)
ineq(aux602,aux607,0)
ineq(aux603,aux607,0)
ineq(aux604,aux607,0)
watchelement([po], alloc[0, 3], aux608)
watchelement([po], alloc[1, 0], aux602)
watchelement([po], alloc[0, 3], aux608)
watchelement([po], alloc[1, 1], aux603)
watchelement([po], alloc[0, 3], aux608)
watchelement([po], alloc[1, 2], aux604)
watchelement([po], alloc[0, 3], aux608)
watchelement([po], alloc[1, 3], aux605)
ineq(aux602,aux608,0)
ineq(aux603,aux608,0)
ineq(aux604,aux608,0)
ineq(aux605,aux601,0)
ineq(aux605,aux606,0)
ineq(aux605,aux607,0)
watchelement([po], alloc[1, 0], aux602)
watchelement([po], alloc[2, 0], aux609)
watchelement([po], alloc[1, 0], aux602)
watchelement([po], alloc[2, 1], aux610)
watchelement([po], alloc[1, 0], aux602)
watchelement([po], alloc[2, 2], aux611)
watchelement([po], alloc[1, 0], aux602)
watchelement([po], alloc[2, 3], aux612)
ineq(aux609,aux602,0)
ineq(aux610,aux602,0)
ineq(aux611,aux602,0)
watchelement([po], alloc[1, 1], aux603)
watchelement([po], alloc[2, 0], aux609)
watchelement([po], alloc[1, 1], aux603)
watchelement([po], alloc[2, 1], aux610)
watchelement([po], alloc[1, 1], aux603)
watchelement([po], alloc[2, 2], aux611)
watchelement([po], alloc[1, 1], aux603)
watchelement([po], alloc[2, 3], aux612)
ineq(aux609,aux603,0)
ineq(aux610,aux603,0)
ineq(aux611,aux603,0)
watchelement([po], alloc[1, 2], aux604)
watchelement([po], alloc[2, 0], aux609)
watchelement([po], alloc[1, 2], aux604)
watchelement([po], alloc[2, 1], aux610)
watchelement([po], alloc[1, 2], aux604)
watchelement([po], alloc[2, 2], aux611)
watchelement([po], alloc[1, 2], aux604)
watchelement([po], alloc[2, 3], aux612)
ineq(aux609,aux604,0)
ineq(aux610,aux604,0)
ineq(aux611,aux604,0)
watchelement([po], alloc[1, 3], aux605)
watchelement([po], alloc[2, 0], aux609)
watchelement([po], alloc[1, 3], aux605)
watchelement([po], alloc[2, 1], aux610)
watchelement([po], alloc[1, 3], aux605)
watchelement([po], alloc[2, 2], aux611)
watchelement([po], alloc[1, 3], aux605)
watchelement([po], alloc[2, 3], aux612)
ineq(aux609,aux605,0)
ineq(aux610,aux605,0)
ineq(aux611,aux605,0)
ineq(aux612,aux602,0)
ineq(aux612,aux603,0)
ineq(aux612,aux604,0)
watchelement([po], alloc[2, 0], aux609)
watchelement([po], alloc[3, 0], aux613)
watchelement([po], alloc[2, 0], aux609)
watchelement([po], alloc[3, 1], aux614)
watchelement([po], alloc[2, 0], aux609)
watchelement([po], alloc[3, 2], aux615)
watchelement([po], alloc[2, 0], aux609)
watchelement([po], alloc[3, 3], aux616)
ineq(aux613,aux609,0)
ineq(aux614,aux609,0)
ineq(aux615,aux609,0)
watchelement([po], alloc[2, 1], aux610)
watchelement([po], alloc[3, 0], aux613)
watchelement([po], alloc[2, 1], aux610)
watchelement([po], alloc[3, 1], aux614)
watchelement([po], alloc[2, 1], aux610)
watchelement([po], alloc[3, 2], aux615)
watchelement([po], alloc[2, 1], aux610)
watchelement([po], alloc[3, 3], aux616)
ineq(aux613,aux610,0)
ineq(aux614,aux610,0)
ineq(aux615,aux610,0)
watchelement([po], alloc[2, 2], aux611)
watchelement([po], alloc[3, 0], aux613)
watchelement([po], alloc[2, 2], aux611)
watchelement([po], alloc[3, 1], aux614)
watchelement([po], alloc[2, 2], aux611)
watchelement([po], alloc[3, 2], aux615)
watchelement([po], alloc[2, 2], aux611)
watchelement([po], alloc[3, 3], aux616)
ineq(aux613,aux611,0)
ineq(aux614,aux611,0)
ineq(aux615,aux611,0)
watchelement([po], alloc[2, 3], aux612)
watchelement([po], alloc[3, 0], aux613)
watchelement([po], alloc[2, 3], aux612)
watchelement([po], alloc[3, 1], aux614)
watchelement([po], alloc[2, 3], aux612)
watchelement([po], alloc[3, 2], aux615)
watchelement([po], alloc[2, 3], aux612)
watchelement([po], alloc[3, 3], aux616)
ineq(aux613,aux612,0)
ineq(aux614,aux612,0)
ineq(aux615,aux612,0)
ineq(aux616,aux609,0)
ineq(aux616,aux610,0)
ineq(aux616,aux611,0)
watchelement([po], alloc[3, 0], aux613)
watchelement([po], alloc[4, 0], aux617)
watchelement([po], alloc[3, 0], aux613)
watchelement([po], alloc[4, 1], aux618)
watchelement([po], alloc[3, 0], aux613)
watchelement([po], alloc[4, 2], aux619)
watchelement([po], alloc[3, 0], aux613)
watchelement([po], alloc[4, 3], aux620)
ineq(aux617,aux613,0)
ineq(aux618,aux613,0)
ineq(aux619,aux613,0)
watchelement([po], alloc[3, 1], aux614)
watchelement([po], alloc[4, 0], aux617)
watchelement([po], alloc[3, 1], aux614)
watchelement([po], alloc[4, 1], aux618)
watchelement([po], alloc[3, 1], aux614)
watchelement([po], alloc[4, 2], aux619)
watchelement([po], alloc[3, 1], aux614)
watchelement([po], alloc[4, 3], aux620)
ineq(aux617,aux614,0)
ineq(aux618,aux614,0)
ineq(aux619,aux614,0)
watchelement([po], alloc[3, 2], aux615)
watchelement([po], alloc[4, 0], aux617)
watchelement([po], alloc[3, 2], aux615)
watchelement([po], alloc[4, 1], aux618)
watchelement([po], alloc[3, 2], aux615)
watchelement([po], alloc[4, 2], aux619)
watchelement([po], alloc[3, 2], aux615)
watchelement([po], alloc[4, 3], aux620)
ineq(aux617,aux615,0)
ineq(aux618,aux615,0)
ineq(aux619,aux615,0)
watchelement([po], alloc[3, 3], aux616)
watchelement([po], alloc[4, 0], aux617)
watchelement([po], alloc[3, 3], aux616)
watchelement([po], alloc[4, 1], aux618)
watchelement([po], alloc[3, 3], aux616)
watchelement([po], alloc[4, 2], aux619)
watchelement([po], alloc[3, 3], aux616)
watchelement([po], alloc[4, 3], aux620)
ineq(aux617,aux616,0)
ineq(aux618,aux616,0)
ineq(aux619,aux616,0)
ineq(aux620,aux613,0)
ineq(aux620,aux614,0)
ineq(aux620,aux615,0)
watchelement([po], alloc[4, 0], aux617)
watchelement([po], alloc[5, 0], aux621)
watchelement([po], alloc[4, 0], aux617)
watchelement([po], alloc[5, 1], aux622)
watchelement([po], alloc[4, 0], aux617)
watchelement([po], alloc[5, 2], aux623)
watchelement([po], alloc[4, 0], aux617)
watchelement([po], alloc[5, 3], aux624)
ineq(aux621,aux617,0)
ineq(aux622,aux617,0)
ineq(aux623,aux617,0)
watchelement([po], alloc[4, 1], aux618)
watchelement([po], alloc[5, 0], aux621)
watchelement([po], alloc[4, 1], aux618)
watchelement([po], alloc[5, 1], aux622)
watchelement([po], alloc[4, 1], aux618)
watchelement([po], alloc[5, 2], aux623)
watchelement([po], alloc[4, 1], aux618)
watchelement([po], alloc[5, 3], aux624)
ineq(aux621,aux618,0)
ineq(aux622,aux618,0)
ineq(aux623,aux618,0)
watchelement([po], alloc[4, 2], aux619)
watchelement([po], alloc[5, 0], aux621)
watchelement([po], alloc[4, 2], aux619)
watchelement([po], alloc[5, 1], aux622)
watchelement([po], alloc[4, 2], aux619)
watchelement([po], alloc[5, 2], aux623)
watchelement([po], alloc[4, 2], aux619)
watchelement([po], alloc[5, 3], aux624)
ineq(aux621,aux619,0)
ineq(aux622,aux619,0)
ineq(aux623,aux619,0)
watchelement([po], alloc[4, 3], aux620)
watchelement([po], alloc[5, 0], aux621)
watchelement([po], alloc[4, 3], aux620)
watchelement([po], alloc[5, 1], aux622)
watchelement([po], alloc[4, 3], aux620)
watchelement([po], alloc[5, 2], aux623)
watchelement([po], alloc[4, 3], aux620)
watchelement([po], alloc[5, 3], aux624)
ineq(aux621,aux620,0)
ineq(aux622,aux620,0)
ineq(aux623,aux620,0)
ineq(aux624,aux617,0)
ineq(aux624,aux618,0)
ineq(aux624,aux619,0)
watchelement([po], alloc[5, 0], aux621)
watchelement([po], alloc[6, 0], aux625)
watchelement([po], alloc[5, 0], aux621)
watchelement([po], alloc[6, 1], aux626)
watchelement([po], alloc[5, 0], aux621)
watchelement([po], alloc[6, 2], aux627)
watchelement([po], alloc[5, 0], aux621)
watchelement([po], alloc[6, 3], aux628)
ineq(aux625,aux621,0)
ineq(aux626,aux621,0)
ineq(aux627,aux621,0)
watchelement([po], alloc[5, 1], aux622)
watchelement([po], alloc[6, 0], aux625)
watchelement([po], alloc[5, 1], aux622)
watchelement([po], alloc[6, 1], aux626)
watchelement([po], alloc[5, 1], aux622)
watchelement([po], alloc[6, 2], aux627)
watchelement([po], alloc[5, 1], aux622)
watchelement([po], alloc[6, 3], aux628)
ineq(aux625,aux622,0)
ineq(aux626,aux622,0)
ineq(aux627,aux622,0)
watchelement([po], alloc[5, 2], aux623)
watchelement([po], alloc[6, 0], aux625)
watchelement([po], alloc[5, 2], aux623)
watchelement([po], alloc[6, 1], aux626)
watchelement([po], alloc[5, 2], aux623)
watchelement([po], alloc[6, 2], aux627)
watchelement([po], alloc[5, 2], aux623)
watchelement([po], alloc[6, 3], aux628)
ineq(aux625,aux623,0)
ineq(aux626,aux623,0)
ineq(aux627,aux623,0)
watchelement([po], alloc[5, 3], aux624)
watchelement([po], alloc[6, 0], aux625)
watchelement([po], alloc[5, 3], aux624)
watchelement([po], alloc[6, 1], aux626)
watchelement([po], alloc[5, 3], aux624)
watchelement([po], alloc[6, 2], aux627)
watchelement([po], alloc[5, 3], aux624)
watchelement([po], alloc[6, 3], aux628)
ineq(aux625,aux624,0)
ineq(aux626,aux624,0)
ineq(aux627,aux624,0)
ineq(aux628,aux621,0)
ineq(aux628,aux622,0)
ineq(aux628,aux623,0)
watchelement([po], alloc[6, 0], aux625)
watchelement([po], alloc[7, 0], aux629)
watchelement([po], alloc[6, 0], aux625)
watchelement([po], alloc[7, 1], aux630)
watchelement([po], alloc[6, 0], aux625)
watchelement([po], alloc[7, 2], aux631)
watchelement([po], alloc[6, 0], aux625)
watchelement([po], alloc[7, 3], aux632)
ineq(aux629,aux625,0)
ineq(aux630,aux625,0)
ineq(aux631,aux625,0)
watchelement([po], alloc[6, 1], aux626)
watchelement([po], alloc[7, 0], aux629)
watchelement([po], alloc[6, 1], aux626)
watchelement([po], alloc[7, 1], aux630)
watchelement([po], alloc[6, 1], aux626)
watchelement([po], alloc[7, 2], aux631)
watchelement([po], alloc[6, 1], aux626)
watchelement([po], alloc[7, 3], aux632)
ineq(aux629,aux626,0)
ineq(aux630,aux626,0)
ineq(aux631,aux626,0)
watchelement([po], alloc[6, 2], aux627)
watchelement([po], alloc[7, 0], aux629)
watchelement([po], alloc[6, 2], aux627)
watchelement([po], alloc[7, 1], aux630)
watchelement([po], alloc[6, 2], aux627)
watchelement([po], alloc[7, 2], aux631)
watchelement([po], alloc[6, 2], aux627)
watchelement([po], alloc[7, 3], aux632)
ineq(aux629,aux627,0)
ineq(aux630,aux627,0)
ineq(aux631,aux627,0)
watchelement([po], alloc[6, 3], aux628)
watchelement([po], alloc[7, 0], aux629)
watchelement([po], alloc[6, 3], aux628)
watchelement([po], alloc[7, 1], aux630)
watchelement([po], alloc[6, 3], aux628)
watchelement([po], alloc[7, 2], aux631)
watchelement([po], alloc[6, 3], aux628)
watchelement([po], alloc[7, 3], aux632)
ineq(aux629,aux628,0)
ineq(aux630,aux628,0)
ineq(aux631,aux628,0)
ineq(aux632,aux625,0)
ineq(aux632,aux626,0)
ineq(aux632,aux627,0)
watchelement([po], alloc[7, 0], aux629)
watchelement([po], alloc[8, 0], aux633)
watchelement([po], alloc[7, 0], aux629)
watchelement([po], alloc[8, 1], aux634)
watchelement([po], alloc[7, 0], aux629)
watchelement([po], alloc[8, 2], aux635)
watchelement([po], alloc[7, 0], aux629)
watchelement([po], alloc[8, 3], aux636)
ineq(aux633,aux629,0)
ineq(aux634,aux629,0)
ineq(aux635,aux629,0)
watchelement([po], alloc[7, 1], aux630)
watchelement([po], alloc[8, 0], aux633)
watchelement([po], alloc[7, 1], aux630)
watchelement([po], alloc[8, 1], aux634)
watchelement([po], alloc[7, 1], aux630)
watchelement([po], alloc[8, 2], aux635)
watchelement([po], alloc[7, 1], aux630)
watchelement([po], alloc[8, 3], aux636)
ineq(aux633,aux630,0)
ineq(aux634,aux630,0)
ineq(aux635,aux630,0)
watchelement([po], alloc[7, 2], aux631)
watchelement([po], alloc[8, 0], aux633)
watchelement([po], alloc[7, 2], aux631)
watchelement([po], alloc[8, 1], aux634)
watchelement([po], alloc[7, 2], aux631)
watchelement([po], alloc[8, 2], aux635)
watchelement([po], alloc[7, 2], aux631)
watchelement([po], alloc[8, 3], aux636)
ineq(aux633,aux631,0)
ineq(aux634,aux631,0)
ineq(aux635,aux631,0)
watchelement([po], alloc[7, 3], aux632)
watchelement([po], alloc[8, 0], aux633)
watchelement([po], alloc[7, 3], aux632)
watchelement([po], alloc[8, 1], aux634)
watchelement([po], alloc[7, 3], aux632)
watchelement([po], alloc[8, 2], aux635)
watchelement([po], alloc[7, 3], aux632)
watchelement([po], alloc[8, 3], aux636)
ineq(aux633,aux632,0)
ineq(aux634,aux632,0)
ineq(aux635,aux632,0)
ineq(aux636,aux629,0)
ineq(aux636,aux630,0)
ineq(aux636,aux631,0)
watchelement([po], alloc[8, 0], aux633)
watchelement([po], alloc[9, 0], aux637)
watchelement([po], alloc[8, 0], aux633)
watchelement([po], alloc[9, 1], aux638)
watchelement([po], alloc[8, 0], aux633)
watchelement([po], alloc[9, 2], aux639)
watchelement([po], alloc[8, 0], aux633)
watchelement([po], alloc[9, 3], aux640)
ineq(aux637,aux633,0)
ineq(aux638,aux633,0)
ineq(aux639,aux633,0)
watchelement([po], alloc[8, 1], aux634)
watchelement([po], alloc[9, 0], aux637)
watchelement([po], alloc[8, 1], aux634)
watchelement([po], alloc[9, 1], aux638)
watchelement([po], alloc[8, 1], aux634)
watchelement([po], alloc[9, 2], aux639)
watchelement([po], alloc[8, 1], aux634)
watchelement([po], alloc[9, 3], aux640)
ineq(aux637,aux634,0)
ineq(aux638,aux634,0)
ineq(aux639,aux634,0)
watchelement([po], alloc[8, 2], aux635)
watchelement([po], alloc[9, 0], aux637)
watchelement([po], alloc[8, 2], aux635)
watchelement([po], alloc[9, 1], aux638)
watchelement([po], alloc[8, 2], aux635)
watchelement([po], alloc[9, 2], aux639)
watchelement([po], alloc[8, 2], aux635)
watchelement([po], alloc[9, 3], aux640)
ineq(aux637,aux635,0)
ineq(aux638,aux635,0)
ineq(aux639,aux635,0)
watchelement([po], alloc[8, 3], aux636)
watchelement([po], alloc[9, 0], aux637)
watchelement([po], alloc[8, 3], aux636)
watchelement([po], alloc[9, 1], aux638)
watchelement([po], alloc[8, 3], aux636)
watchelement([po], alloc[9, 2], aux639)
watchelement([po], alloc[8, 3], aux636)
watchelement([po], alloc[9, 3], aux640)
ineq(aux637,aux636,0)
ineq(aux638,aux636,0)
ineq(aux639,aux636,0)
ineq(aux640,aux633,0)
ineq(aux640,aux634,0)
ineq(aux640,aux635,0)
watchelement([po], alloc[9, 0], aux637)
watchelement([po], alloc[10, 0], aux641)
watchelement([po], alloc[9, 0], aux637)
watchelement([po], alloc[10, 1], aux642)
watchelement([po], alloc[9, 0], aux637)
watchelement([po], alloc[10, 2], aux643)
watchelement([po], alloc[9, 0], aux637)
watchelement([po], alloc[10, 3], aux644)
ineq(aux641,aux637,0)
ineq(aux642,aux637,0)
ineq(aux643,aux637,0)
watchelement([po], alloc[9, 1], aux638)
watchelement([po], alloc[10, 0], aux641)
watchelement([po], alloc[9, 1], aux638)
watchelement([po], alloc[10, 1], aux642)
watchelement([po], alloc[9, 1], aux638)
watchelement([po], alloc[10, 2], aux643)
watchelement([po], alloc[9, 1], aux638)
watchelement([po], alloc[10, 3], aux644)
ineq(aux641,aux638,0)
ineq(aux642,aux638,0)
ineq(aux643,aux638,0)
watchelement([po], alloc[9, 2], aux639)
watchelement([po], alloc[10, 0], aux641)
watchelement([po], alloc[9, 2], aux639)
watchelement([po], alloc[10, 1], aux642)
watchelement([po], alloc[9, 2], aux639)
watchelement([po], alloc[10, 2], aux643)
watchelement([po], alloc[9, 2], aux639)
watchelement([po], alloc[10, 3], aux644)
ineq(aux641,aux639,0)
ineq(aux642,aux639,0)
ineq(aux643,aux639,0)
watchelement([po], alloc[9, 3], aux640)
watchelement([po], alloc[10, 0], aux641)
watchelement([po], alloc[9, 3], aux640)
watchelement([po], alloc[10, 1], aux642)
watchelement([po], alloc[9, 3], aux640)
watchelement([po], alloc[10, 2], aux643)
watchelement([po], alloc[9, 3], aux640)
watchelement([po], alloc[10, 3], aux644)
ineq(aux641,aux640,0)
ineq(aux642,aux640,0)
ineq(aux643,aux640,0)
ineq(aux644,aux637,0)
ineq(aux644,aux638,0)
ineq(aux644,aux639,0)
watchelement([po], alloc[10, 0], aux641)
watchelement([po], alloc[11, 0], aux645)
watchelement([po], alloc[10, 0], aux641)
watchelement([po], alloc[11, 1], aux646)
watchelement([po], alloc[10, 0], aux641)
watchelement([po], alloc[11, 2], aux647)
watchelement([po], alloc[10, 0], aux641)
watchelement([po], alloc[11, 3], aux648)
ineq(aux645,aux641,0)
ineq(aux646,aux641,0)
ineq(aux647,aux641,0)
watchelement([po], alloc[10, 1], aux642)
watchelement([po], alloc[11, 0], aux645)
watchelement([po], alloc[10, 1], aux642)
watchelement([po], alloc[11, 1], aux646)
watchelement([po], alloc[10, 1], aux642)
watchelement([po], alloc[11, 2], aux647)
watchelement([po], alloc[10, 1], aux642)
watchelement([po], alloc[11, 3], aux648)
ineq(aux645,aux642,0)
ineq(aux646,aux642,0)
ineq(aux647,aux642,0)
watchelement([po], alloc[10, 2], aux643)
watchelement([po], alloc[11, 0], aux645)
watchelement([po], alloc[10, 2], aux643)
watchelement([po], alloc[11, 1], aux646)
watchelement([po], alloc[10, 2], aux643)
watchelement([po], alloc[11, 2], aux647)
watchelement([po], alloc[10, 2], aux643)
watchelement([po], alloc[11, 3], aux648)
ineq(aux645,aux643,0)
ineq(aux646,aux643,0)
ineq(aux647,aux643,0)
watchelement([po], alloc[10, 3], aux644)
watchelement([po], alloc[11, 0], aux645)
watchelement([po], alloc[10, 3], aux644)
watchelement([po], alloc[11, 1], aux646)
watchelement([po], alloc[10, 3], aux644)
watchelement([po], alloc[11, 2], aux647)
watchelement([po], alloc[10, 3], aux644)
watchelement([po], alloc[11, 3], aux648)
ineq(aux645,aux644,0)
ineq(aux646,aux644,0)
ineq(aux647,aux644,0)
ineq(aux648,aux641,0)
ineq(aux648,aux642,0)
ineq(aux648,aux643,0)
watchelement([po], alloc[11, 0], aux645)
watchelement([po], alloc[12, 0], aux649)
watchelement([po], alloc[11, 0], aux645)
watchelement([po], alloc[12, 1], aux650)
watchelement([po], alloc[11, 0], aux645)
watchelement([po], alloc[12, 2], aux651)
watchelement([po], alloc[11, 0], aux645)
watchelement([po], alloc[12, 3], aux652)
ineq(aux649,aux645,0)
ineq(aux650,aux645,0)
ineq(aux651,aux645,0)
watchelement([po], alloc[11, 1], aux646)
watchelement([po], alloc[12, 0], aux649)
watchelement([po], alloc[11, 1], aux646)
watchelement([po], alloc[12, 1], aux650)
watchelement([po], alloc[11, 1], aux646)
watchelement([po], alloc[12, 2], aux651)
watchelement([po], alloc[11, 1], aux646)
watchelement([po], alloc[12, 3], aux652)
ineq(aux649,aux646,0)
ineq(aux650,aux646,0)
ineq(aux651,aux646,0)
watchelement([po], alloc[11, 2], aux647)
watchelement([po], alloc[12, 0], aux649)
watchelement([po], alloc[11, 2], aux647)
watchelement([po], alloc[12, 1], aux650)
watchelement([po], alloc[11, 2], aux647)
watchelement([po], alloc[12, 2], aux651)
watchelement([po], alloc[11, 2], aux647)
watchelement([po], alloc[12, 3], aux652)
ineq(aux649,aux647,0)
ineq(aux650,aux647,0)
ineq(aux651,aux647,0)
watchelement([po], alloc[11, 3], aux648)
watchelement([po], alloc[12, 0], aux649)
watchelement([po], alloc[11, 3], aux648)
watchelement([po], alloc[12, 1], aux650)
watchelement([po], alloc[11, 3], aux648)
watchelement([po], alloc[12, 2], aux651)
watchelement([po], alloc[11, 3], aux648)
watchelement([po], alloc[12, 3], aux652)
ineq(aux649,aux648,0)
ineq(aux650,aux648,0)
ineq(aux651,aux648,0)
ineq(aux652,aux645,0)
ineq(aux652,aux646,0)
ineq(aux652,aux647,0)
watchelement([po], alloc[12, 0], aux649)
watchelement([po], alloc[13, 0], aux653)
watchelement([po], alloc[12, 0], aux649)
watchelement([po], alloc[13, 1], aux654)
watchelement([po], alloc[12, 0], aux649)
watchelement([po], alloc[13, 2], aux655)
watchelement([po], alloc[12, 0], aux649)
watchelement([po], alloc[13, 3], aux656)
ineq(aux653,aux649,0)
ineq(aux654,aux649,0)
ineq(aux655,aux649,0)
watchelement([po], alloc[12, 1], aux650)
watchelement([po], alloc[13, 0], aux653)
watchelement([po], alloc[12, 1], aux650)
watchelement([po], alloc[13, 1], aux654)
watchelement([po], alloc[12, 1], aux650)
watchelement([po], alloc[13, 2], aux655)
watchelement([po], alloc[12, 1], aux650)
watchelement([po], alloc[13, 3], aux656)
ineq(aux653,aux650,0)
ineq(aux654,aux650,0)
ineq(aux655,aux650,0)
watchelement([po], alloc[12, 2], aux651)
watchelement([po], alloc[13, 0], aux653)
watchelement([po], alloc[12, 2], aux651)
watchelement([po], alloc[13, 1], aux654)
watchelement([po], alloc[12, 2], aux651)
watchelement([po], alloc[13, 2], aux655)
watchelement([po], alloc[12, 2], aux651)
watchelement([po], alloc[13, 3], aux656)
ineq(aux653,aux651,0)
ineq(aux654,aux651,0)
ineq(aux655,aux651,0)
watchelement([po], alloc[12, 3], aux652)
watchelement([po], alloc[13, 0], aux653)
watchelement([po], alloc[12, 3], aux652)
watchelement([po], alloc[13, 1], aux654)
watchelement([po], alloc[12, 3], aux652)
watchelement([po], alloc[13, 2], aux655)
watchelement([po], alloc[12, 3], aux652)
watchelement([po], alloc[13, 3], aux656)
ineq(aux653,aux652,0)
ineq(aux654,aux652,0)
ineq(aux655,aux652,0)
ineq(aux656,aux649,0)
ineq(aux656,aux650,0)
ineq(aux656,aux651,0)
watchelement([po], alloc[13, 0], aux653)
watchelement([po], alloc[14, 0], aux657)
watchelement([po], alloc[13, 0], aux653)
watchelement([po], alloc[14, 1], aux658)
watchelement([po], alloc[13, 0], aux653)
watchelement([po], alloc[14, 2], aux659)
watchelement([po], alloc[13, 0], aux653)
watchelement([po], alloc[14, 3], aux660)
ineq(aux657,aux653,0)
ineq(aux658,aux653,0)
ineq(aux659,aux653,0)
watchelement([po], alloc[13, 1], aux654)
watchelement([po], alloc[14, 0], aux657)
watchelement([po], alloc[13, 1], aux654)
watchelement([po], alloc[14, 1], aux658)
watchelement([po], alloc[13, 1], aux654)
watchelement([po], alloc[14, 2], aux659)
watchelement([po], alloc[13, 1], aux654)
watchelement([po], alloc[14, 3], aux660)
ineq(aux657,aux654,0)
ineq(aux658,aux654,0)
ineq(aux659,aux654,0)
watchelement([po], alloc[13, 2], aux655)
watchelement([po], alloc[14, 0], aux657)
watchelement([po], alloc[13, 2], aux655)
watchelement([po], alloc[14, 1], aux658)
watchelement([po], alloc[13, 2], aux655)
watchelement([po], alloc[14, 2], aux659)
watchelement([po], alloc[13, 2], aux655)
watchelement([po], alloc[14, 3], aux660)
ineq(aux657,aux655,0)
ineq(aux658,aux655,0)
ineq(aux659,aux655,0)
watchelement([po], alloc[13, 3], aux656)
watchelement([po], alloc[14, 0], aux657)
watchelement([po], alloc[13, 3], aux656)
watchelement([po], alloc[14, 1], aux658)
watchelement([po], alloc[13, 3], aux656)
watchelement([po], alloc[14, 2], aux659)
watchelement([po], alloc[13, 3], aux656)
watchelement([po], alloc[14, 3], aux660)
ineq(aux657,aux656,0)
ineq(aux658,aux656,0)
ineq(aux659,aux656,0)
ineq(aux660,aux653,0)
ineq(aux660,aux654,0)
ineq(aux660,aux655,0)
watchelement([po], alloc[14, 0], aux657)
watchelement([po], alloc[15, 0], aux661)
watchelement([po], alloc[14, 0], aux657)
watchelement([po], alloc[15, 1], aux662)
watchelement([po], alloc[14, 0], aux657)
watchelement([po], alloc[15, 2], aux663)
watchelement([po], alloc[14, 0], aux657)
watchelement([po], alloc[15, 3], aux664)
ineq(aux661,aux657,0)
ineq(aux662,aux657,0)
ineq(aux663,aux657,0)
watchelement([po], alloc[14, 1], aux658)
watchelement([po], alloc[15, 0], aux661)
watchelement([po], alloc[14, 1], aux658)
watchelement([po], alloc[15, 1], aux662)
watchelement([po], alloc[14, 1], aux658)
watchelement([po], alloc[15, 2], aux663)
watchelement([po], alloc[14, 1], aux658)
watchelement([po], alloc[15, 3], aux664)
ineq(aux661,aux658,0)
ineq(aux662,aux658,0)
ineq(aux663,aux658,0)
watchelement([po], alloc[14, 2], aux659)
watchelement([po], alloc[15, 0], aux661)
watchelement([po], alloc[14, 2], aux659)
watchelement([po], alloc[15, 1], aux662)
watchelement([po], alloc[14, 2], aux659)
watchelement([po], alloc[15, 2], aux663)
watchelement([po], alloc[14, 2], aux659)
watchelement([po], alloc[15, 3], aux664)
ineq(aux661,aux659,0)
ineq(aux662,aux659,0)
ineq(aux663,aux659,0)
watchelement([po], alloc[14, 3], aux660)
watchelement([po], alloc[15, 0], aux661)
watchelement([po], alloc[14, 3], aux660)
watchelement([po], alloc[15, 1], aux662)
watchelement([po], alloc[14, 3], aux660)
watchelement([po], alloc[15, 2], aux663)
watchelement([po], alloc[14, 3], aux660)
watchelement([po], alloc[15, 3], aux664)
ineq(aux661,aux660,0)
ineq(aux662,aux660,0)
ineq(aux663,aux660,0)
ineq(aux664,aux657,0)
ineq(aux664,aux658,0)
ineq(aux664,aux659,0)
watchelement([po], alloc[15, 0], aux661)
watchelement([po], alloc[16, 0], aux665)
watchelement([po], alloc[15, 0], aux661)
watchelement([po], alloc[16, 1], aux666)
watchelement([po], alloc[15, 0], aux661)
watchelement([po], alloc[16, 2], aux667)
watchelement([po], alloc[15, 0], aux661)
watchelement([po], alloc[16, 3], aux668)
ineq(aux665,aux661,0)
ineq(aux666,aux661,0)
ineq(aux667,aux661,0)
watchelement([po], alloc[15, 1], aux662)
watchelement([po], alloc[16, 0], aux665)
watchelement([po], alloc[15, 1], aux662)
watchelement([po], alloc[16, 1], aux666)
watchelement([po], alloc[15, 1], aux662)
watchelement([po], alloc[16, 2], aux667)
watchelement([po], alloc[15, 1], aux662)
watchelement([po], alloc[16, 3], aux668)
ineq(aux665,aux662,0)
ineq(aux666,aux662,0)
ineq(aux667,aux662,0)
watchelement([po], alloc[15, 2], aux663)
watchelement([po], alloc[16, 0], aux665)
watchelement([po], alloc[15, 2], aux663)
watchelement([po], alloc[16, 1], aux666)
watchelement([po], alloc[15, 2], aux663)
watchelement([po], alloc[16, 2], aux667)
watchelement([po], alloc[15, 2], aux663)
watchelement([po], alloc[16, 3], aux668)
ineq(aux665,aux663,0)
ineq(aux666,aux663,0)
ineq(aux667,aux663,0)
watchelement([po], alloc[15, 3], aux664)
watchelement([po], alloc[16, 0], aux665)
watchelement([po], alloc[15, 3], aux664)
watchelement([po], alloc[16, 1], aux666)
watchelement([po], alloc[15, 3], aux664)
watchelement([po], alloc[16, 2], aux667)
watchelement([po], alloc[15, 3], aux664)
watchelement([po], alloc[16, 3], aux668)
ineq(aux665,aux664,0)
ineq(aux666,aux664,0)
ineq(aux667,aux664,0)
ineq(aux668,aux661,0)
ineq(aux668,aux662,0)
ineq(aux668,aux663,0)
watchelement([po], alloc[16, 0], aux665)
watchelement([po], alloc[17, 0], aux669)
watchelement([po], alloc[16, 0], aux665)
watchelement([po], alloc[17, 1], aux670)
watchelement([po], alloc[16, 0], aux665)
watchelement([po], alloc[17, 2], aux671)
watchelement([po], alloc[16, 0], aux665)
watchelement([po], alloc[17, 3], aux672)
ineq(aux669,aux665,0)
ineq(aux670,aux665,0)
ineq(aux671,aux665,0)
watchelement([po], alloc[16, 1], aux666)
watchelement([po], alloc[17, 0], aux669)
watchelement([po], alloc[16, 1], aux666)
watchelement([po], alloc[17, 1], aux670)
watchelement([po], alloc[16, 1], aux666)
watchelement([po], alloc[17, 2], aux671)
watchelement([po], alloc[16, 1], aux666)
watchelement([po], alloc[17, 3], aux672)
ineq(aux669,aux666,0)
ineq(aux670,aux666,0)
ineq(aux671,aux666,0)
watchelement([po], alloc[16, 2], aux667)
watchelement([po], alloc[17, 0], aux669)
watchelement([po], alloc[16, 2], aux667)
watchelement([po], alloc[17, 1], aux670)
watchelement([po], alloc[16, 2], aux667)
watchelement([po], alloc[17, 2], aux671)
watchelement([po], alloc[16, 2], aux667)
watchelement([po], alloc[17, 3], aux672)
ineq(aux669,aux667,0)
ineq(aux670,aux667,0)
ineq(aux671,aux667,0)
watchelement([po], alloc[16, 3], aux668)
watchelement([po], alloc[17, 0], aux669)
watchelement([po], alloc[16, 3], aux668)
watchelement([po], alloc[17, 1], aux670)
watchelement([po], alloc[16, 3], aux668)
watchelement([po], alloc[17, 2], aux671)
watchelement([po], alloc[16, 3], aux668)
watchelement([po], alloc[17, 3], aux672)
ineq(aux669,aux668,0)
ineq(aux670,aux668,0)
ineq(aux671,aux668,0)
ineq(aux672,aux665,0)
ineq(aux672,aux666,0)
ineq(aux672,aux667,0)
watchelement([po], alloc[17, 0], aux669)
watchelement([po], alloc[18, 0], aux673)
watchelement([po], alloc[17, 0], aux669)
watchelement([po], alloc[18, 1], aux674)
watchelement([po], alloc[17, 0], aux669)
watchelement([po], alloc[18, 2], aux675)
watchelement([po], alloc[17, 0], aux669)
watchelement([po], alloc[18, 3], aux676)
ineq(aux673,aux669,0)
ineq(aux674,aux669,0)
ineq(aux675,aux669,0)
watchelement([po], alloc[17, 1], aux670)
watchelement([po], alloc[18, 0], aux673)
watchelement([po], alloc[17, 1], aux670)
watchelement([po], alloc[18, 1], aux674)
watchelement([po], alloc[17, 1], aux670)
watchelement([po], alloc[18, 2], aux675)
watchelement([po], alloc[17, 1], aux670)
watchelement([po], alloc[18, 3], aux676)
ineq(aux673,aux670,0)
ineq(aux674,aux670,0)
ineq(aux675,aux670,0)
watchelement([po], alloc[17, 2], aux671)
watchelement([po], alloc[18, 0], aux673)
watchelement([po], alloc[17, 2], aux671)
watchelement([po], alloc[18, 1], aux674)
watchelement([po], alloc[17, 2], aux671)
watchelement([po], alloc[18, 2], aux675)
watchelement([po], alloc[17, 2], aux671)
watchelement([po], alloc[18, 3], aux676)
ineq(aux673,aux671,0)
ineq(aux674,aux671,0)
ineq(aux675,aux671,0)
watchelement([po], alloc[17, 3], aux672)
watchelement([po], alloc[18, 0], aux673)
watchelement([po], alloc[17, 3], aux672)
watchelement([po], alloc[18, 1], aux674)
watchelement([po], alloc[17, 3], aux672)
watchelement([po], alloc[18, 2], aux675)
watchelement([po], alloc[17, 3], aux672)
watchelement([po], alloc[18, 3], aux676)
ineq(aux673,aux672,0)
ineq(aux674,aux672,0)
ineq(aux675,aux672,0)
ineq(aux676,aux669,0)
ineq(aux676,aux670,0)
ineq(aux676,aux671,0)
watchelement([po], alloc[18, 0], aux673)
watchelement([po], alloc[19, 0], aux677)
watchelement([po], alloc[18, 0], aux673)
watchelement([po], alloc[19, 1], aux678)
watchelement([po], alloc[18, 0], aux673)
watchelement([po], alloc[19, 2], aux679)
watchelement([po], alloc[18, 0], aux673)
watchelement([po], alloc[19, 3], aux680)
ineq(aux677,aux673,0)
ineq(aux678,aux673,0)
ineq(aux679,aux673,0)
watchelement([po], alloc[18, 1], aux674)
watchelement([po], alloc[19, 0], aux677)
watchelement([po], alloc[18, 1], aux674)
watchelement([po], alloc[19, 1], aux678)
watchelement([po], alloc[18, 1], aux674)
watchelement([po], alloc[19, 2], aux679)
watchelement([po], alloc[18, 1], aux674)
watchelement([po], alloc[19, 3], aux680)
ineq(aux677,aux674,0)
ineq(aux678,aux674,0)
ineq(aux679,aux674,0)
watchelement([po], alloc[18, 2], aux675)
watchelement([po], alloc[19, 0], aux677)
watchelement([po], alloc[18, 2], aux675)
watchelement([po], alloc[19, 1], aux678)
watchelement([po], alloc[18, 2], aux675)
watchelement([po], alloc[19, 2], aux679)
watchelement([po], alloc[18, 2], aux675)
watchelement([po], alloc[19, 3], aux680)
ineq(aux677,aux675,0)
ineq(aux678,aux675,0)
ineq(aux679,aux675,0)
watchelement([po], alloc[18, 3], aux676)
watchelement([po], alloc[19, 0], aux677)
watchelement([po], alloc[18, 3], aux676)
watchelement([po], alloc[19, 1], aux678)
watchelement([po], alloc[18, 3], aux676)
watchelement([po], alloc[19, 2], aux679)
watchelement([po], alloc[18, 3], aux676)
watchelement([po], alloc[19, 3], aux680)
ineq(aux677,aux676,0)
ineq(aux678,aux676,0)
ineq(aux679,aux676,0)
ineq(aux680,aux673,0)
ineq(aux680,aux674,0)
ineq(aux680,aux675,0)
watchelement([po], alloc[19, 0], aux677)
watchelement([po], alloc[20, 0], aux681)
watchelement([po], alloc[19, 0], aux677)
watchelement([po], alloc[20, 1], aux682)
watchelement([po], alloc[19, 0], aux677)
watchelement([po], alloc[20, 2], aux683)
watchelement([po], alloc[19, 0], aux677)
watchelement([po], alloc[20, 3], aux684)
ineq(aux681,aux677,0)
ineq(aux682,aux677,0)
ineq(aux683,aux677,0)
watchelement([po], alloc[19, 1], aux678)
watchelement([po], alloc[20, 0], aux681)
watchelement([po], alloc[19, 1], aux678)
watchelement([po], alloc[20, 1], aux682)
watchelement([po], alloc[19, 1], aux678)
watchelement([po], alloc[20, 2], aux683)
watchelement([po], alloc[19, 1], aux678)
watchelement([po], alloc[20, 3], aux684)
ineq(aux681,aux678,0)
ineq(aux682,aux678,0)
ineq(aux683,aux678,0)
watchelement([po], alloc[19, 2], aux679)
watchelement([po], alloc[20, 0], aux681)
watchelement([po], alloc[19, 2], aux679)
watchelement([po], alloc[20, 1], aux682)
watchelement([po], alloc[19, 2], aux679)
watchelement([po], alloc[20, 2], aux683)
watchelement([po], alloc[19, 2], aux679)
watchelement([po], alloc[20, 3], aux684)
ineq(aux681,aux679,0)
ineq(aux682,aux679,0)
ineq(aux683,aux679,0)
watchelement([po], alloc[19, 3], aux680)
watchelement([po], alloc[20, 0], aux681)
watchelement([po], alloc[19, 3], aux680)
watchelement([po], alloc[20, 1], aux682)
watchelement([po], alloc[19, 3], aux680)
watchelement([po], alloc[20, 2], aux683)
watchelement([po], alloc[19, 3], aux680)
watchelement([po], alloc[20, 3], aux684)
ineq(aux681,aux680,0)
ineq(aux682,aux680,0)
ineq(aux683,aux680,0)
ineq(aux684,aux677,0)
ineq(aux684,aux678,0)
ineq(aux684,aux679,0)
watchelement([po], alloc[20, 0], aux681)
watchelement([po], alloc[21, 0], aux685)
watchelement([po], alloc[20, 0], aux681)
watchelement([po], alloc[21, 1], aux686)
watchelement([po], alloc[20, 0], aux681)
watchelement([po], alloc[21, 2], aux687)
watchelement([po], alloc[20, 0], aux681)
watchelement([po], alloc[21, 3], aux688)
ineq(aux685,aux681,0)
ineq(aux686,aux681,0)
ineq(aux687,aux681,0)
watchelement([po], alloc[20, 1], aux682)
watchelement([po], alloc[21, 0], aux685)
watchelement([po], alloc[20, 1], aux682)
watchelement([po], alloc[21, 1], aux686)
watchelement([po], alloc[20, 1], aux682)
watchelement([po], alloc[21, 2], aux687)
watchelement([po], alloc[20, 1], aux682)
watchelement([po], alloc[21, 3], aux688)
ineq(aux685,aux682,0)
ineq(aux686,aux682,0)
ineq(aux687,aux682,0)
watchelement([po], alloc[20, 2], aux683)
watchelement([po], alloc[21, 0], aux685)
watchelement([po], alloc[20, 2], aux683)
watchelement([po], alloc[21, 1], aux686)
watchelement([po], alloc[20, 2], aux683)
watchelement([po], alloc[21, 2], aux687)
watchelement([po], alloc[20, 2], aux683)
watchelement([po], alloc[21, 3], aux688)
ineq(aux685,aux683,0)
ineq(aux686,aux683,0)
ineq(aux687,aux683,0)
watchelement([po], alloc[20, 3], aux684)
watchelement([po], alloc[21, 0], aux685)
watchelement([po], alloc[20, 3], aux684)
watchelement([po], alloc[21, 1], aux686)
watchelement([po], alloc[20, 3], aux684)
watchelement([po], alloc[21, 2], aux687)
watchelement([po], alloc[20, 3], aux684)
watchelement([po], alloc[21, 3], aux688)
ineq(aux685,aux684,0)
ineq(aux686,aux684,0)
ineq(aux687,aux684,0)
ineq(aux688,aux681,0)
ineq(aux688,aux682,0)
ineq(aux688,aux683,0)
watchelement([po], alloc[21, 0], aux685)
watchelement([po], alloc[22, 0], aux689)
watchelement([po], alloc[21, 0], aux685)
watchelement([po], alloc[22, 1], aux690)
watchelement([po], alloc[21, 0], aux685)
watchelement([po], alloc[22, 2], aux691)
watchelement([po], alloc[21, 0], aux685)
watchelement([po], alloc[22, 3], aux692)
ineq(aux689,aux685,0)
ineq(aux690,aux685,0)
ineq(aux691,aux685,0)
watchelement([po], alloc[21, 1], aux686)
watchelement([po], alloc[22, 0], aux689)
watchelement([po], alloc[21, 1], aux686)
watchelement([po], alloc[22, 1], aux690)
watchelement([po], alloc[21, 1], aux686)
watchelement([po], alloc[22, 2], aux691)
watchelement([po], alloc[21, 1], aux686)
watchelement([po], alloc[22, 3], aux692)
ineq(aux689,aux686,0)
ineq(aux690,aux686,0)
ineq(aux691,aux686,0)
watchelement([po], alloc[21, 2], aux687)
watchelement([po], alloc[22, 0], aux689)
watchelement([po], alloc[21, 2], aux687)
watchelement([po], alloc[22, 1], aux690)
watchelement([po], alloc[21, 2], aux687)
watchelement([po], alloc[22, 2], aux691)
watchelement([po], alloc[21, 2], aux687)
watchelement([po], alloc[22, 3], aux692)
ineq(aux689,aux687,0)
ineq(aux690,aux687,0)
ineq(aux691,aux687,0)
watchelement([po], alloc[21, 3], aux688)
watchelement([po], alloc[22, 0], aux689)
watchelement([po], alloc[21, 3], aux688)
watchelement([po], alloc[22, 1], aux690)
watchelement([po], alloc[21, 3], aux688)
watchelement([po], alloc[22, 2], aux691)
watchelement([po], alloc[21, 3], aux688)
watchelement([po], alloc[22, 3], aux692)
ineq(aux689,aux688,0)
ineq(aux690,aux688,0)
ineq(aux691,aux688,0)
ineq(aux692,aux685,0)
ineq(aux692,aux686,0)
ineq(aux692,aux687,0)
watchelement([po], alloc[22, 0], aux689)
watchelement([po], alloc[23, 0], aux693)
watchelement([po], alloc[22, 0], aux689)
watchelement([po], alloc[23, 1], aux694)
watchelement([po], alloc[22, 0], aux689)
watchelement([po], alloc[23, 2], aux695)
watchelement([po], alloc[22, 0], aux689)
watchelement([po], alloc[23, 3], aux696)
ineq(aux693,aux689,0)
ineq(aux694,aux689,0)
ineq(aux695,aux689,0)
watchelement([po], alloc[22, 1], aux690)
watchelement([po], alloc[23, 0], aux693)
watchelement([po], alloc[22, 1], aux690)
watchelement([po], alloc[23, 1], aux694)
watchelement([po], alloc[22, 1], aux690)
watchelement([po], alloc[23, 2], aux695)
watchelement([po], alloc[22, 1], aux690)
watchelement([po], alloc[23, 3], aux696)
ineq(aux693,aux690,0)
ineq(aux694,aux690,0)
ineq(aux695,aux690,0)
watchelement([po], alloc[22, 2], aux691)
watchelement([po], alloc[23, 0], aux693)
watchelement([po], alloc[22, 2], aux691)
watchelement([po], alloc[23, 1], aux694)
watchelement([po], alloc[22, 2], aux691)
watchelement([po], alloc[23, 2], aux695)
watchelement([po], alloc[22, 2], aux691)
watchelement([po], alloc[23, 3], aux696)
ineq(aux693,aux691,0)
ineq(aux694,aux691,0)
ineq(aux695,aux691,0)
watchelement([po], alloc[22, 3], aux692)
watchelement([po], alloc[23, 0], aux693)
watchelement([po], alloc[22, 3], aux692)
watchelement([po], alloc[23, 1], aux694)
watchelement([po], alloc[22, 3], aux692)
watchelement([po], alloc[23, 2], aux695)
watchelement([po], alloc[22, 3], aux692)
watchelement([po], alloc[23, 3], aux696)
ineq(aux693,aux692,0)
ineq(aux694,aux692,0)
ineq(aux695,aux692,0)
ineq(aux696,aux689,0)
ineq(aux696,aux690,0)
ineq(aux696,aux691,0)
watchelement([po], alloc[23, 0], aux693)
watchelement([po], alloc[24, 0], aux697)
watchelement([po], alloc[23, 0], aux693)
watchelement([po], alloc[24, 1], aux698)
watchelement([po], alloc[23, 0], aux693)
watchelement([po], alloc[24, 2], aux699)
watchelement([po], alloc[23, 0], aux693)
watchelement([po], alloc[24, 3], aux700)
ineq(aux697,aux693,0)
ineq(aux698,aux693,0)
ineq(aux699,aux693,0)
watchelement([po], alloc[23, 1], aux694)
watchelement([po], alloc[24, 0], aux697)
watchelement([po], alloc[23, 1], aux694)
watchelement([po], alloc[24, 1], aux698)
watchelement([po], alloc[23, 1], aux694)
watchelement([po], alloc[24, 2], aux699)
watchelement([po], alloc[23, 1], aux694)
watchelement([po], alloc[24, 3], aux700)
ineq(aux697,aux694,0)
ineq(aux698,aux694,0)
ineq(aux699,aux694,0)
watchelement([po], alloc[23, 2], aux695)
watchelement([po], alloc[24, 0], aux697)
watchelement([po], alloc[23, 2], aux695)
watchelement([po], alloc[24, 1], aux698)
watchelement([po], alloc[23, 2], aux695)
watchelement([po], alloc[24, 2], aux699)
watchelement([po], alloc[23, 2], aux695)
watchelement([po], alloc[24, 3], aux700)
ineq(aux697,aux695,0)
ineq(aux698,aux695,0)
ineq(aux699,aux695,0)
watchelement([po], alloc[23, 3], aux696)
watchelement([po], alloc[24, 0], aux697)
watchelement([po], alloc[23, 3], aux696)
watchelement([po], alloc[24, 1], aux698)
watchelement([po], alloc[23, 3], aux696)
watchelement([po], alloc[24, 2], aux699)
watchelement([po], alloc[23, 3], aux696)
watchelement([po], alloc[24, 3], aux700)
ineq(aux697,aux696,0)
ineq(aux698,aux696,0)
ineq(aux699,aux696,0)
ineq(aux700,aux693,0)
ineq(aux700,aux694,0)
ineq(aux700,aux695,0)
watchelement([po], alloc[24, 0], aux697)
watchelement([po], alloc[25, 0], aux701)
watchelement([po], alloc[24, 0], aux697)
watchelement([po], alloc[25, 1], aux702)
watchelement([po], alloc[24, 0], aux697)
watchelement([po], alloc[25, 2], aux703)
watchelement([po], alloc[24, 0], aux697)
watchelement([po], alloc[25, 3], aux704)
ineq(aux701,aux697,0)
ineq(aux702,aux697,0)
ineq(aux703,aux697,0)
watchelement([po], alloc[24, 1], aux698)
watchelement([po], alloc[25, 0], aux701)
watchelement([po], alloc[24, 1], aux698)
watchelement([po], alloc[25, 1], aux702)
watchelement([po], alloc[24, 1], aux698)
watchelement([po], alloc[25, 2], aux703)
watchelement([po], alloc[24, 1], aux698)
watchelement([po], alloc[25, 3], aux704)
ineq(aux701,aux698,0)
ineq(aux702,aux698,0)
ineq(aux703,aux698,0)
watchelement([po], alloc[24, 2], aux699)
watchelement([po], alloc[25, 0], aux701)
watchelement([po], alloc[24, 2], aux699)
watchelement([po], alloc[25, 1], aux702)
watchelement([po], alloc[24, 2], aux699)
watchelement([po], alloc[25, 2], aux703)
watchelement([po], alloc[24, 2], aux699)
watchelement([po], alloc[25, 3], aux704)
ineq(aux701,aux699,0)
ineq(aux702,aux699,0)
ineq(aux703,aux699,0)
watchelement([po], alloc[24, 3], aux700)
watchelement([po], alloc[25, 0], aux701)
watchelement([po], alloc[24, 3], aux700)
watchelement([po], alloc[25, 1], aux702)
watchelement([po], alloc[24, 3], aux700)
watchelement([po], alloc[25, 2], aux703)
watchelement([po], alloc[24, 3], aux700)
watchelement([po], alloc[25, 3], aux704)
ineq(aux701,aux700,0)
ineq(aux702,aux700,0)
ineq(aux703,aux700,0)
ineq(aux704,aux697,0)
ineq(aux704,aux698,0)
ineq(aux704,aux699,0)
watchelement([po], alloc[25, 0], aux701)
watchelement([po], alloc[26, 0], aux705)
watchelement([po], alloc[25, 0], aux701)
watchelement([po], alloc[26, 1], aux706)
watchelement([po], alloc[25, 0], aux701)
watchelement([po], alloc[26, 2], aux707)
watchelement([po], alloc[25, 0], aux701)
watchelement([po], alloc[26, 3], aux708)
ineq(aux705,aux701,0)
ineq(aux706,aux701,0)
ineq(aux707,aux701,0)
watchelement([po], alloc[25, 1], aux702)
watchelement([po], alloc[26, 0], aux705)
watchelement([po], alloc[25, 1], aux702)
watchelement([po], alloc[26, 1], aux706)
watchelement([po], alloc[25, 1], aux702)
watchelement([po], alloc[26, 2], aux707)
watchelement([po], alloc[25, 1], aux702)
watchelement([po], alloc[26, 3], aux708)
ineq(aux705,aux702,0)
ineq(aux706,aux702,0)
ineq(aux707,aux702,0)
watchelement([po], alloc[25, 2], aux703)
watchelement([po], alloc[26, 0], aux705)
watchelement([po], alloc[25, 2], aux703)
watchelement([po], alloc[26, 1], aux706)
watchelement([po], alloc[25, 2], aux703)
watchelement([po], alloc[26, 2], aux707)
watchelement([po], alloc[25, 2], aux703)
watchelement([po], alloc[26, 3], aux708)
ineq(aux705,aux703,0)
ineq(aux706,aux703,0)
ineq(aux707,aux703,0)
watchelement([po], alloc[25, 3], aux704)
watchelement([po], alloc[26, 0], aux705)
watchelement([po], alloc[25, 3], aux704)
watchelement([po], alloc[26, 1], aux706)
watchelement([po], alloc[25, 3], aux704)
watchelement([po], alloc[26, 2], aux707)
watchelement([po], alloc[25, 3], aux704)
watchelement([po], alloc[26, 3], aux708)
ineq(aux705,aux704,0)
ineq(aux706,aux704,0)
ineq(aux707,aux704,0)
ineq(aux708,aux701,0)
ineq(aux708,aux702,0)
ineq(aux708,aux703,0)
watchelement([po], alloc[26, 0], aux705)
watchelement([po], alloc[27, 0], aux709)
watchelement([po], alloc[26, 0], aux705)
watchelement([po], alloc[27, 1], aux710)
watchelement([po], alloc[26, 0], aux705)
watchelement([po], alloc[27, 2], aux711)
watchelement([po], alloc[26, 0], aux705)
watchelement([po], alloc[27, 3], aux712)
ineq(aux709,aux705,0)
ineq(aux710,aux705,0)
ineq(aux711,aux705,0)
watchelement([po], alloc[26, 1], aux706)
watchelement([po], alloc[27, 0], aux709)
watchelement([po], alloc[26, 1], aux706)
watchelement([po], alloc[27, 1], aux710)
watchelement([po], alloc[26, 1], aux706)
watchelement([po], alloc[27, 2], aux711)
watchelement([po], alloc[26, 1], aux706)
watchelement([po], alloc[27, 3], aux712)
ineq(aux709,aux706,0)
ineq(aux710,aux706,0)
ineq(aux711,aux706,0)
watchelement([po], alloc[26, 2], aux707)
watchelement([po], alloc[27, 0], aux709)
watchelement([po], alloc[26, 2], aux707)
watchelement([po], alloc[27, 1], aux710)
watchelement([po], alloc[26, 2], aux707)
watchelement([po], alloc[27, 2], aux711)
watchelement([po], alloc[26, 2], aux707)
watchelement([po], alloc[27, 3], aux712)
ineq(aux709,aux707,0)
ineq(aux710,aux707,0)
ineq(aux711,aux707,0)
watchelement([po], alloc[26, 3], aux708)
watchelement([po], alloc[27, 0], aux709)
watchelement([po], alloc[26, 3], aux708)
watchelement([po], alloc[27, 1], aux710)
watchelement([po], alloc[26, 3], aux708)
watchelement([po], alloc[27, 2], aux711)
watchelement([po], alloc[26, 3], aux708)
watchelement([po], alloc[27, 3], aux712)
ineq(aux709,aux708,0)
ineq(aux710,aux708,0)
ineq(aux711,aux708,0)
ineq(aux712,aux705,0)
ineq(aux712,aux706,0)
ineq(aux712,aux707,0)
watchelement([po], alloc[27, 0], aux709)
watchelement([po], alloc[28, 0], aux713)
watchelement([po], alloc[27, 0], aux709)
watchelement([po], alloc[28, 1], aux714)
watchelement([po], alloc[27, 0], aux709)
watchelement([po], alloc[28, 2], aux715)
watchelement([po], alloc[27, 0], aux709)
watchelement([po], alloc[28, 3], aux716)
ineq(aux713,aux709,0)
ineq(aux714,aux709,0)
ineq(aux715,aux709,0)
watchelement([po], alloc[27, 1], aux710)
watchelement([po], alloc[28, 0], aux713)
watchelement([po], alloc[27, 1], aux710)
watchelement([po], alloc[28, 1], aux714)
watchelement([po], alloc[27, 1], aux710)
watchelement([po], alloc[28, 2], aux715)
watchelement([po], alloc[27, 1], aux710)
watchelement([po], alloc[28, 3], aux716)
ineq(aux713,aux710,0)
ineq(aux714,aux710,0)
ineq(aux715,aux710,0)
watchelement([po], alloc[27, 2], aux711)
watchelement([po], alloc[28, 0], aux713)
watchelement([po], alloc[27, 2], aux711)
watchelement([po], alloc[28, 1], aux714)
watchelement([po], alloc[27, 2], aux711)
watchelement([po], alloc[28, 2], aux715)
watchelement([po], alloc[27, 2], aux711)
watchelement([po], alloc[28, 3], aux716)
ineq(aux713,aux711,0)
ineq(aux714,aux711,0)
ineq(aux715,aux711,0)
watchelement([po], alloc[27, 3], aux712)
watchelement([po], alloc[28, 0], aux713)
watchelement([po], alloc[27, 3], aux712)
watchelement([po], alloc[28, 1], aux714)
watchelement([po], alloc[27, 3], aux712)
watchelement([po], alloc[28, 2], aux715)
watchelement([po], alloc[27, 3], aux712)
watchelement([po], alloc[28, 3], aux716)
ineq(aux713,aux712,0)
ineq(aux714,aux712,0)
ineq(aux715,aux712,0)
ineq(aux716,aux709,0)
ineq(aux716,aux710,0)
ineq(aux716,aux711,0)
watchelement([po], alloc[28, 0], aux713)
watchelement([po], alloc[29, 0], aux717)
watchelement([po], alloc[28, 0], aux713)
watchelement([po], alloc[29, 1], aux718)
watchelement([po], alloc[28, 0], aux713)
watchelement([po], alloc[29, 2], aux719)
watchelement([po], alloc[28, 0], aux713)
watchelement([po], alloc[29, 3], aux720)
ineq(aux717,aux713,0)
ineq(aux718,aux713,0)
ineq(aux719,aux713,0)
watchelement([po], alloc[28, 1], aux714)
watchelement([po], alloc[29, 0], aux717)
watchelement([po], alloc[28, 1], aux714)
watchelement([po], alloc[29, 1], aux718)
watchelement([po], alloc[28, 1], aux714)
watchelement([po], alloc[29, 2], aux719)
watchelement([po], alloc[28, 1], aux714)
watchelement([po], alloc[29, 3], aux720)
ineq(aux717,aux714,0)
ineq(aux718,aux714,0)
ineq(aux719,aux714,0)
watchelement([po], alloc[28, 2], aux715)
watchelement([po], alloc[29, 0], aux717)
watchelement([po], alloc[28, 2], aux715)
watchelement([po], alloc[29, 1], aux718)
watchelement([po], alloc[28, 2], aux715)
watchelement([po], alloc[29, 2], aux719)
watchelement([po], alloc[28, 2], aux715)
watchelement([po], alloc[29, 3], aux720)
ineq(aux717,aux715,0)
ineq(aux718,aux715,0)
ineq(aux719,aux715,0)
watchelement([po], alloc[28, 3], aux716)
watchelement([po], alloc[29, 0], aux717)
watchelement([po], alloc[28, 3], aux716)
watchelement([po], alloc[29, 1], aux718)
watchelement([po], alloc[28, 3], aux716)
watchelement([po], alloc[29, 2], aux719)
watchelement([po], alloc[28, 3], aux716)
watchelement([po], alloc[29, 3], aux720)
ineq(aux717,aux716,0)
ineq(aux718,aux716,0)
ineq(aux719,aux716,0)
ineq(aux720,aux713,0)
ineq(aux720,aux714,0)
ineq(aux720,aux715,0)
watchelement([po], alloc[29, 0], aux717)
watchelement([po], alloc[30, 0], aux721)
watchelement([po], alloc[29, 0], aux717)
watchelement([po], alloc[30, 1], aux722)
watchelement([po], alloc[29, 0], aux717)
watchelement([po], alloc[30, 2], aux723)
watchelement([po], alloc[29, 0], aux717)
watchelement([po], alloc[30, 3], aux724)
ineq(aux721,aux717,0)
ineq(aux722,aux717,0)
ineq(aux723,aux717,0)
watchelement([po], alloc[29, 1], aux718)
watchelement([po], alloc[30, 0], aux721)
watchelement([po], alloc[29, 1], aux718)
watchelement([po], alloc[30, 1], aux722)
watchelement([po], alloc[29, 1], aux718)
watchelement([po], alloc[30, 2], aux723)
watchelement([po], alloc[29, 1], aux718)
watchelement([po], alloc[30, 3], aux724)
ineq(aux721,aux718,0)
ineq(aux722,aux718,0)
ineq(aux723,aux718,0)
watchelement([po], alloc[29, 2], aux719)
watchelement([po], alloc[30, 0], aux721)
watchelement([po], alloc[29, 2], aux719)
watchelement([po], alloc[30, 1], aux722)
watchelement([po], alloc[29, 2], aux719)
watchelement([po], alloc[30, 2], aux723)
watchelement([po], alloc[29, 2], aux719)
watchelement([po], alloc[30, 3], aux724)
ineq(aux721,aux719,0)
ineq(aux722,aux719,0)
ineq(aux723,aux719,0)
watchelement([po], alloc[29, 3], aux720)
watchelement([po], alloc[30, 0], aux721)
watchelement([po], alloc[29, 3], aux720)
watchelement([po], alloc[30, 1], aux722)
watchelement([po], alloc[29, 3], aux720)
watchelement([po], alloc[30, 2], aux723)
watchelement([po], alloc[29, 3], aux720)
watchelement([po], alloc[30, 3], aux724)
ineq(aux721,aux720,0)
ineq(aux722,aux720,0)
ineq(aux723,aux720,0)
ineq(aux724,aux717,0)
ineq(aux724,aux718,0)
ineq(aux724,aux719,0)
watchelement([po], alloc[30, 0], aux721)
watchelement([po], alloc[31, 0], aux725)
watchelement([po], alloc[30, 0], aux721)
watchelement([po], alloc[31, 1], aux726)
watchelement([po], alloc[30, 0], aux721)
watchelement([po], alloc[31, 2], aux727)
watchelement([po], alloc[30, 0], aux721)
watchelement([po], alloc[31, 3], aux728)
ineq(aux725,aux721,0)
ineq(aux726,aux721,0)
ineq(aux727,aux721,0)
watchelement([po], alloc[30, 1], aux722)
watchelement([po], alloc[31, 0], aux725)
watchelement([po], alloc[30, 1], aux722)
watchelement([po], alloc[31, 1], aux726)
watchelement([po], alloc[30, 1], aux722)
watchelement([po], alloc[31, 2], aux727)
watchelement([po], alloc[30, 1], aux722)
watchelement([po], alloc[31, 3], aux728)
ineq(aux725,aux722,0)
ineq(aux726,aux722,0)
ineq(aux727,aux722,0)
watchelement([po], alloc[30, 2], aux723)
watchelement([po], alloc[31, 0], aux725)
watchelement([po], alloc[30, 2], aux723)
watchelement([po], alloc[31, 1], aux726)
watchelement([po], alloc[30, 2], aux723)
watchelement([po], alloc[31, 2], aux727)
watchelement([po], alloc[30, 2], aux723)
watchelement([po], alloc[31, 3], aux728)
ineq(aux725,aux723,0)
ineq(aux726,aux723,0)
ineq(aux727,aux723,0)
watchelement([po], alloc[30, 3], aux724)
watchelement([po], alloc[31, 0], aux725)
watchelement([po], alloc[30, 3], aux724)
watchelement([po], alloc[31, 1], aux726)
watchelement([po], alloc[30, 3], aux724)
watchelement([po], alloc[31, 2], aux727)
watchelement([po], alloc[30, 3], aux724)
watchelement([po], alloc[31, 3], aux728)
ineq(aux725,aux724,0)
ineq(aux726,aux724,0)
ineq(aux727,aux724,0)
ineq(aux728,aux721,0)
ineq(aux728,aux722,0)
ineq(aux728,aux723,0)
watchelement([po], alloc[31, 0], aux725)
watchelement([po], alloc[32, 0], aux729)
watchelement([po], alloc[31, 0], aux725)
watchelement([po], alloc[32, 1], aux730)
watchelement([po], alloc[31, 0], aux725)
watchelement([po], alloc[32, 2], aux731)
watchelement([po], alloc[31, 0], aux725)
watchelement([po], alloc[32, 3], aux732)
ineq(aux729,aux725,0)
ineq(aux730,aux725,0)
ineq(aux731,aux725,0)
watchelement([po], alloc[31, 1], aux726)
watchelement([po], alloc[32, 0], aux729)
watchelement([po], alloc[31, 1], aux726)
watchelement([po], alloc[32, 1], aux730)
watchelement([po], alloc[31, 1], aux726)
watchelement([po], alloc[32, 2], aux731)
watchelement([po], alloc[31, 1], aux726)
watchelement([po], alloc[32, 3], aux732)
ineq(aux729,aux726,0)
ineq(aux730,aux726,0)
ineq(aux731,aux726,0)
watchelement([po], alloc[31, 2], aux727)
watchelement([po], alloc[32, 0], aux729)
watchelement([po], alloc[31, 2], aux727)
watchelement([po], alloc[32, 1], aux730)
watchelement([po], alloc[31, 2], aux727)
watchelement([po], alloc[32, 2], aux731)
watchelement([po], alloc[31, 2], aux727)
watchelement([po], alloc[32, 3], aux732)
ineq(aux729,aux727,0)
ineq(aux730,aux727,0)
ineq(aux731,aux727,0)
watchelement([po], alloc[31, 3], aux728)
watchelement([po], alloc[32, 0], aux729)
watchelement([po], alloc[31, 3], aux728)
watchelement([po], alloc[32, 1], aux730)
watchelement([po], alloc[31, 3], aux728)
watchelement([po], alloc[32, 2], aux731)
watchelement([po], alloc[31, 3], aux728)
watchelement([po], alloc[32, 3], aux732)
ineq(aux729,aux728,0)
ineq(aux730,aux728,0)
ineq(aux731,aux728,0)
ineq(aux732,aux725,0)
ineq(aux732,aux726,0)
ineq(aux732,aux727,0)
watchelement([po], alloc[32, 0], aux729)
watchelement([po], alloc[33, 0], aux733)
watchelement([po], alloc[32, 0], aux729)
watchelement([po], alloc[33, 1], aux734)
watchelement([po], alloc[32, 0], aux729)
watchelement([po], alloc[33, 2], aux735)
watchelement([po], alloc[32, 0], aux729)
watchelement([po], alloc[33, 3], aux736)
ineq(aux733,aux729,0)
ineq(aux734,aux729,0)
ineq(aux735,aux729,0)
watchelement([po], alloc[32, 1], aux730)
watchelement([po], alloc[33, 0], aux733)
watchelement([po], alloc[32, 1], aux730)
watchelement([po], alloc[33, 1], aux734)
watchelement([po], alloc[32, 1], aux730)
watchelement([po], alloc[33, 2], aux735)
watchelement([po], alloc[32, 1], aux730)
watchelement([po], alloc[33, 3], aux736)
ineq(aux733,aux730,0)
ineq(aux734,aux730,0)
ineq(aux735,aux730,0)
watchelement([po], alloc[32, 2], aux731)
watchelement([po], alloc[33, 0], aux733)
watchelement([po], alloc[32, 2], aux731)
watchelement([po], alloc[33, 1], aux734)
watchelement([po], alloc[32, 2], aux731)
watchelement([po], alloc[33, 2], aux735)
watchelement([po], alloc[32, 2], aux731)
watchelement([po], alloc[33, 3], aux736)
ineq(aux733,aux731,0)
ineq(aux734,aux731,0)
ineq(aux735,aux731,0)
watchelement([po], alloc[32, 3], aux732)
watchelement([po], alloc[33, 0], aux733)
watchelement([po], alloc[32, 3], aux732)
watchelement([po], alloc[33, 1], aux734)
watchelement([po], alloc[32, 3], aux732)
watchelement([po], alloc[33, 2], aux735)
watchelement([po], alloc[32, 3], aux732)
watchelement([po], alloc[33, 3], aux736)
ineq(aux733,aux732,0)
ineq(aux734,aux732,0)
ineq(aux735,aux732,0)
ineq(aux736,aux729,0)
ineq(aux736,aux730,0)
ineq(aux736,aux731,0)
watchelement([po], alloc[33, 0], aux733)
watchelement([po], alloc[34, 0], aux737)
watchelement([po], alloc[33, 0], aux733)
watchelement([po], alloc[34, 1], aux738)
watchelement([po], alloc[33, 0], aux733)
watchelement([po], alloc[34, 2], aux739)
watchelement([po], alloc[33, 0], aux733)
watchelement([po], alloc[34, 3], aux740)
ineq(aux737,aux733,0)
ineq(aux738,aux733,0)
ineq(aux739,aux733,0)
watchelement([po], alloc[33, 1], aux734)
watchelement([po], alloc[34, 0], aux737)
watchelement([po], alloc[33, 1], aux734)
watchelement([po], alloc[34, 1], aux738)
watchelement([po], alloc[33, 1], aux734)
watchelement([po], alloc[34, 2], aux739)
watchelement([po], alloc[33, 1], aux734)
watchelement([po], alloc[34, 3], aux740)
ineq(aux737,aux734,0)
ineq(aux738,aux734,0)
ineq(aux739,aux734,0)
watchelement([po], alloc[33, 2], aux735)
watchelement([po], alloc[34, 0], aux737)
watchelement([po], alloc[33, 2], aux735)
watchelement([po], alloc[34, 1], aux738)
watchelement([po], alloc[33, 2], aux735)
watchelement([po], alloc[34, 2], aux739)
watchelement([po], alloc[33, 2], aux735)
watchelement([po], alloc[34, 3], aux740)
ineq(aux737,aux735,0)
ineq(aux738,aux735,0)
ineq(aux739,aux735,0)
watchelement([po], alloc[33, 3], aux736)
watchelement([po], alloc[34, 0], aux737)
watchelement([po], alloc[33, 3], aux736)
watchelement([po], alloc[34, 1], aux738)
watchelement([po], alloc[33, 3], aux736)
watchelement([po], alloc[34, 2], aux739)
watchelement([po], alloc[33, 3], aux736)
watchelement([po], alloc[34, 3], aux740)
ineq(aux737,aux736,0)
ineq(aux738,aux736,0)
ineq(aux739,aux736,0)
ineq(aux740,aux733,0)
ineq(aux740,aux734,0)
ineq(aux740,aux735,0)
watchelement([po], alloc[34, 0], aux737)
watchelement([po], alloc[35, 0], aux741)
watchelement([po], alloc[34, 0], aux737)
watchelement([po], alloc[35, 1], aux742)
watchelement([po], alloc[34, 0], aux737)
watchelement([po], alloc[35, 2], aux743)
watchelement([po], alloc[34, 0], aux737)
watchelement([po], alloc[35, 3], aux744)
ineq(aux741,aux737,0)
ineq(aux742,aux737,0)
ineq(aux743,aux737,0)
watchelement([po], alloc[34, 1], aux738)
watchelement([po], alloc[35, 0], aux741)
watchelement([po], alloc[34, 1], aux738)
watchelement([po], alloc[35, 1], aux742)
watchelement([po], alloc[34, 1], aux738)
watchelement([po], alloc[35, 2], aux743)
watchelement([po], alloc[34, 1], aux738)
watchelement([po], alloc[35, 3], aux744)
ineq(aux741,aux738,0)
ineq(aux742,aux738,0)
ineq(aux743,aux738,0)
watchelement([po], alloc[34, 2], aux739)
watchelement([po], alloc[35, 0], aux741)
watchelement([po], alloc[34, 2], aux739)
watchelement([po], alloc[35, 1], aux742)
watchelement([po], alloc[34, 2], aux739)
watchelement([po], alloc[35, 2], aux743)
watchelement([po], alloc[34, 2], aux739)
watchelement([po], alloc[35, 3], aux744)
ineq(aux741,aux739,0)
ineq(aux742,aux739,0)
ineq(aux743,aux739,0)
watchelement([po], alloc[34, 3], aux740)
watchelement([po], alloc[35, 0], aux741)
watchelement([po], alloc[34, 3], aux740)
watchelement([po], alloc[35, 1], aux742)
watchelement([po], alloc[34, 3], aux740)
watchelement([po], alloc[35, 2], aux743)
watchelement([po], alloc[34, 3], aux740)
watchelement([po], alloc[35, 3], aux744)
ineq(aux741,aux740,0)
ineq(aux742,aux740,0)
ineq(aux743,aux740,0)
ineq(aux744,aux737,0)
ineq(aux744,aux738,0)
ineq(aux744,aux739,0)
watchelement([po], alloc[35, 0], aux741)
watchelement([po], alloc[36, 0], aux745)
watchelement([po], alloc[35, 0], aux741)
watchelement([po], alloc[36, 1], aux746)
watchelement([po], alloc[35, 0], aux741)
watchelement([po], alloc[36, 2], aux747)
watchelement([po], alloc[35, 0], aux741)
watchelement([po], alloc[36, 3], aux748)
ineq(aux745,aux741,0)
ineq(aux746,aux741,0)
ineq(aux747,aux741,0)
watchelement([po], alloc[35, 1], aux742)
watchelement([po], alloc[36, 0], aux745)
watchelement([po], alloc[35, 1], aux742)
watchelement([po], alloc[36, 1], aux746)
watchelement([po], alloc[35, 1], aux742)
watchelement([po], alloc[36, 2], aux747)
watchelement([po], alloc[35, 1], aux742)
watchelement([po], alloc[36, 3], aux748)
ineq(aux745,aux742,0)
ineq(aux746,aux742,0)
ineq(aux747,aux742,0)
watchelement([po], alloc[35, 2], aux743)
watchelement([po], alloc[36, 0], aux745)
watchelement([po], alloc[35, 2], aux743)
watchelement([po], alloc[36, 1], aux746)
watchelement([po], alloc[35, 2], aux743)
watchelement([po], alloc[36, 2], aux747)
watchelement([po], alloc[35, 2], aux743)
watchelement([po], alloc[36, 3], aux748)
ineq(aux745,aux743,0)
ineq(aux746,aux743,0)
ineq(aux747,aux743,0)
watchelement([po], alloc[35, 3], aux744)
watchelement([po], alloc[36, 0], aux745)
watchelement([po], alloc[35, 3], aux744)
watchelement([po], alloc[36, 1], aux746)
watchelement([po], alloc[35, 3], aux744)
watchelement([po], alloc[36, 2], aux747)
watchelement([po], alloc[35, 3], aux744)
watchelement([po], alloc[36, 3], aux748)
ineq(aux745,aux744,0)
ineq(aux746,aux744,0)
ineq(aux747,aux744,0)
ineq(aux748,aux741,0)
ineq(aux748,aux742,0)
ineq(aux748,aux743,0)
watchelement([po], alloc[36, 0], aux745)
watchelement([po], alloc[37, 0], aux749)
watchelement([po], alloc[36, 0], aux745)
watchelement([po], alloc[37, 1], aux750)
watchelement([po], alloc[36, 0], aux745)
watchelement([po], alloc[37, 2], aux751)
watchelement([po], alloc[36, 0], aux745)
watchelement([po], alloc[37, 3], aux752)
ineq(aux749,aux745,0)
ineq(aux750,aux745,0)
ineq(aux751,aux745,0)
watchelement([po], alloc[36, 1], aux746)
watchelement([po], alloc[37, 0], aux749)
watchelement([po], alloc[36, 1], aux746)
watchelement([po], alloc[37, 1], aux750)
watchelement([po], alloc[36, 1], aux746)
watchelement([po], alloc[37, 2], aux751)
watchelement([po], alloc[36, 1], aux746)
watchelement([po], alloc[37, 3], aux752)
ineq(aux749,aux746,0)
ineq(aux750,aux746,0)
ineq(aux751,aux746,0)
watchelement([po], alloc[36, 2], aux747)
watchelement([po], alloc[37, 0], aux749)
watchelement([po], alloc[36, 2], aux747)
watchelement([po], alloc[37, 1], aux750)
watchelement([po], alloc[36, 2], aux747)
watchelement([po], alloc[37, 2], aux751)
watchelement([po], alloc[36, 2], aux747)
watchelement([po], alloc[37, 3], aux752)
ineq(aux749,aux747,0)
ineq(aux750,aux747,0)
ineq(aux751,aux747,0)
watchelement([po], alloc[36, 3], aux748)
watchelement([po], alloc[37, 0], aux749)
watchelement([po], alloc[36, 3], aux748)
watchelement([po], alloc[37, 1], aux750)
watchelement([po], alloc[36, 3], aux748)
watchelement([po], alloc[37, 2], aux751)
watchelement([po], alloc[36, 3], aux748)
watchelement([po], alloc[37, 3], aux752)
ineq(aux749,aux748,0)
ineq(aux750,aux748,0)
ineq(aux751,aux748,0)
ineq(aux752,aux745,0)
ineq(aux752,aux746,0)
ineq(aux752,aux747,0)
watchelement([po], alloc[37, 0], aux749)
watchelement([po], alloc[38, 0], aux753)
watchelement([po], alloc[37, 0], aux749)
watchelement([po], alloc[38, 1], aux754)
watchelement([po], alloc[37, 0], aux749)
watchelement([po], alloc[38, 2], aux755)
watchelement([po], alloc[37, 0], aux749)
watchelement([po], alloc[38, 3], aux756)
ineq(aux753,aux749,0)
ineq(aux754,aux749,0)
ineq(aux755,aux749,0)
watchelement([po], alloc[37, 1], aux750)
watchelement([po], alloc[38, 0], aux753)
watchelement([po], alloc[37, 1], aux750)
watchelement([po], alloc[38, 1], aux754)
watchelement([po], alloc[37, 1], aux750)
watchelement([po], alloc[38, 2], aux755)
watchelement([po], alloc[37, 1], aux750)
watchelement([po], alloc[38, 3], aux756)
ineq(aux753,aux750,0)
ineq(aux754,aux750,0)
ineq(aux755,aux750,0)
watchelement([po], alloc[37, 2], aux751)
watchelement([po], alloc[38, 0], aux753)
watchelement([po], alloc[37, 2], aux751)
watchelement([po], alloc[38, 1], aux754)
watchelement([po], alloc[37, 2], aux751)
watchelement([po], alloc[38, 2], aux755)
watchelement([po], alloc[37, 2], aux751)
watchelement([po], alloc[38, 3], aux756)
ineq(aux753,aux751,0)
ineq(aux754,aux751,0)
ineq(aux755,aux751,0)
watchelement([po], alloc[37, 3], aux752)
watchelement([po], alloc[38, 0], aux753)
watchelement([po], alloc[37, 3], aux752)
watchelement([po], alloc[38, 1], aux754)
watchelement([po], alloc[37, 3], aux752)
watchelement([po], alloc[38, 2], aux755)
watchelement([po], alloc[37, 3], aux752)
watchelement([po], alloc[38, 3], aux756)
ineq(aux753,aux752,0)
ineq(aux754,aux752,0)
ineq(aux755,aux752,0)
ineq(aux756,aux749,0)
ineq(aux756,aux750,0)
ineq(aux756,aux751,0)
watchelement([po], alloc[38, 0], aux753)
watchelement([po], alloc[39, 0], aux757)
watchelement([po], alloc[38, 0], aux753)
watchelement([po], alloc[39, 1], aux758)
watchelement([po], alloc[38, 0], aux753)
watchelement([po], alloc[39, 2], aux759)
watchelement([po], alloc[38, 0], aux753)
watchelement([po], alloc[39, 3], aux760)
ineq(aux757,aux753,0)
ineq(aux758,aux753,0)
ineq(aux759,aux753,0)
watchelement([po], alloc[38, 1], aux754)
watchelement([po], alloc[39, 0], aux757)
watchelement([po], alloc[38, 1], aux754)
watchelement([po], alloc[39, 1], aux758)
watchelement([po], alloc[38, 1], aux754)
watchelement([po], alloc[39, 2], aux759)
watchelement([po], alloc[38, 1], aux754)
watchelement([po], alloc[39, 3], aux760)
ineq(aux757,aux754,0)
ineq(aux758,aux754,0)
ineq(aux759,aux754,0)
watchelement([po], alloc[38, 2], aux755)
watchelement([po], alloc[39, 0], aux757)
watchelement([po], alloc[38, 2], aux755)
watchelement([po], alloc[39, 1], aux758)
watchelement([po], alloc[38, 2], aux755)
watchelement([po], alloc[39, 2], aux759)
watchelement([po], alloc[38, 2], aux755)
watchelement([po], alloc[39, 3], aux760)
ineq(aux757,aux755,0)
ineq(aux758,aux755,0)
ineq(aux759,aux755,0)
watchelement([po], alloc[38, 3], aux756)
watchelement([po], alloc[39, 0], aux757)
watchelement([po], alloc[38, 3], aux756)
watchelement([po], alloc[39, 1], aux758)
watchelement([po], alloc[38, 3], aux756)
watchelement([po], alloc[39, 2], aux759)
watchelement([po], alloc[38, 3], aux756)
watchelement([po], alloc[39, 3], aux760)
ineq(aux757,aux756,0)
ineq(aux758,aux756,0)
ineq(aux759,aux756,0)
ineq(aux760,aux753,0)
ineq(aux760,aux754,0)
ineq(aux760,aux755,0)
watchelement([po], alloc[39, 0], aux757)
watchelement([po], alloc[40, 0], aux761)
watchelement([po], alloc[39, 0], aux757)
watchelement([po], alloc[40, 1], aux762)
watchelement([po], alloc[39, 0], aux757)
watchelement([po], alloc[40, 2], aux763)
watchelement([po], alloc[39, 0], aux757)
watchelement([po], alloc[40, 3], aux764)
ineq(aux761,aux757,0)
ineq(aux762,aux757,0)
ineq(aux763,aux757,0)
watchelement([po], alloc[39, 1], aux758)
watchelement([po], alloc[40, 0], aux761)
watchelement([po], alloc[39, 1], aux758)
watchelement([po], alloc[40, 1], aux762)
watchelement([po], alloc[39, 1], aux758)
watchelement([po], alloc[40, 2], aux763)
watchelement([po], alloc[39, 1], aux758)
watchelement([po], alloc[40, 3], aux764)
ineq(aux761,aux758,0)
ineq(aux762,aux758,0)
ineq(aux763,aux758,0)
watchelement([po], alloc[39, 2], aux759)
watchelement([po], alloc[40, 0], aux761)
watchelement([po], alloc[39, 2], aux759)
watchelement([po], alloc[40, 1], aux762)
watchelement([po], alloc[39, 2], aux759)
watchelement([po], alloc[40, 2], aux763)
watchelement([po], alloc[39, 2], aux759)
watchelement([po], alloc[40, 3], aux764)
ineq(aux761,aux759,0)
ineq(aux762,aux759,0)
ineq(aux763,aux759,0)
watchelement([po], alloc[39, 3], aux760)
watchelement([po], alloc[40, 0], aux761)
watchelement([po], alloc[39, 3], aux760)
watchelement([po], alloc[40, 1], aux762)
watchelement([po], alloc[39, 3], aux760)
watchelement([po], alloc[40, 2], aux763)
watchelement([po], alloc[39, 3], aux760)
watchelement([po], alloc[40, 3], aux764)
ineq(aux761,aux760,0)
ineq(aux762,aux760,0)
ineq(aux763,aux760,0)
ineq(aux764,aux757,0)
ineq(aux764,aux758,0)
ineq(aux764,aux759,0)
watchelement([po], alloc[40, 0], aux761)
watchelement([po], alloc[41, 0], aux765)
watchelement([po], alloc[40, 0], aux761)
watchelement([po], alloc[41, 1], aux766)
watchelement([po], alloc[40, 0], aux761)
watchelement([po], alloc[41, 2], aux767)
watchelement([po], alloc[40, 0], aux761)
watchelement([po], alloc[41, 3], aux768)
ineq(aux765,aux761,0)
ineq(aux766,aux761,0)
ineq(aux767,aux761,0)
watchelement([po], alloc[40, 1], aux762)
watchelement([po], alloc[41, 0], aux765)
watchelement([po], alloc[40, 1], aux762)
watchelement([po], alloc[41, 1], aux766)
watchelement([po], alloc[40, 1], aux762)
watchelement([po], alloc[41, 2], aux767)
watchelement([po], alloc[40, 1], aux762)
watchelement([po], alloc[41, 3], aux768)
ineq(aux765,aux762,0)
ineq(aux766,aux762,0)
ineq(aux767,aux762,0)
watchelement([po], alloc[40, 2], aux763)
watchelement([po], alloc[41, 0], aux765)
watchelement([po], alloc[40, 2], aux763)
watchelement([po], alloc[41, 1], aux766)
watchelement([po], alloc[40, 2], aux763)
watchelement([po], alloc[41, 2], aux767)
watchelement([po], alloc[40, 2], aux763)
watchelement([po], alloc[41, 3], aux768)
ineq(aux765,aux763,0)
ineq(aux766,aux763,0)
ineq(aux767,aux763,0)
watchelement([po], alloc[40, 3], aux764)
watchelement([po], alloc[41, 0], aux765)
watchelement([po], alloc[40, 3], aux764)
watchelement([po], alloc[41, 1], aux766)
watchelement([po], alloc[40, 3], aux764)
watchelement([po], alloc[41, 2], aux767)
watchelement([po], alloc[40, 3], aux764)
watchelement([po], alloc[41, 3], aux768)
ineq(aux765,aux764,0)
ineq(aux766,aux764,0)
ineq(aux767,aux764,0)
ineq(aux768,aux761,0)
ineq(aux768,aux762,0)
ineq(aux768,aux763,0)
watchelement([po], alloc[41, 0], aux765)
watchelement([po], alloc[42, 0], aux769)
watchelement([po], alloc[41, 0], aux765)
watchelement([po], alloc[42, 1], aux770)
watchelement([po], alloc[41, 0], aux765)
watchelement([po], alloc[42, 2], aux771)
watchelement([po], alloc[41, 0], aux765)
watchelement([po], alloc[42, 3], aux772)
ineq(aux769,aux765,0)
ineq(aux770,aux765,0)
ineq(aux771,aux765,0)
watchelement([po], alloc[41, 1], aux766)
watchelement([po], alloc[42, 0], aux769)
watchelement([po], alloc[41, 1], aux766)
watchelement([po], alloc[42, 1], aux770)
watchelement([po], alloc[41, 1], aux766)
watchelement([po], alloc[42, 2], aux771)
watchelement([po], alloc[41, 1], aux766)
watchelement([po], alloc[42, 3], aux772)
ineq(aux769,aux766,0)
ineq(aux770,aux766,0)
ineq(aux771,aux766,0)
watchelement([po], alloc[41, 2], aux767)
watchelement([po], alloc[42, 0], aux769)
watchelement([po], alloc[41, 2], aux767)
watchelement([po], alloc[42, 1], aux770)
watchelement([po], alloc[41, 2], aux767)
watchelement([po], alloc[42, 2], aux771)
watchelement([po], alloc[41, 2], aux767)
watchelement([po], alloc[42, 3], aux772)
ineq(aux769,aux767,0)
ineq(aux770,aux767,0)
ineq(aux771,aux767,0)
watchelement([po], alloc[41, 3], aux768)
watchelement([po], alloc[42, 0], aux769)
watchelement([po], alloc[41, 3], aux768)
watchelement([po], alloc[42, 1], aux770)
watchelement([po], alloc[41, 3], aux768)
watchelement([po], alloc[42, 2], aux771)
watchelement([po], alloc[41, 3], aux768)
watchelement([po], alloc[42, 3], aux772)
ineq(aux769,aux768,0)
ineq(aux770,aux768,0)
ineq(aux771,aux768,0)
ineq(aux772,aux765,0)
ineq(aux772,aux766,0)
ineq(aux772,aux767,0)
watchelement([po], alloc[42, 0], aux769)
watchelement([po], alloc[43, 0], aux773)
watchelement([po], alloc[42, 0], aux769)
watchelement([po], alloc[43, 1], aux774)
watchelement([po], alloc[42, 0], aux769)
watchelement([po], alloc[43, 2], aux775)
watchelement([po], alloc[42, 0], aux769)
watchelement([po], alloc[43, 3], aux776)
ineq(aux773,aux769,0)
ineq(aux774,aux769,0)
ineq(aux775,aux769,0)
watchelement([po], alloc[42, 1], aux770)
watchelement([po], alloc[43, 0], aux773)
watchelement([po], alloc[42, 1], aux770)
watchelement([po], alloc[43, 1], aux774)
watchelement([po], alloc[42, 1], aux770)
watchelement([po], alloc[43, 2], aux775)
watchelement([po], alloc[42, 1], aux770)
watchelement([po], alloc[43, 3], aux776)
ineq(aux773,aux770,0)
ineq(aux774,aux770,0)
ineq(aux775,aux770,0)
watchelement([po], alloc[42, 2], aux771)
watchelement([po], alloc[43, 0], aux773)
watchelement([po], alloc[42, 2], aux771)
watchelement([po], alloc[43, 1], aux774)
watchelement([po], alloc[42, 2], aux771)
watchelement([po], alloc[43, 2], aux775)
watchelement([po], alloc[42, 2], aux771)
watchelement([po], alloc[43, 3], aux776)
ineq(aux773,aux771,0)
ineq(aux774,aux771,0)
ineq(aux775,aux771,0)
watchelement([po], alloc[42, 3], aux772)
watchelement([po], alloc[43, 0], aux773)
watchelement([po], alloc[42, 3], aux772)
watchelement([po], alloc[43, 1], aux774)
watchelement([po], alloc[42, 3], aux772)
watchelement([po], alloc[43, 2], aux775)
watchelement([po], alloc[42, 3], aux772)
watchelement([po], alloc[43, 3], aux776)
ineq(aux773,aux772,0)
ineq(aux774,aux772,0)
ineq(aux775,aux772,0)
ineq(aux776,aux769,0)
ineq(aux776,aux770,0)
ineq(aux776,aux771,0)
watchelement([po], alloc[43, 0], aux773)
watchelement([po], alloc[44, 0], aux777)
watchelement([po], alloc[43, 0], aux773)
watchelement([po], alloc[44, 1], aux778)
watchelement([po], alloc[43, 0], aux773)
watchelement([po], alloc[44, 2], aux779)
watchelement([po], alloc[43, 0], aux773)
watchelement([po], alloc[44, 3], aux780)
ineq(aux777,aux773,0)
ineq(aux778,aux773,0)
ineq(aux779,aux773,0)
watchelement([po], alloc[43, 1], aux774)
watchelement([po], alloc[44, 0], aux777)
watchelement([po], alloc[43, 1], aux774)
watchelement([po], alloc[44, 1], aux778)
watchelement([po], alloc[43, 1], aux774)
watchelement([po], alloc[44, 2], aux779)
watchelement([po], alloc[43, 1], aux774)
watchelement([po], alloc[44, 3], aux780)
ineq(aux777,aux774,0)
ineq(aux778,aux774,0)
ineq(aux779,aux774,0)
watchelement([po], alloc[43, 2], aux775)
watchelement([po], alloc[44, 0], aux777)
watchelement([po], alloc[43, 2], aux775)
watchelement([po], alloc[44, 1], aux778)
watchelement([po], alloc[43, 2], aux775)
watchelement([po], alloc[44, 2], aux779)
watchelement([po], alloc[43, 2], aux775)
watchelement([po], alloc[44, 3], aux780)
ineq(aux777,aux775,0)
ineq(aux778,aux775,0)
ineq(aux779,aux775,0)
watchelement([po], alloc[43, 3], aux776)
watchelement([po], alloc[44, 0], aux777)
watchelement([po], alloc[43, 3], aux776)
watchelement([po], alloc[44, 1], aux778)
watchelement([po], alloc[43, 3], aux776)
watchelement([po], alloc[44, 2], aux779)
watchelement([po], alloc[43, 3], aux776)
watchelement([po], alloc[44, 3], aux780)
ineq(aux777,aux776,0)
ineq(aux778,aux776,0)
ineq(aux779,aux776,0)
ineq(aux780,aux773,0)
ineq(aux780,aux774,0)
ineq(aux780,aux775,0)
watchelement([po], alloc[44, 0], aux777)
watchelement([po], alloc[45, 0], aux781)
watchelement([po], alloc[44, 0], aux777)
watchelement([po], alloc[45, 1], aux782)
watchelement([po], alloc[44, 0], aux777)
watchelement([po], alloc[45, 2], aux783)
watchelement([po], alloc[44, 0], aux777)
watchelement([po], alloc[45, 3], aux784)
ineq(aux781,aux777,0)
ineq(aux782,aux777,0)
ineq(aux783,aux777,0)
watchelement([po], alloc[44, 1], aux778)
watchelement([po], alloc[45, 0], aux781)
watchelement([po], alloc[44, 1], aux778)
watchelement([po], alloc[45, 1], aux782)
watchelement([po], alloc[44, 1], aux778)
watchelement([po], alloc[45, 2], aux783)
watchelement([po], alloc[44, 1], aux778)
watchelement([po], alloc[45, 3], aux784)
ineq(aux781,aux778,0)
ineq(aux782,aux778,0)
ineq(aux783,aux778,0)
watchelement([po], alloc[44, 2], aux779)
watchelement([po], alloc[45, 0], aux781)
watchelement([po], alloc[44, 2], aux779)
watchelement([po], alloc[45, 1], aux782)
watchelement([po], alloc[44, 2], aux779)
watchelement([po], alloc[45, 2], aux783)
watchelement([po], alloc[44, 2], aux779)
watchelement([po], alloc[45, 3], aux784)
ineq(aux781,aux779,0)
ineq(aux782,aux779,0)
ineq(aux783,aux779,0)
watchelement([po], alloc[44, 3], aux780)
watchelement([po], alloc[45, 0], aux781)
watchelement([po], alloc[44, 3], aux780)
watchelement([po], alloc[45, 1], aux782)
watchelement([po], alloc[44, 3], aux780)
watchelement([po], alloc[45, 2], aux783)
watchelement([po], alloc[44, 3], aux780)
watchelement([po], alloc[45, 3], aux784)
ineq(aux781,aux780,0)
ineq(aux782,aux780,0)
ineq(aux783,aux780,0)
ineq(aux784,aux777,0)
ineq(aux784,aux778,0)
ineq(aux784,aux779,0)
watchelement([po], alloc[45, 0], aux781)
watchelement([po], alloc[46, 0], aux785)
watchelement([po], alloc[45, 0], aux781)
watchelement([po], alloc[46, 1], aux786)
watchelement([po], alloc[45, 0], aux781)
watchelement([po], alloc[46, 2], aux787)
watchelement([po], alloc[45, 0], aux781)
watchelement([po], alloc[46, 3], aux788)
ineq(aux785,aux781,0)
ineq(aux786,aux781,0)
ineq(aux787,aux781,0)
watchelement([po], alloc[45, 1], aux782)
watchelement([po], alloc[46, 0], aux785)
watchelement([po], alloc[45, 1], aux782)
watchelement([po], alloc[46, 1], aux786)
watchelement([po], alloc[45, 1], aux782)
watchelement([po], alloc[46, 2], aux787)
watchelement([po], alloc[45, 1], aux782)
watchelement([po], alloc[46, 3], aux788)
ineq(aux785,aux782,0)
ineq(aux786,aux782,0)
ineq(aux787,aux782,0)
watchelement([po], alloc[45, 2], aux783)
watchelement([po], alloc[46, 0], aux785)
watchelement([po], alloc[45, 2], aux783)
watchelement([po], alloc[46, 1], aux786)
watchelement([po], alloc[45, 2], aux783)
watchelement([po], alloc[46, 2], aux787)
watchelement([po], alloc[45, 2], aux783)
watchelement([po], alloc[46, 3], aux788)
ineq(aux785,aux783,0)
ineq(aux786,aux783,0)
ineq(aux787,aux783,0)
watchelement([po], alloc[45, 3], aux784)
watchelement([po], alloc[46, 0], aux785)
watchelement([po], alloc[45, 3], aux784)
watchelement([po], alloc[46, 1], aux786)
watchelement([po], alloc[45, 3], aux784)
watchelement([po], alloc[46, 2], aux787)
watchelement([po], alloc[45, 3], aux784)
watchelement([po], alloc[46, 3], aux788)
ineq(aux785,aux784,0)
ineq(aux786,aux784,0)
ineq(aux787,aux784,0)
ineq(aux788,aux781,0)
ineq(aux788,aux782,0)
ineq(aux788,aux783,0)
watchelement([po], alloc[46, 0], aux785)
watchelement([po], alloc[47, 0], aux789)
watchelement([po], alloc[46, 0], aux785)
watchelement([po], alloc[47, 1], aux790)
watchelement([po], alloc[46, 0], aux785)
watchelement([po], alloc[47, 2], aux791)
watchelement([po], alloc[46, 0], aux785)
watchelement([po], alloc[47, 3], aux792)
ineq(aux789,aux785,0)
ineq(aux790,aux785,0)
ineq(aux791,aux785,0)
watchelement([po], alloc[46, 1], aux786)
watchelement([po], alloc[47, 0], aux789)
watchelement([po], alloc[46, 1], aux786)
watchelement([po], alloc[47, 1], aux790)
watchelement([po], alloc[46, 1], aux786)
watchelement([po], alloc[47, 2], aux791)
watchelement([po], alloc[46, 1], aux786)
watchelement([po], alloc[47, 3], aux792)
ineq(aux789,aux786,0)
ineq(aux790,aux786,0)
ineq(aux791,aux786,0)
watchelement([po], alloc[46, 2], aux787)
watchelement([po], alloc[47, 0], aux789)
watchelement([po], alloc[46, 2], aux787)
watchelement([po], alloc[47, 1], aux790)
watchelement([po], alloc[46, 2], aux787)
watchelement([po], alloc[47, 2], aux791)
watchelement([po], alloc[46, 2], aux787)
watchelement([po], alloc[47, 3], aux792)
ineq(aux789,aux787,0)
ineq(aux790,aux787,0)
ineq(aux791,aux787,0)
watchelement([po], alloc[46, 3], aux788)
watchelement([po], alloc[47, 0], aux789)
watchelement([po], alloc[46, 3], aux788)
watchelement([po], alloc[47, 1], aux790)
watchelement([po], alloc[46, 3], aux788)
watchelement([po], alloc[47, 2], aux791)
watchelement([po], alloc[46, 3], aux788)
watchelement([po], alloc[47, 3], aux792)
ineq(aux789,aux788,0)
ineq(aux790,aux788,0)
ineq(aux791,aux788,0)
ineq(aux792,aux785,0)
ineq(aux792,aux786,0)
ineq(aux792,aux787,0)
watchelement([po], alloc[47, 0], aux789)
watchelement([po], alloc[48, 0], aux793)
watchelement([po], alloc[47, 0], aux789)
watchelement([po], alloc[48, 1], aux794)
watchelement([po], alloc[47, 0], aux789)
watchelement([po], alloc[48, 2], aux795)
watchelement([po], alloc[47, 0], aux789)
watchelement([po], alloc[48, 3], aux796)
ineq(aux793,aux789,0)
ineq(aux794,aux789,0)
ineq(aux795,aux789,0)
watchelement([po], alloc[47, 1], aux790)
watchelement([po], alloc[48, 0], aux793)
watchelement([po], alloc[47, 1], aux790)
watchelement([po], alloc[48, 1], aux794)
watchelement([po], alloc[47, 1], aux790)
watchelement([po], alloc[48, 2], aux795)
watchelement([po], alloc[47, 1], aux790)
watchelement([po], alloc[48, 3], aux796)
ineq(aux793,aux790,0)
ineq(aux794,aux790,0)
ineq(aux795,aux790,0)
watchelement([po], alloc[47, 2], aux791)
watchelement([po], alloc[48, 0], aux793)
watchelement([po], alloc[47, 2], aux791)
watchelement([po], alloc[48, 1], aux794)
watchelement([po], alloc[47, 2], aux791)
watchelement([po], alloc[48, 2], aux795)
watchelement([po], alloc[47, 2], aux791)
watchelement([po], alloc[48, 3], aux796)
ineq(aux793,aux791,0)
ineq(aux794,aux791,0)
ineq(aux795,aux791,0)
watchelement([po], alloc[47, 3], aux792)
watchelement([po], alloc[48, 0], aux793)
watchelement([po], alloc[47, 3], aux792)
watchelement([po], alloc[48, 1], aux794)
watchelement([po], alloc[47, 3], aux792)
watchelement([po], alloc[48, 2], aux795)
watchelement([po], alloc[47, 3], aux792)
watchelement([po], alloc[48, 3], aux796)
ineq(aux793,aux792,0)
ineq(aux794,aux792,0)
ineq(aux795,aux792,0)
ineq(aux796,aux789,0)
ineq(aux796,aux790,0)
ineq(aux796,aux791,0)
watchelement([po], alloc[48, 0], aux793)
watchelement([po], alloc[49, 0], aux797)
watchelement([po], alloc[48, 0], aux793)
watchelement([po], alloc[49, 1], aux798)
watchelement([po], alloc[48, 0], aux793)
watchelement([po], alloc[49, 2], aux799)
watchelement([po], alloc[48, 0], aux793)
watchelement([po], alloc[49, 3], aux800)
ineq(aux797,aux793,0)
ineq(aux798,aux793,0)
ineq(aux799,aux793,0)
watchelement([po], alloc[48, 1], aux794)
watchelement([po], alloc[49, 0], aux797)
watchelement([po], alloc[48, 1], aux794)
watchelement([po], alloc[49, 1], aux798)
watchelement([po], alloc[48, 1], aux794)
watchelement([po], alloc[49, 2], aux799)
watchelement([po], alloc[48, 1], aux794)
watchelement([po], alloc[49, 3], aux800)
ineq(aux797,aux794,0)
ineq(aux798,aux794,0)
ineq(aux799,aux794,0)
watchelement([po], alloc[48, 2], aux795)
watchelement([po], alloc[49, 0], aux797)
watchelement([po], alloc[48, 2], aux795)
watchelement([po], alloc[49, 1], aux798)
watchelement([po], alloc[48, 2], aux795)
watchelement([po], alloc[49, 2], aux799)
watchelement([po], alloc[48, 2], aux795)
watchelement([po], alloc[49, 3], aux800)
ineq(aux797,aux795,0)
ineq(aux798,aux795,0)
ineq(aux799,aux795,0)
watchelement([po], alloc[48, 3], aux796)
watchelement([po], alloc[49, 0], aux797)
watchelement([po], alloc[48, 3], aux796)
watchelement([po], alloc[49, 1], aux798)
watchelement([po], alloc[48, 3], aux796)
watchelement([po], alloc[49, 2], aux799)
watchelement([po], alloc[48, 3], aux796)
watchelement([po], alloc[49, 3], aux800)
ineq(aux797,aux796,0)
ineq(aux798,aux796,0)
ineq(aux799,aux796,0)
ineq(aux800,aux793,0)
ineq(aux800,aux794,0)
ineq(aux800,aux795,0)
ineq(aux605,aux608,0)
ineq(aux612,aux605,0)
ineq(aux616,aux612,0)
ineq(aux620,aux616,0)
ineq(aux624,aux620,0)
ineq(aux628,aux624,0)
ineq(aux632,aux628,0)
ineq(aux636,aux632,0)
ineq(aux640,aux636,0)
ineq(aux644,aux640,0)
ineq(aux648,aux644,0)
ineq(aux652,aux648,0)
ineq(aux656,aux652,0)
ineq(aux660,aux656,0)
ineq(aux664,aux660,0)
ineq(aux668,aux664,0)
ineq(aux672,aux668,0)
ineq(aux676,aux672,0)
ineq(aux680,aux676,0)
ineq(aux684,aux680,0)
ineq(aux688,aux684,0)
ineq(aux692,aux688,0)
ineq(aux696,aux692,0)
ineq(aux700,aux696,0)
ineq(aux704,aux700,0)
ineq(aux708,aux704,0)
ineq(aux712,aux708,0)
ineq(aux716,aux712,0)
ineq(aux720,aux716,0)
ineq(aux724,aux720,0)
ineq(aux728,aux724,0)
ineq(aux732,aux728,0)
ineq(aux736,aux732,0)
ineq(aux740,aux736,0)
ineq(aux744,aux740,0)
ineq(aux748,aux744,0)
ineq(aux752,aux748,0)
ineq(aux756,aux752,0)
ineq(aux760,aux756,0)
ineq(aux764,aux760,0)
ineq(aux768,aux764,0)
ineq(aux772,aux768,0)
ineq(aux776,aux772,0)
ineq(aux780,aux776,0)
ineq(aux784,aux780,0)
ineq(aux788,aux784,0)
ineq(aux792,aux788,0)
ineq(aux796,aux792,0)
ineq(aux800,aux796,0)
eq(0, po[3])
eq(0, po[5])
eq(0, po[8])
eq(0, po[13])
eq(0, po[19])
eq(0, po[22])
eq(0, po[26])
eq(0, po[30])
eq(0, po[33])
eq(0, po[39])
eq(0, po[42])
eq(0, po[47])
eq(0, po[50])
eq(0, po[54])
eq(0, po[58])
eq(0, po[61])
eq(0, po[65])
eq(0, po[70])
eq(0, po[75])
eq(0, po[76])
eq(0, po[81])
eq(0, po[84])
eq(0, po[91])
eq(0, po[95])
eq(0, po[99])
eq(0, po[102])
eq(0, po[104])
eq(0, po[108])
eq(0, po[114])
eq(0, po[117])
eq(0, po[120])
eq(0, po[126])
eq(0, po[131])
eq(0, po[132])
eq(0, po[137])
eq(0, po[140])
eq(0, po[144])
eq(0, po[149])
eq(0, po[152])
eq(0, po[159])
eq(0, po[163])
eq(0, po[164])
eq(0, po[168])
eq(0, po[175])
eq(0, po[179])
eq(0, po[181])
eq(0, po[185])
eq(0, po[188])
eq(0, po[195])
eq(0, po[197])
eq(1, po[0])
eq(1, po[4])
eq(1, po[9])
eq(1, po[14])
eq(1, po[16])
eq(1, po[21])
eq(1, po[25])
eq(1, po[29])
eq(1, po[34])
eq(1, po[36])
eq(1, po[40])
eq(1, po[45])
eq(1, po[48])
eq(1, po[52])
eq(1, po[59])
eq(1, po[62])
eq(1, po[67])
eq(1, po[68])
eq(1, po[74])
eq(1, po[77])
eq(1, po[82])
eq(1, po[86])
eq(1, po[89])
eq(1, po[94])
eq(1, po[98])
eq(1, po[101])
eq(1, po[105])
eq(1, po[111])
eq(1, po[113])
eq(1, po[119])
eq(1, po[122])
eq(1, po[125])
eq(1, po[128])
eq(1, po[135])
eq(1, po[138])
eq(1, po[142])
eq(1, po[146])
eq(1, po[148])
eq(1, po[154])
eq(1, po[156])
eq(1, po[160])
eq(1, po[166])
eq(1, po[169])
eq(1, po[173])
eq(1, po[177])
eq(1, po[183])
eq(1, po[184])
eq(1, po[191])
eq(1, po[194])
eq(1, po[196])
eq(2, po[2])
eq(2, po[7])
eq(2, po[11])
eq(2, po[15])
eq(2, po[17])
eq(2, po[23])
eq(2, po[24])
eq(2, po[28])
eq(2, po[35])
eq(2, po[38])
eq(2, po[43])
eq(2, po[46])
eq(2, po[51])
eq(2, po[55])
eq(2, po[57])
eq(2, po[60])
eq(2, po[64])
eq(2, po[69])
eq(2, po[72])
eq(2, po[78])
eq(2, po[80])
eq(2, po[85])
eq(2, po[88])
eq(2, po[92])
eq(2, po[96])
eq(2, po[100])
eq(2, po[106])
eq(2, po[110])
eq(2, po[112])
eq(2, po[116])
eq(2, po[121])
eq(2, po[127])
eq(2, po[129])
eq(2, po[134])
eq(2, po[136])
eq(2, po[143])
eq(2, po[145])
eq(2, po[150])
eq(2, po[155])
eq(2, po[158])
eq(2, po[161])
eq(2, po[167])
eq(2, po[171])
eq(2, po[174])
eq(2, po[176])
eq(2, po[182])
eq(2, po[186])
eq(2, po[189])
eq(2, po[192])
eq(2, po[199])
eq(3, po[1])
eq(3, po[6])
eq(3, po[10])
eq(3, po[12])
eq(3, po[18])
eq(3, po[20])
eq(3, po[27])
eq(3, po[31])
eq(3, po[32])
eq(3, po[37])
eq(3, po[41])
eq(3, po[44])
eq(3, po[49])
eq(3, po[53])
eq(3, po[56])
eq(3, po[63])
eq(3, po[66])
eq(3, po[71])
eq(3, po[73])
eq(3, po[79])
eq(3, po[83])
eq(3, po[87])
eq(3, po[90])
eq(3, po[93])
eq(3, po[97])
eq(3, po[103])
eq(3, po[107])
eq(3, po[109])
eq(3, po[115])
eq(3, po[118])
eq(3, po[123])
eq(3, po[124])
eq(3, po[130])
eq(3, po[133])
eq(3, po[139])
eq(3, po[141])
eq(3, po[147])
eq(3, po[151])
eq(3, po[153])
eq(3, po[157])
eq(3, po[162])
eq(3, po[165])
eq(3, po[170])
eq(3, po[172])
eq(3, po[178])
eq(3, po[180])
eq(3, po[187])
eq(3, po[190])
eq(3, po[193])
eq(3, po[198])
eq(0, pp[0, 1])
eq(0, pp[0, 2])
eq(0, pp[0, 3])
eq(0, pp[1, 0])
eq(0, pp[1, 2])
eq(0, pp[1, 3])
eq(0, pp[2, 0])
eq(0, pp[2, 1])
eq(0, pp[2, 3])
eq(0, pp[3, 0])
eq(0, pp[3, 1])
eq(0, pp[3, 2])
eq(0, pp[4, 1])
eq(0, pp[4, 2])
eq(0, pp[4, 3])
eq(0, pp[5, 0])
eq(0, pp[5, 2])
eq(0, pp[5, 3])
eq(0, pp[6, 0])
eq(0, pp[6, 1])
eq(0, pp[6, 3])
eq(0, pp[7, 0])
eq(0, pp[7, 1])
eq(0, pp[7, 2])
eq(0, pp[8, 1])
eq(0, pp[8, 2])
eq(0, pp[8, 3])
eq(0, pp[9, 0])
eq(0, pp[9, 2])
eq(0, pp[9, 3])
eq(0, pp[10, 0])
eq(0, pp[10, 1])
eq(0, pp[10, 3])
eq(0, pp[11, 0])
eq(0, pp[11, 1])
eq(0, pp[11, 2])
eq(0, pp[12, 1])
eq(0, pp[12, 2])
eq(0, pp[12, 3])
eq(0, pp[13, 0])
eq(0, pp[13, 2])
eq(0, pp[13, 3])
eq(0, pp[14, 0])
eq(0, pp[14, 1])
eq(0, pp[14, 3])
eq(0, pp[15, 0])
eq(0, pp[15, 1])
eq(0, pp[15, 2])
eq(0, pp[16, 1])
eq(0, pp[16, 2])
eq(0, pp[16, 3])
eq(0, pp[17, 0])
eq(0, pp[17, 2])
eq(0, pp[17, 3])
eq(0, pp[18, 0])
eq(0, pp[18, 1])
eq(0, pp[18, 3])
eq(0, pp[19, 0])
eq(0, pp[19, 1])
eq(0, pp[19, 2])
eq(0, pp[20, 1])
eq(0, pp[20, 2])
eq(0, pp[20, 3])
eq(0, pp[21, 0])
eq(0, pp[21, 2])
eq(0, pp[21, 3])
eq(0, pp[22, 0])
eq(0, pp[22, 1])
eq(0, pp[22, 3])
eq(0, pp[23, 0])
eq(0, pp[23, 1])
eq(0, pp[23, 2])
eq(0, pp[24, 1])
eq(0, pp[24, 2])
eq(0, pp[24, 3])
eq(0, pp[25, 0])
eq(0, pp[25, 2])
eq(0, pp[25, 3])
eq(0, pp[26, 0])
eq(0, pp[26, 1])
eq(0, pp[26, 3])
eq(0, pp[27, 0])
eq(0, pp[27, 1])
eq(0, pp[27, 2])
eq(0, pp[28, 1])
eq(0, pp[28, 2])
eq(0, pp[28, 3])
eq(0, pp[29, 0])
eq(0, pp[29, 2])
eq(0, pp[29, 3])
eq(0, pp[30, 0])
eq(0, pp[30, 1])
eq(0, pp[30, 3])
eq(0, pp[31, 0])
eq(0, pp[31, 1])
eq(0, pp[31, 2])
eq(0, pp[32, 1])
eq(0, pp[32, 2])
eq(0, pp[32, 3])
eq(0, pp[33, 0])
eq(0, pp[33, 2])
eq(0, pp[33, 3])
eq(0, pp[34, 0])
eq(0, pp[34, 1])
eq(0, pp[34, 3])
eq(0, pp[35, 0])
eq(0, pp[35, 1])
eq(0, pp[35, 2])
eq(0, pp[36, 1])
eq(0, pp[36, 2])
eq(0, pp[36, 3])
eq(0, pp[37, 0])
eq(0, pp[37, 2])
eq(0, pp[37, 3])
eq(0, pp[38, 0])
eq(0, pp[38, 1])
eq(0, pp[38, 3])
eq(0, pp[39, 0])
eq(0, pp[39, 1])
eq(0, pp[39, 2])
eq(0, pp[40, 1])
eq(0, pp[40, 2])
eq(0, pp[40, 3])
eq(0, pp[41, 0])
eq(0, pp[41, 2])
eq(0, pp[41, 3])
eq(0, pp[42, 0])
eq(0, pp[42, 1])
eq(0, pp[42, 3])
eq(0, pp[43, 0])
eq(0, pp[43, 1])
eq(0, pp[43, 2])
eq(0, pp[44, 1])
eq(0, pp[44, 2])
eq(0, pp[44, 3])
eq(0, pp[45, 0])
eq(0, pp[45, 2])
eq(0, pp[45, 3])
eq(0, pp[46, 0])
eq(0, pp[46, 1])
eq(0, pp[46, 3])
eq(0, pp[47, 0])
eq(0, pp[47, 1])
eq(0, pp[47, 2])
eq(0, pp[48, 1])
eq(0, pp[48, 2])
eq(0, pp[48, 3])
eq(0, pp[49, 0])
eq(0, pp[49, 2])
eq(0, pp[49, 3])
eq(0, pp[50, 0])
eq(0, pp[50, 1])
eq(0, pp[50, 3])
eq(0, pp[51, 0])
eq(0, pp[51, 1])
eq(0, pp[51, 2])
eq(0, pp[52, 1])
eq(0, pp[52, 2])
eq(0, pp[52, 3])
eq(0, pp[53, 0])
eq(0, pp[53, 2])
eq(0, pp[53, 3])
eq(0, pp[54, 0])
eq(0, pp[54, 1])
eq(0, pp[54, 3])
eq(0, pp[55, 0])
eq(0, pp[55, 1])
eq(0, pp[55, 2])
eq(0, pp[56, 1])
eq(0, pp[56, 2])
eq(0, pp[56, 3])
eq(0, pp[57, 0])
eq(0, pp[57, 2])
eq(0, pp[57, 3])
eq(0, pp[58, 0])
eq(0, pp[58, 1])
eq(0, pp[58, 3])
eq(0, pp[59, 0])
eq(0, pp[59, 1])
eq(0, pp[59, 2])
eq(0, pp[60, 1])
eq(0, pp[60, 2])
eq(0, pp[60, 3])
eq(0, pp[61, 0])
eq(0, pp[61, 2])
eq(0, pp[61, 3])
eq(0, pp[62, 0])
eq(0, pp[62, 1])
eq(0, pp[62, 3])
eq(0, pp[63, 0])
eq(0, pp[63, 1])
eq(0, pp[63, 2])
eq(0, pp[64, 1])
eq(0, pp[64, 2])
eq(0, pp[64, 3])
eq(0, pp[65, 0])
eq(0, pp[65, 2])
eq(0, pp[65, 3])
eq(0, pp[66, 0])
eq(0, pp[66, 1])
eq(0, pp[66, 3])
eq(0, pp[67, 0])
eq(0, pp[67, 1])
eq(0, pp[67, 2])
eq(0, pp[68, 1])
eq(0, pp[68, 2])
eq(0, pp[68, 3])
eq(0, pp[69, 0])
eq(0, pp[69, 2])
eq(0, pp[69, 3])
eq(0, pp[70, 0])
eq(0, pp[70, 1])
eq(0, pp[70, 3])
eq(0, pp[71, 0])
eq(0, pp[71, 1])
eq(0, pp[71, 2])
eq(0, pp[72, 1])
eq(0, pp[72, 2])
eq(0, pp[72, 3])
eq(0, pp[73, 0])
eq(0, pp[73, 2])
eq(0, pp[73, 3])
eq(0, pp[74, 0])
eq(0, pp[74, 1])
eq(0, pp[74, 3])
eq(0, pp[75, 0])
eq(0, pp[75, 1])
eq(0, pp[75, 2])
eq(0, pp[76, 1])
eq(0, pp[76, 2])
eq(0, pp[76, 3])
eq(0, pp[77, 0])
eq(0, pp[77, 2])
eq(0, pp[77, 3])
eq(0, pp[78, 0])
eq(0, pp[78, 1])
eq(0, pp[78, 3])
eq(0, pp[79, 0])
eq(0, pp[79, 1])
eq(0, pp[79, 2])
eq(0, pp[80, 1])
eq(0, pp[80, 2])
eq(0, pp[80, 3])
eq(0, pp[81, 0])
eq(0, pp[81, 2])
eq(0, pp[81, 3])
eq(0, pp[82, 0])
eq(0, pp[82, 1])
eq(0, pp[82, 3])
eq(0, pp[83, 0])
eq(0, pp[83, 1])
eq(0, pp[83, 2])
eq(0, pp[84, 1])
eq(0, pp[84, 2])
eq(0, pp[84, 3])
eq(0, pp[85, 0])
eq(0, pp[85, 2])
eq(0, pp[85, 3])
eq(0, pp[86, 0])
eq(0, pp[86, 1])
eq(0, pp[86, 3])
eq(0, pp[87, 0])
eq(0, pp[87, 1])
eq(0, pp[87, 2])
eq(0, pp[88, 1])
eq(0, pp[88, 2])
eq(0, pp[88, 3])
eq(0, pp[89, 0])
eq(0, pp[89, 2])
eq(0, pp[89, 3])
eq(0, pp[90, 0])
eq(0, pp[90, 1])
eq(0, pp[90, 3])
eq(0, pp[91, 0])
eq(0, pp[91, 1])
eq(0, pp[91, 2])
eq(0, pp[92, 1])
eq(0, pp[92, 2])
eq(0, pp[92, 3])
eq(0, pp[93, 0])
eq(0, pp[93, 2])
eq(0, pp[93, 3])
eq(0, pp[94, 0])
eq(0, pp[94, 1])
eq(0, pp[94, 3])
eq(0, pp[95, 0])
eq(0, pp[95, 1])
eq(0, pp[95, 2])
eq(0, pp[96, 1])
eq(0, pp[96, 2])
eq(0, pp[96, 3])
eq(0, pp[97, 0])
eq(0, pp[97, 2])
eq(0, pp[97, 3])
eq(0, pp[98, 0])
eq(0, pp[98, 1])
eq(0, pp[98, 3])
eq(0, pp[99, 0])
eq(0, pp[99, 1])
eq(0, pp[99, 2])
eq(0, pp[100, 1])
eq(0, pp[100, 2])
eq(0, pp[100, 3])
eq(0, pp[101, 0])
eq(0, pp[101, 2])
eq(0, pp[101, 3])
eq(0, pp[102, 0])
eq(0, pp[102, 1])
eq(0, pp[102, 3])
eq(0, pp[103, 0])
eq(0, pp[103, 1])
eq(0, pp[103, 2])
eq(0, pp[104, 1])
eq(0, pp[104, 2])
eq(0, pp[104, 3])
eq(0, pp[105, 0])
eq(0, pp[105, 2])
eq(0, pp[105, 3])
eq(0, pp[106, 0])
eq(0, pp[106, 1])
eq(0, pp[106, 3])
eq(0, pp[107, 0])
eq(0, pp[107, 1])
eq(0, pp[107, 2])
eq(0, pp[108, 1])
eq(0, pp[108, 2])
eq(0, pp[108, 3])
eq(0, pp[109, 0])
eq(0, pp[109, 2])
eq(0, pp[109, 3])
eq(0, pp[110, 0])
eq(0, pp[110, 1])
eq(0, pp[110, 3])
eq(0, pp[111, 0])
eq(0, pp[111, 1])
eq(0, pp[111, 2])
eq(0, pp[112, 1])
eq(0, pp[112, 2])
eq(0, pp[112, 3])
eq(0, pp[113, 0])
eq(0, pp[113, 2])
eq(0, pp[113, 3])
eq(0, pp[114, 0])
eq(0, pp[114, 1])
eq(0, pp[114, 3])
eq(0, pp[115, 0])
eq(0, pp[115, 1])
eq(0, pp[115, 2])
eq(0, pp[116, 1])
eq(0, pp[116, 2])
eq(0, pp[116, 3])
eq(0, pp[117, 0])
eq(0, pp[117, 2])
eq(0, pp[117, 3])
eq(0, pp[118, 0])
eq(0, pp[118, 1])
eq(0, pp[118, 3])
eq(0, pp[119, 0])
eq(0, pp[119, 1])
eq(0, pp[119, 2])
eq(0, pp[120, 1])
eq(0, pp[120, 2])
eq(0, pp[120, 3])
eq(0, pp[121, 0])
eq(0, pp[121, 2])
eq(0, pp[121, 3])
eq(0, pp[122, 0])
eq(0, pp[122, 1])
eq(0, pp[122, 3])
eq(0, pp[123, 0])
eq(0, pp[123, 1])
eq(0, pp[123, 2])
eq(0, pp[124, 1])
eq(0, pp[124, 2])
eq(0, pp[124, 3])
eq(0, pp[125, 0])
eq(0, pp[125, 2])
eq(0, pp[125, 3])
eq(0, pp[126, 0])
eq(0, pp[126, 1])
eq(0, pp[126, 3])
eq(0, pp[127, 0])
eq(0, pp[127, 1])
eq(0, pp[127, 2])
eq(0, pp[128, 1])
eq(0, pp[128, 2])
eq(0, pp[128, 3])
eq(0, pp[129, 0])
eq(0, pp[129, 2])
eq(0, pp[129, 3])
eq(0, pp[130, 0])
eq(0, pp[130, 1])
eq(0, pp[130, 3])
eq(0, pp[131, 0])
eq(0, pp[131, 1])
eq(0, pp[131, 2])
eq(0, pp[132, 1])
eq(0, pp[132, 2])
eq(0, pp[132, 3])
eq(0, pp[133, 0])
eq(0, pp[133, 2])
eq(0, pp[133, 3])
eq(0, pp[134, 0])
eq(0, pp[134, 1])
eq(0, pp[134, 3])
eq(0, pp[135, 0])
eq(0, pp[135, 1])
eq(0, pp[135, 2])
eq(0, pp[136, 1])
eq(0, pp[136, 2])
eq(0, pp[136, 3])
eq(0, pp[137, 0])
eq(0, pp[137, 2])
eq(0, pp[137, 3])
eq(0, pp[138, 0])
eq(0, pp[138, 1])
eq(0, pp[138, 3])
eq(0, pp[139, 0])
eq(0, pp[139, 1])
eq(0, pp[139, 2])
eq(0, pp[140, 1])
eq(0, pp[140, 2])
eq(0, pp[140, 3])
eq(0, pp[141, 0])
eq(0, pp[141, 2])
eq(0, pp[141, 3])
eq(0, pp[142, 0])
eq(0, pp[142, 1])
eq(0, pp[142, 3])
eq(0, pp[143, 0])
eq(0, pp[143, 1])
eq(0, pp[143, 2])
eq(0, pp[144, 1])
eq(0, pp[144, 2])
eq(0, pp[144, 3])
eq(0, pp[145, 0])
eq(0, pp[145, 2])
eq(0, pp[145, 3])
eq(0, pp[146, 0])
eq(0, pp[146, 1])
eq(0, pp[146, 3])
eq(0, pp[147, 0])
eq(0, pp[147, 1])
eq(0, pp[147, 2])
eq(0, pp[148, 1])
eq(0, pp[148, 2])
eq(0, pp[148, 3])
eq(0, pp[149, 0])
eq(0, pp[149, 2])
eq(0, pp[149, 3])
eq(0, pp[150, 0])
eq(0, pp[150, 1])
eq(0, pp[150, 3])
eq(0, pp[151, 0])
eq(0, pp[151, 1])
eq(0, pp[151, 2])
eq(0, pp[152, 1])
eq(0, pp[152, 2])
eq(0, pp[152, 3])
eq(0, pp[153, 0])
eq(0, pp[153, 2])
eq(0, pp[153, 3])
eq(0, pp[154, 0])
eq(0, pp[154, 1])
eq(0, pp[154, 3])
eq(0, pp[155, 0])
eq(0, pp[155, 1])
eq(0, pp[155, 2])
eq(0, pp[156, 1])
eq(0, pp[156, 2])
eq(0, pp[156, 3])
eq(0, pp[157, 0])
eq(0, pp[157, 2])
eq(0, pp[157, 3])
eq(0, pp[158, 0])
eq(0, pp[158, 1])
eq(0, pp[158, 3])
eq(0, pp[159, 0])
eq(0, pp[159, 1])
eq(0, pp[159, 2])
eq(0, pp[160, 1])
eq(0, pp[160, 2])
eq(0, pp[160, 3])
eq(0, pp[161, 0])
eq(0, pp[161, 2])
eq(0, pp[161, 3])
eq(0, pp[162, 0])
eq(0, pp[162, 1])
eq(0, pp[162, 3])
eq(0, pp[163, 0])
eq(0, pp[163, 1])
eq(0, pp[163, 2])
eq(0, pp[164, 1])
eq(0, pp[164, 2])
eq(0, pp[164, 3])
eq(0, pp[165, 0])
eq(0, pp[165, 2])
eq(0, pp[165, 3])
eq(0, pp[166, 0])
eq(0, pp[166, 1])
eq(0, pp[166, 3])
eq(0, pp[167, 0])
eq(0, pp[167, 1])
eq(0, pp[167, 2])
eq(0, pp[168, 1])
eq(0, pp[168, 2])
eq(0, pp[168, 3])
eq(0, pp[169, 0])
eq(0, pp[169, 2])
eq(0, pp[169, 3])
eq(0, pp[170, 0])
eq(0, pp[170, 1])
eq(0, pp[170, 3])
eq(0, pp[171, 0])
eq(0, pp[171, 1])
eq(0, pp[171, 2])
eq(0, pp[172, 1])
eq(0, pp[172, 2])
eq(0, pp[172, 3])
eq(0, pp[173, 0])
eq(0, pp[173, 2])
eq(0, pp[173, 3])
eq(0, pp[174, 0])
eq(0, pp[174, 1])
eq(0, pp[174, 3])
eq(0, pp[175, 0])
eq(0, pp[175, 1])
eq(0, pp[175, 2])
eq(0, pp[176, 1])
eq(0, pp[176, 2])
eq(0, pp[176, 3])
eq(0, pp[177, 0])
eq(0, pp[177, 2])
eq(0, pp[177, 3])
eq(0, pp[178, 0])
eq(0, pp[178, 1])
eq(0, pp[178, 3])
eq(0, pp[179, 0])
eq(0, pp[179, 1])
eq(0, pp[179, 2])
eq(0, pp[180, 1])
eq(0, pp[180, 2])
eq(0, pp[180, 3])
eq(0, pp[181, 0])
eq(0, pp[181, 2])
eq(0, pp[181, 3])
eq(0, pp[182, 0])
eq(0, pp[182, 1])
eq(0, pp[182, 3])
eq(0, pp[183, 0])
eq(0, pp[183, 1])
eq(0, pp[183, 2])
eq(0, pp[184, 1])
eq(0, pp[184, 2])
eq(0, pp[184, 3])
eq(0, pp[185, 0])
eq(0, pp[185, 2])
eq(0, pp[185, 3])
eq(0, pp[186, 0])
eq(0, pp[186, 1])
eq(0, pp[186, 3])
eq(0, pp[187, 0])
eq(0, pp[187, 1])
eq(0, pp[187, 2])
eq(0, pp[188, 1])
eq(0, pp[188, 2])
eq(0, pp[188, 3])
eq(0, pp[189, 0])
eq(0, pp[189, 2])
eq(0, pp[189, 3])
eq(0, pp[190, 0])
eq(0, pp[190, 1])
eq(0, pp[190, 3])
eq(0, pp[191, 0])
eq(0, pp[191, 1])
eq(0, pp[191, 2])
eq(0, pp[192, 1])
eq(0, pp[192, 2])
eq(0, pp[192, 3])
eq(0, pp[193, 0])
eq(0, pp[193, 2])
eq(0, pp[193, 3])
eq(0, pp[194, 0])
eq(0, pp[194, 1])
eq(0, pp[194, 3])
eq(0, pp[195, 0])
eq(0, pp[195, 1])
eq(0, pp[195, 2])
eq(0, pp[196, 1])
eq(0, pp[196, 2])
eq(0, pp[196, 3])
eq(0, pp[197, 0])
eq(0, pp[197, 2])
eq(0, pp[197, 3])
eq(0, pp[198, 0])
eq(0, pp[198, 1])
eq(0, pp[198, 3])
eq(0, pp[199, 0])
eq(0, pp[199, 1])
eq(0, pp[199, 2])
eq(1, pp[0, 0])
eq(1, pp[1, 1])
eq(1, pp[2, 2])
eq(1, pp[3, 3])
eq(1, pp[4, 0])
eq(1, pp[5, 1])
eq(1, pp[6, 2])
eq(1, pp[7, 3])
eq(1, pp[8, 0])
eq(1, pp[9, 1])
eq(1, pp[10, 2])
eq(1, pp[11, 3])
eq(1, pp[12, 0])
eq(1, pp[13, 1])
eq(1, pp[14, 2])
eq(1, pp[15, 3])
eq(1, pp[16, 0])
eq(1, pp[17, 1])
eq(1, pp[18, 2])
eq(1, pp[19, 3])
eq(1, pp[20, 0])
eq(1, pp[21, 1])
eq(1, pp[22, 2])
eq(1, pp[23, 3])
eq(1, pp[24, 0])
eq(1, pp[25, 1])
eq(1, pp[26, 2])
eq(1, pp[27, 3])
eq(1, pp[28, 0])
eq(1, pp[29, 1])
eq(1, pp[30, 2])
eq(1, pp[31, 3])
eq(1, pp[32, 0])
eq(1, pp[33, 1])
eq(1, pp[34, 2])
eq(1, pp[35, 3])
eq(1, pp[36, 0])
eq(1, pp[37, 1])
eq(1, pp[38, 2])
eq(1, pp[39, 3])
eq(1, pp[40, 0])
eq(1, pp[41, 1])
eq(1, pp[42, 2])
eq(1, pp[43, 3])
eq(1, pp[44, 0])
eq(1, pp[45, 1])
eq(1, pp[46, 2])
eq(1, pp[47, 3])
eq(1, pp[48, 0])
eq(1, pp[49, 1])
eq(1, pp[50, 2])
eq(1, pp[51, 3])
eq(1, pp[52, 0])
eq(1, pp[53, 1])
eq(1, pp[54, 2])
eq(1, pp[55, 3])
eq(1, pp[56, 0])
eq(1, pp[57, 1])
eq(1, pp[58, 2])
eq(1, pp[59, 3])
eq(1, pp[60, 0])
eq(1, pp[61, 1])
eq(1, pp[62, 2])
eq(1, pp[63, 3])
eq(1, pp[64, 0])
eq(1, pp[65, 1])
eq(1, pp[66, 2])
eq(1, pp[67, 3])
eq(1, pp[68, 0])
eq(1, pp[69, 1])
eq(1, pp[70, 2])
eq(1, pp[71, 3])
eq(1, pp[72, 0])
eq(1, pp[73, 1])
eq(1, pp[74, 2])
eq(1, pp[75, 3])
eq(1, pp[76, 0])
eq(1, pp[77, 1])
eq(1, pp[78, 2])
eq(1, pp[79, 3])
eq(1, pp[80, 0])
eq(1, pp[81, 1])
eq(1, pp[82, 2])
eq(1, pp[83, 3])
eq(1, pp[84, 0])
eq(1, pp[85, 1])
eq(1, pp[86, 2])
eq(1, pp[87, 3])
eq(1, pp[88, 0])
eq(1, pp[89, 1])
eq(1, pp[90, 2])
eq(1, pp[91, 3])
eq(1, pp[92, 0])
eq(1, pp[93, 1])
eq(1, pp[94, 2])
eq(1, pp[95, 3])
eq(1, pp[96, 0])
eq(1, pp[97, 1])
eq(1, pp[98, 2])
eq(1, pp[99, 3])
eq(1, pp[100, 0])
eq(1, pp[101, 1])
eq(1, pp[102, 2])
eq(1, pp[103, 3])
eq(1, pp[104, 0])
eq(1, pp[105, 1])
eq(1, pp[106, 2])
eq(1, pp[107, 3])
eq(1, pp[108, 0])
eq(1, pp[109, 1])
eq(1, pp[110, 2])
eq(1, pp[111, 3])
eq(1, pp[112, 0])
eq(1, pp[113, 1])
eq(1, pp[114, 2])
eq(1, pp[115, 3])
eq(1, pp[116, 0])
eq(1, pp[117, 1])
eq(1, pp[118, 2])
eq(1, pp[119, 3])
eq(1, pp[120, 0])
eq(1, pp[121, 1])
eq(1, pp[122, 2])
eq(1, pp[123, 3])
eq(1, pp[124, 0])
eq(1, pp[125, 1])
eq(1, pp[126, 2])
eq(1, pp[127, 3])
eq(1, pp[128, 0])
eq(1, pp[129, 1])
eq(1, pp[130, 2])
eq(1, pp[131, 3])
eq(1, pp[132, 0])
eq(1, pp[133, 1])
eq(1, pp[134, 2])
eq(1, pp[135, 3])
eq(1, pp[136, 0])
eq(1, pp[137, 1])
eq(1, pp[138, 2])
eq(1, pp[139, 3])
eq(1, pp[140, 0])
eq(1, pp[141, 1])
eq(1, pp[142, 2])
eq(1, pp[143, 3])
eq(1, pp[144, 0])
eq(1, pp[145, 1])
eq(1, pp[146, 2])
eq(1, pp[147, 3])
eq(1, pp[148, 0])
eq(1, pp[149, 1])
eq(1, pp[150, 2])
eq(1, pp[151, 3])
eq(1, pp[152, 0])
eq(1, pp[153, 1])
eq(1, pp[154, 2])
eq(1, pp[155, 3])
eq(1, pp[156, 0])
eq(1, pp[157, 1])
eq(1, pp[158, 2])
eq(1, pp[159, 3])
eq(1, pp[160, 0])
eq(1, pp[161, 1])
eq(1, pp[162, 2])
eq(1, pp[163, 3])
eq(1, pp[164, 0])
eq(1, pp[165, 1])
eq(1, pp[166, 2])
eq(1, pp[167, 3])
eq(1, pp[168, 0])
eq(1, pp[169, 1])
eq(1, pp[170, 2])
eq(1, pp[171, 3])
eq(1, pp[172, 0])
eq(1, pp[173, 1])
eq(1, pp[174, 2])
eq(1, pp[175, 3])
eq(1, pp[176, 0])
eq(1, pp[177, 1])
eq(1, pp[178, 2])
eq(1, pp[179, 3])
eq(1, pp[180, 0])
eq(1, pp[181, 1])
eq(1, pp[182, 2])
eq(1, pp[183, 3])
eq(1, pp[184, 0])
eq(1, pp[185, 1])
eq(1, pp[186, 2])
eq(1, pp[187, 3])
eq(1, pp[188, 0])
eq(1, pp[189, 1])
eq(1, pp[190, 2])
eq(1, pp[191, 3])
eq(1, pp[192, 0])
eq(1, pp[193, 1])
eq(1, pp[194, 2])
eq(1, pp[195, 3])
eq(1, pp[196, 0])
eq(1, pp[197, 1])
eq(1, pp[198, 2])
eq(1, pp[199, 3])
gacalldiff([alloc])
sumleq([aux400,aux401,aux402,aux403,aux404,aux405,aux406,aux407,aux408,aux409,aux410,aux411,aux412,aux413,aux414,aux415,aux416,aux417,aux418,aux419,aux420,aux421,aux422,aux423,aux424,aux425,aux426,aux427,aux428,aux429,aux430,aux431,aux432,aux433,aux434,aux435,aux436,aux437,aux438,aux439,aux440,aux441,aux442,aux443,aux444,aux445,aux446,aux447,aux448,aux449,aux450,aux451,aux452,aux453,aux454,aux455,aux456,aux457,aux458,aux459,aux460,aux461,aux462,aux463,aux464,aux465,aux466,aux467,aux468,aux469,aux470,aux471,aux472,aux473,aux474,aux475,aux476,aux477,aux478,aux479,aux480,aux481,aux482,aux483,aux484,aux485,aux486,aux487,aux488,aux489,aux490,aux491,aux492,aux493,aux494,aux495,aux496,aux497,aux498,aux499,aux500,aux501,aux502,aux503,aux504,aux505,aux506,aux507,aux508,aux509,aux510,aux511,aux512,aux513,aux514,aux515,aux516,aux517,aux518,aux519,aux520,aux521,aux522,aux523,aux524,aux525,aux526,aux527,aux528,aux529,aux530,aux531,aux532,aux533,aux534,aux535,aux536,aux537,aux538,aux539,aux540,aux541,aux542,aux543,aux544,aux545,aux546,aux547,aux548,aux549,aux550,aux551,aux552,aux553,aux554,aux555,aux556,aux557,aux558,aux559,aux560,aux561,aux562,aux563,aux564,aux565,aux566,aux567,aux568,aux569,aux570,aux571,aux572,aux573,aux574,aux575,aux576,aux577,aux578,aux579,aux580,aux581,aux582,aux583,aux584,aux585,aux586,aux587,aux588,aux589,aux590,aux591,aux592,aux593,aux594,aux595,aux596,aux597,aux598,aux599], aux600)
sumgeq([aux400,aux401,aux402,aux403,aux404,aux405,aux406,aux407,aux408,aux409,aux410,aux411,aux412,aux413,aux414,aux415,aux416,aux417,aux418,aux419,aux420,aux421,aux422,aux423,aux424,aux425,aux426,aux427,aux428,aux429,aux430,aux431,aux432,aux433,aux434,aux435,aux436,aux437,aux438,aux439,aux440,aux441,aux442,aux443,aux444,aux445,aux446,aux447,aux448,aux449,aux450,aux451,aux452,aux453,aux454,aux455,aux456,aux457,aux458,aux459,aux460,aux461,aux462,aux463,aux464,aux465,aux466,aux467,aux468,aux469,aux470,aux471,aux472,aux473,aux474,aux475,aux476,aux477,aux478,aux479,aux480,aux481,aux482,aux483,aux484,aux485,aux486,aux487,aux488,aux489,aux490,aux491,aux492,aux493,aux494,aux495,aux496,aux497,aux498,aux499,aux500,aux501,aux502,aux503,aux504,aux505,aux506,aux507,aux508,aux509,aux510,aux511,aux512,aux513,aux514,aux515,aux516,aux517,aux518,aux519,aux520,aux521,aux522,aux523,aux524,aux525,aux526,aux527,aux528,aux529,aux530,aux531,aux532,aux533,aux534,aux535,aux536,aux537,aux538,aux539,aux540,aux541,aux542,aux543,aux544,aux545,aux546,aux547,aux548,aux549,aux550,aux551,aux552,aux553,aux554,aux555,aux556,aux557,aux558,aux559,aux560,aux561,aux562,aux563,aux564,aux565,aux566,aux567,aux568,aux569,aux570,aux571,aux572,aux573,aux574,aux575,aux576,aux577,aux578,aux579,aux580,aux581,aux582,aux583,aux584,aux585,aux586,aux587,aux588,aux589,aux590,aux591,aux592,aux593,aux594,aux595,aux596,aux597,aux598,aux599], aux600)
product(aux0,aux1, aux599)
product(aux2,aux3, aux598)
product(aux4,aux5, aux597)
product(aux6,aux7, aux596)
product(aux8,aux9, aux595)
product(aux10,aux11, aux594)
product(aux12,aux13, aux593)
product(aux14,aux15, aux592)
product(aux16,aux17, aux591)
product(aux18,aux19, aux590)
product(aux20,aux21, aux589)
product(aux22,aux23, aux588)
product(aux24,aux25, aux587)
product(aux26,aux27, aux586)
product(aux28,aux29, aux585)
product(aux30,aux31, aux584)
product(aux32,aux33, aux583)
product(aux34,aux35, aux582)
product(aux36,aux37, aux581)
product(aux38,aux39, aux580)
product(aux40,aux41, aux579)
product(aux42,aux43, aux578)
product(aux44,aux45, aux577)
product(aux46,aux47, aux576)
product(aux48,aux49, aux575)
product(aux50,aux51, aux574)
product(aux52,aux53, aux573)
product(aux54,aux55, aux572)
product(aux56,aux57, aux571)
product(aux58,aux59, aux570)
product(aux60,aux61, aux569)
product(aux62,aux63, aux568)
product(aux64,aux65, aux567)
product(aux66,aux67, aux566)
product(aux68,aux69, aux565)
product(aux70,aux71, aux564)
product(aux72,aux73, aux563)
product(aux74,aux75, aux562)
product(aux76,aux77, aux561)
product(aux78,aux79, aux560)
product(aux80,aux81, aux559)
product(aux82,aux83, aux558)
product(aux84,aux85, aux557)
product(aux86,aux87, aux556)
product(aux88,aux89, aux555)
product(aux90,aux91, aux554)
product(aux92,aux93, aux553)
product(aux94,aux95, aux552)
product(aux96,aux97, aux551)
product(aux98,aux99, aux550)
product(aux100,aux101, aux549)
product(aux102,aux103, aux548)
product(aux104,aux105, aux547)
product(aux106,aux107, aux546)
product(aux108,aux109, aux545)
product(aux110,aux111, aux544)
product(aux112,aux113, aux543)
product(aux114,aux115, aux542)
product(aux116,aux117, aux541)
product(aux118,aux119, aux540)
product(aux120,aux121, aux539)
product(aux122,aux123, aux538)
product(aux124,aux125, aux537)
product(aux126,aux127, aux536)
product(aux128,aux129, aux535)
product(aux130,aux131, aux534)
product(aux132,aux133, aux533)
product(aux134,aux135, aux532)
product(aux136,aux137, aux531)
product(aux138,aux139, aux530)
product(aux140,aux141, aux529)
product(aux142,aux143, aux528)
product(aux144,aux145, aux527)
product(aux146,aux147, aux526)
product(aux148,aux149, aux525)
product(aux150,aux151, aux524)
product(aux152,aux153, aux523)
product(aux154,aux155, aux522)
product(aux156,aux157, aux521)
product(aux158,aux159, aux520)
product(aux160,aux161, aux519)
product(aux162,aux163, aux518)
product(aux164,aux165, aux517)
product(aux166,aux167, aux516)
product(aux168,aux169, aux515)
product(aux170,aux171, aux514)
product(aux172,aux173, aux513)
product(aux174,aux175, aux512)
product(aux176,aux177, aux511)
product(aux178,aux179, aux510)
product(aux180,aux181, aux509)
product(aux182,aux183, aux508)
product(aux184,aux185, aux507)
product(aux186,aux187, aux506)
product(aux188,aux189, aux505)
product(aux190,aux191, aux504)
product(aux192,aux193, aux503)
product(aux194,aux195, aux502)
product(aux196,aux197, aux501)
product(aux198,aux199, aux500)
product(aux200,aux201, aux499)
product(aux202,aux203, aux498)
product(aux204,aux205, aux497)
product(aux206,aux207, aux496)
product(aux208,aux209, aux495)
product(aux210,aux211, aux494)
product(aux212,aux213, aux493)
product(aux214,aux215, aux492)
product(aux216,aux217, aux491)
product(aux218,aux219, aux490)
product(aux220,aux221, aux489)
product(aux222,aux223, aux488)
product(aux224,aux225, aux487)
product(aux226,aux227, aux486)
product(aux228,aux229, aux485)
product(aux230,aux231, aux484)
product(aux232,aux233, aux483)
product(aux234,aux235, aux482)
product(aux236,aux237, aux481)
product(aux238,aux239, aux480)
product(aux240,aux241, aux479)
product(aux242,aux243, aux478)
product(aux244,aux245, aux477)
product(aux246,aux247, aux476)
product(aux248,aux249, aux475)
product(aux250,aux251, aux474)
product(aux252,aux253, aux473)
product(aux254,aux255, aux472)
product(aux256,aux257, aux471)
product(aux258,aux259, aux470)
product(aux260,aux261, aux469)
product(aux262,aux263, aux468)
product(aux264,aux265, aux467)
product(aux266,aux267, aux466)
product(aux268,aux269, aux465)
product(aux270,aux271, aux464)
product(aux272,aux273, aux463)
product(aux274,aux275, aux462)
product(aux276,aux277, aux461)
product(aux278,aux279, aux460)
product(aux280,aux281, aux459)
product(aux282,aux283, aux458)
product(aux284,aux285, aux457)
product(aux286,aux287, aux456)
product(aux288,aux289, aux455)
product(aux290,aux291, aux454)
product(aux292,aux293, aux453)
product(aux294,aux295, aux452)
product(aux296,aux297, aux451)
product(aux298,aux299, aux450)
product(aux300,aux301, aux449)
product(aux302,aux303, aux448)
product(aux304,aux305, aux447)
product(aux306,aux307, aux446)
product(aux308,aux309, aux445)
product(aux310,aux311, aux444)
product(aux312,aux313, aux443)
product(aux314,aux315, aux442)
product(aux316,aux317, aux441)
product(aux318,aux319, aux440)
product(aux320,aux321, aux439)
product(aux322,aux323, aux438)
product(aux324,aux325, aux437)
product(aux326,aux327, aux436)
product(aux328,aux329, aux435)
product(aux330,aux331, aux434)
product(aux332,aux333, aux433)
product(aux334,aux335, aux432)
product(aux336,aux337, aux431)
product(aux338,aux339, aux430)
product(aux340,aux341, aux429)
product(aux342,aux343, aux428)
product(aux344,aux345, aux427)
product(aux346,aux347, aux426)
product(aux348,aux349, aux425)
product(aux350,aux351, aux424)
product(aux352,aux353, aux423)
product(aux354,aux355, aux422)
product(aux356,aux357, aux421)
product(aux358,aux359, aux420)
product(aux360,aux361, aux419)
product(aux362,aux363, aux418)
product(aux364,aux365, aux417)
product(aux366,aux367, aux416)
product(aux368,aux369, aux415)
product(aux370,aux371, aux414)
product(aux372,aux373, aux413)
product(aux374,aux375, aux412)
product(aux376,aux377, aux411)
product(aux378,aux379, aux410)
product(aux380,aux381, aux409)
product(aux382,aux383, aux408)
product(aux384,aux385, aux407)
product(aux386,aux387, aux406)
product(aux388,aux389, aux405)
product(aux390,aux391, aux404)
product(aux392,aux393, aux403)
product(aux394,aux395, aux402)
product(aux396,aux397, aux401)
product(aux398,aux399, aux400)
watchelement([pp[_,3]], alloc[49, 3], aux399)
product(2,alloc[49, 3], aux398)
watchelement([pp[_,2]], alloc[49, 2], aux397)
product(2,alloc[49, 2], aux396)
watchelement([pp[_,1]], alloc[49, 1], aux395)
product(2,alloc[49, 1], aux394)
watchelement([pp[_,0]], alloc[49, 0], aux393)
product(2,alloc[49, 0], aux392)
watchelement([pp[_,3]], alloc[48, 3], aux391)
product(2,alloc[48, 3], aux390)
watchelement([pp[_,2]], alloc[48, 2], aux389)
product(2,alloc[48, 2], aux388)
watchelement([pp[_,1]], alloc[48, 1], aux387)
product(2,alloc[48, 1], aux386)
watchelement([pp[_,0]], alloc[48, 0], aux385)
product(2,alloc[48, 0], aux384)
watchelement([pp[_,3]], alloc[47, 3], aux383)
product(2,alloc[47, 3], aux382)
watchelement([pp[_,2]], alloc[47, 2], aux381)
product(2,alloc[47, 2], aux380)
watchelement([pp[_,1]], alloc[47, 1], aux379)
product(2,alloc[47, 1], aux378)
watchelement([pp[_,0]], alloc[47, 0], aux377)
product(2,alloc[47, 0], aux376)
watchelement([pp[_,3]], alloc[46, 3], aux375)
product(2,alloc[46, 3], aux374)
watchelement([pp[_,2]], alloc[46, 2], aux373)
product(2,alloc[46, 2], aux372)
watchelement([pp[_,1]], alloc[46, 1], aux371)
product(2,alloc[46, 1], aux370)
watchelement([pp[_,0]], alloc[46, 0], aux369)
product(2,alloc[46, 0], aux368)
watchelement([pp[_,3]], alloc[45, 3], aux367)
product(2,alloc[45, 3], aux366)
watchelement([pp[_,2]], alloc[45, 2], aux365)
product(2,alloc[45, 2], aux364)
watchelement([pp[_,1]], alloc[45, 1], aux363)
product(2,alloc[45, 1], aux362)
watchelement([pp[_,0]], alloc[45, 0], aux361)
product(2,alloc[45, 0], aux360)
watchelement([pp[_,3]], alloc[44, 3], aux359)
product(2,alloc[44, 3], aux358)
watchelement([pp[_,2]], alloc[44, 2], aux357)
product(2,alloc[44, 2], aux356)
watchelement([pp[_,1]], alloc[44, 1], aux355)
product(2,alloc[44, 1], aux354)
watchelement([pp[_,0]], alloc[44, 0], aux353)
product(2,alloc[44, 0], aux352)
watchelement([pp[_,3]], alloc[43, 3], aux351)
product(2,alloc[43, 3], aux350)
watchelement([pp[_,2]], alloc[43, 2], aux349)
product(2,alloc[43, 2], aux348)
watchelement([pp[_,1]], alloc[43, 1], aux347)
product(2,alloc[43, 1], aux346)
watchelement([pp[_,0]], alloc[43, 0], aux345)
product(2,alloc[43, 0], aux344)
watchelement([pp[_,3]], alloc[42, 3], aux343)
product(2,alloc[42, 3], aux342)
watchelement([pp[_,2]], alloc[42, 2], aux341)
product(2,alloc[42, 2], aux340)
watchelement([pp[_,1]], alloc[42, 1], aux339)
product(2,alloc[42, 1], aux338)
watchelement([pp[_,0]], alloc[42, 0], aux337)
product(2,alloc[42, 0], aux336)
watchelement([pp[_,3]], alloc[41, 3], aux335)
product(2,alloc[41, 3], aux334)
watchelement([pp[_,2]], alloc[41, 2], aux333)
product(2,alloc[41, 2], aux332)
watchelement([pp[_,1]], alloc[41, 1], aux331)
product(2,alloc[41, 1], aux330)
watchelement([pp[_,0]], alloc[41, 0], aux329)
product(2,alloc[41, 0], aux328)
watchelement([pp[_,3]], alloc[40, 3], aux327)
product(2,alloc[40, 3], aux326)
watchelement([pp[_,2]], alloc[40, 2], aux325)
product(2,alloc[40, 2], aux324)
watchelement([pp[_,1]], alloc[40, 1], aux323)
product(2,alloc[40, 1], aux322)
watchelement([pp[_,0]], alloc[40, 0], aux321)
product(2,alloc[40, 0], aux320)
watchelement([pp[_,3]], alloc[39, 3], aux319)
product(2,alloc[39, 3], aux318)
watchelement([pp[_,2]], alloc[39, 2], aux317)
product(2,alloc[39, 2], aux316)
watchelement([pp[_,1]], alloc[39, 1], aux315)
product(2,alloc[39, 1], aux314)
watchelement([pp[_,0]], alloc[39, 0], aux313)
product(2,alloc[39, 0], aux312)
watchelement([pp[_,3]], alloc[38, 3], aux311)
product(2,alloc[38, 3], aux310)
watchelement([pp[_,2]], alloc[38, 2], aux309)
product(2,alloc[38, 2], aux308)
watchelement([pp[_,1]], alloc[38, 1], aux307)
product(2,alloc[38, 1], aux306)
watchelement([pp[_,0]], alloc[38, 0], aux305)
product(2,alloc[38, 0], aux304)
watchelement([pp[_,3]], alloc[37, 3], aux303)
product(2,alloc[37, 3], aux302)
watchelement([pp[_,2]], alloc[37, 2], aux301)
product(2,alloc[37, 2], aux300)
watchelement([pp[_,1]], alloc[37, 1], aux299)
product(2,alloc[37, 1], aux298)
watchelement([pp[_,0]], alloc[37, 0], aux297)
product(2,alloc[37, 0], aux296)
watchelement([pp[_,3]], alloc[36, 3], aux295)
product(2,alloc[36, 3], aux294)
watchelement([pp[_,2]], alloc[36, 2], aux293)
product(2,alloc[36, 2], aux292)
watchelement([pp[_,1]], alloc[36, 1], aux291)
product(2,alloc[36, 1], aux290)
watchelement([pp[_,0]], alloc[36, 0], aux289)
product(2,alloc[36, 0], aux288)
watchelement([pp[_,3]], alloc[35, 3], aux287)
product(2,alloc[35, 3], aux286)
watchelement([pp[_,2]], alloc[35, 2], aux285)
product(2,alloc[35, 2], aux284)
watchelement([pp[_,1]], alloc[35, 1], aux283)
product(2,alloc[35, 1], aux282)
watchelement([pp[_,0]], alloc[35, 0], aux281)
product(2,alloc[35, 0], aux280)
watchelement([pp[_,3]], alloc[34, 3], aux279)
product(2,alloc[34, 3], aux278)
watchelement([pp[_,2]], alloc[34, 2], aux277)
product(2,alloc[34, 2], aux276)
watchelement([pp[_,1]], alloc[34, 1], aux275)
product(2,alloc[34, 1], aux274)
watchelement([pp[_,0]], alloc[34, 0], aux273)
product(2,alloc[34, 0], aux272)
watchelement([pp[_,3]], alloc[33, 3], aux271)
product(2,alloc[33, 3], aux270)
watchelement([pp[_,2]], alloc[33, 2], aux269)
product(2,alloc[33, 2], aux268)
watchelement([pp[_,1]], alloc[33, 1], aux267)
product(2,alloc[33, 1], aux266)
watchelement([pp[_,0]], alloc[33, 0], aux265)
product(2,alloc[33, 0], aux264)
watchelement([pp[_,3]], alloc[32, 3], aux263)
product(2,alloc[32, 3], aux262)
watchelement([pp[_,2]], alloc[32, 2], aux261)
product(2,alloc[32, 2], aux260)
watchelement([pp[_,1]], alloc[32, 1], aux259)
product(2,alloc[32, 1], aux258)
watchelement([pp[_,0]], alloc[32, 0], aux257)
product(2,alloc[32, 0], aux256)
watchelement([pp[_,3]], alloc[31, 3], aux255)
product(2,alloc[31, 3], aux254)
watchelement([pp[_,2]], alloc[31, 2], aux253)
product(2,alloc[31, 2], aux252)
watchelement([pp[_,1]], alloc[31, 1], aux251)
product(2,alloc[31, 1], aux250)
watchelement([pp[_,0]], alloc[31, 0], aux249)
product(2,alloc[31, 0], aux248)
watchelement([pp[_,3]], alloc[30, 3], aux247)
product(2,alloc[30, 3], aux246)
watchelement([pp[_,2]], alloc[30, 2], aux245)
product(2,alloc[30, 2], aux244)
watchelement([pp[_,1]], alloc[30, 1], aux243)
product(2,alloc[30, 1], aux242)
watchelement([pp[_,0]], alloc[30, 0], aux241)
product(2,alloc[30, 0], aux240)
watchelement([pp[_,3]], alloc[29, 3], aux239)
product(2,alloc[29, 3], aux238)
watchelement([pp[_,2]], alloc[29, 2], aux237)
product(2,alloc[29, 2], aux236)
watchelement([pp[_,1]], alloc[29, 1], aux235)
product(2,alloc[29, 1], aux234)
watchelement([pp[_,0]], alloc[29, 0], aux233)
product(2,alloc[29, 0], aux232)
watchelement([pp[_,3]], alloc[28, 3], aux231)
product(2,alloc[28, 3], aux230)
watchelement([pp[_,2]], alloc[28, 2], aux229)
product(2,alloc[28, 2], aux228)
watchelement([pp[_,1]], alloc[28, 1], aux227)
product(2,alloc[28, 1], aux226)
watchelement([pp[_,0]], alloc[28, 0], aux225)
product(2,alloc[28, 0], aux224)
watchelement([pp[_,3]], alloc[27, 3], aux223)
product(2,alloc[27, 3], aux222)
watchelement([pp[_,2]], alloc[27, 2], aux221)
product(2,alloc[27, 2], aux220)
watchelement([pp[_,1]], alloc[27, 1], aux219)
product(2,alloc[27, 1], aux218)
watchelement([pp[_,0]], alloc[27, 0], aux217)
product(2,alloc[27, 0], aux216)
watchelement([pp[_,3]], alloc[26, 3], aux215)
product(2,alloc[26, 3], aux214)
watchelement([pp[_,2]], alloc[26, 2], aux213)
product(2,alloc[26, 2], aux212)
watchelement([pp[_,1]], alloc[26, 1], aux211)
product(2,alloc[26, 1], aux210)
watchelement([pp[_,0]], alloc[26, 0], aux209)
product(2,alloc[26, 0], aux208)
watchelement([pp[_,3]], alloc[25, 3], aux207)
product(2,alloc[25, 3], aux206)
watchelement([pp[_,2]], alloc[25, 2], aux205)
product(2,alloc[25, 2], aux204)
watchelement([pp[_,1]], alloc[25, 1], aux203)
product(2,alloc[25, 1], aux202)
watchelement([pp[_,0]], alloc[25, 0], aux201)
product(2,alloc[25, 0], aux200)
watchelement([pp[_,3]], alloc[24, 3], aux199)
product(2,alloc[24, 3], aux198)
watchelement([pp[_,2]], alloc[24, 2], aux197)
product(2,alloc[24, 2], aux196)
watchelement([pp[_,1]], alloc[24, 1], aux195)
product(2,alloc[24, 1], aux194)
watchelement([pp[_,0]], alloc[24, 0], aux193)
product(2,alloc[24, 0], aux192)
watchelement([pp[_,3]], alloc[23, 3], aux191)
product(2,alloc[23, 3], aux190)
watchelement([pp[_,2]], alloc[23, 2], aux189)
product(2,alloc[23, 2], aux188)
watchelement([pp[_,1]], alloc[23, 1], aux187)
product(2,alloc[23, 1], aux186)
watchelement([pp[_,0]], alloc[23, 0], aux185)
product(2,alloc[23, 0], aux184)
watchelement([pp[_,3]], alloc[22, 3], aux183)
product(2,alloc[22, 3], aux182)
watchelement([pp[_,2]], alloc[22, 2], aux181)
product(2,alloc[22, 2], aux180)
watchelement([pp[_,1]], alloc[22, 1], aux179)
product(2,alloc[22, 1], aux178)
watchelement([pp[_,0]], alloc[22, 0], aux177)
product(2,alloc[22, 0], aux176)
watchelement([pp[_,3]], alloc[21, 3], aux175)
product(2,alloc[21, 3], aux174)
watchelement([pp[_,2]], alloc[21, 2], aux173)
product(2,alloc[21, 2], aux172)
watchelement([pp[_,1]], alloc[21, 1], aux171)
product(2,alloc[21, 1], aux170)
watchelement([pp[_,0]], alloc[21, 0], aux169)
product(2,alloc[21, 0], aux168)
watchelement([pp[_,3]], alloc[20, 3], aux167)
product(2,alloc[20, 3], aux166)
watchelement([pp[_,2]], alloc[20, 2], aux165)
product(2,alloc[20, 2], aux164)
watchelement([pp[_,1]], alloc[20, 1], aux163)
product(2,alloc[20, 1], aux162)
watchelement([pp[_,0]], alloc[20, 0], aux161)
product(2,alloc[20, 0], aux160)
watchelement([pp[_,3]], alloc[19, 3], aux159)
product(2,alloc[19, 3], aux158)
watchelement([pp[_,2]], alloc[19, 2], aux157)
product(2,alloc[19, 2], aux156)
watchelement([pp[_,1]], alloc[19, 1], aux155)
product(2,alloc[19, 1], aux154)
watchelement([pp[_,0]], alloc[19, 0], aux153)
product(2,alloc[19, 0], aux152)
watchelement([pp[_,3]], alloc[18, 3], aux151)
product(2,alloc[18, 3], aux150)
watchelement([pp[_,2]], alloc[18, 2], aux149)
product(2,alloc[18, 2], aux148)
watchelement([pp[_,1]], alloc[18, 1], aux147)
product(2,alloc[18, 1], aux146)
watchelement([pp[_,0]], alloc[18, 0], aux145)
product(2,alloc[18, 0], aux144)
watchelement([pp[_,3]], alloc[17, 3], aux143)
product(2,alloc[17, 3], aux142)
watchelement([pp[_,2]], alloc[17, 2], aux141)
product(2,alloc[17, 2], aux140)
watchelement([pp[_,1]], alloc[17, 1], aux139)
product(2,alloc[17, 1], aux138)
watchelement([pp[_,0]], alloc[17, 0], aux137)
product(2,alloc[17, 0], aux136)
watchelement([pp[_,3]], alloc[16, 3], aux135)
product(2,alloc[16, 3], aux134)
watchelement([pp[_,2]], alloc[16, 2], aux133)
product(2,alloc[16, 2], aux132)
watchelement([pp[_,1]], alloc[16, 1], aux131)
product(2,alloc[16, 1], aux130)
watchelement([pp[_,0]], alloc[16, 0], aux129)
product(2,alloc[16, 0], aux128)
watchelement([pp[_,3]], alloc[15, 3], aux127)
product(2,alloc[15, 3], aux126)
watchelement([pp[_,2]], alloc[15, 2], aux125)
product(2,alloc[15, 2], aux124)
watchelement([pp[_,1]], alloc[15, 1], aux123)
product(2,alloc[15, 1], aux122)
watchelement([pp[_,0]], alloc[15, 0], aux121)
product(2,alloc[15, 0], aux120)
watchelement([pp[_,3]], alloc[14, 3], aux119)
product(2,alloc[14, 3], aux118)
watchelement([pp[_,2]], alloc[14, 2], aux117)
product(2,alloc[14, 2], aux116)
watchelement([pp[_,1]], alloc[14, 1], aux115)
product(2,alloc[14, 1], aux114)
watchelement([pp[_,0]], alloc[14, 0], aux113)
product(2,alloc[14, 0], aux112)
watchelement([pp[_,3]], alloc[13, 3], aux111)
product(2,alloc[13, 3], aux110)
watchelement([pp[_,2]], alloc[13, 2], aux109)
product(2,alloc[13, 2], aux108)
watchelement([pp[_,1]], alloc[13, 1], aux107)
product(2,alloc[13, 1], aux106)
watchelement([pp[_,0]], alloc[13, 0], aux105)
product(2,alloc[13, 0], aux104)
watchelement([pp[_,3]], alloc[12, 3], aux103)
product(2,alloc[12, 3], aux102)
watchelement([pp[_,2]], alloc[12, 2], aux101)
product(2,alloc[12, 2], aux100)
watchelement([pp[_,1]], alloc[12, 1], aux99)
product(2,alloc[12, 1], aux98)
watchelement([pp[_,0]], alloc[12, 0], aux97)
product(2,alloc[12, 0], aux96)
watchelement([pp[_,3]], alloc[11, 3], aux95)
product(2,alloc[11, 3], aux94)
watchelement([pp[_,2]], alloc[11, 2], aux93)
product(2,alloc[11, 2], aux92)
watchelement([pp[_,1]], alloc[11, 1], aux91)
product(2,alloc[11, 1], aux90)
watchelement([pp[_,0]], alloc[11, 0], aux89)
product(2,alloc[11, 0], aux88)
watchelement([pp[_,3]], alloc[10, 3], aux87)
product(2,alloc[10, 3], aux86)
watchelement([pp[_,2]], alloc[10, 2], aux85)
product(2,alloc[10, 2], aux84)
watchelement([pp[_,1]], alloc[10, 1], aux83)
product(2,alloc[10, 1], aux82)
watchelement([pp[_,0]], alloc[10, 0], aux81)
product(2,alloc[10, 0], aux80)
watchelement([pp[_,3]], alloc[9, 3], aux79)
product(2,alloc[9, 3], aux78)
watchelement([pp[_,2]], alloc[9, 2], aux77)
product(2,alloc[9, 2], aux76)
watchelement([pp[_,1]], alloc[9, 1], aux75)
product(2,alloc[9, 1], aux74)
watchelement([pp[_,0]], alloc[9, 0], aux73)
product(2,alloc[9, 0], aux72)
watchelement([pp[_,3]], alloc[8, 3], aux71)
product(2,alloc[8, 3], aux70)
watchelement([pp[_,2]], alloc[8, 2], aux69)
product(2,alloc[8, 2], aux68)
watchelement([pp[_,1]], alloc[8, 1], aux67)
product(2,alloc[8, 1], aux66)
watchelement([pp[_,0]], alloc[8, 0], aux65)
product(2,alloc[8, 0], aux64)
watchelement([pp[_,3]], alloc[7, 3], aux63)
product(2,alloc[7, 3], aux62)
watchelement([pp[_,2]], alloc[7, 2], aux61)
product(2,alloc[7, 2], aux60)
watchelement([pp[_,1]], alloc[7, 1], aux59)
product(2,alloc[7, 1], aux58)
watchelement([pp[_,0]], alloc[7, 0], aux57)
product(2,alloc[7, 0], aux56)
watchelement([pp[_,3]], alloc[6, 3], aux55)
product(2,alloc[6, 3], aux54)
watchelement([pp[_,2]], alloc[6, 2], aux53)
product(2,alloc[6, 2], aux52)
watchelement([pp[_,1]], alloc[6, 1], aux51)
product(2,alloc[6, 1], aux50)
watchelement([pp[_,0]], alloc[6, 0], aux49)
product(2,alloc[6, 0], aux48)
watchelement([pp[_,3]], alloc[5, 3], aux47)
product(2,alloc[5, 3], aux46)
watchelement([pp[_,2]], alloc[5, 2], aux45)
product(2,alloc[5, 2], aux44)
watchelement([pp[_,1]], alloc[5, 1], aux43)
product(2,alloc[5, 1], aux42)
watchelement([pp[_,0]], alloc[5, 0], aux41)
product(2,alloc[5, 0], aux40)
watchelement([pp[_,3]], alloc[4, 3], aux39)
product(2,alloc[4, 3], aux38)
watchelement([pp[_,2]], alloc[4, 2], aux37)
product(2,alloc[4, 2], aux36)
watchelement([pp[_,1]], alloc[4, 1], aux35)
product(2,alloc[4, 1], aux34)
watchelement([pp[_,0]], alloc[4, 0], aux33)
product(2,alloc[4, 0], aux32)
watchelement([pp[_,3]], alloc[3, 3], aux31)
product(2,alloc[3, 3], aux30)
watchelement([pp[_,2]], alloc[3, 2], aux29)
product(2,alloc[3, 2], aux28)
watchelement([pp[_,1]], alloc[3, 1], aux27)
product(2,alloc[3, 1], aux26)
watchelement([pp[_,0]], alloc[3, 0], aux25)
product(2,alloc[3, 0], aux24)
watchelement([pp[_,3]], alloc[2, 3], aux23)
product(2,alloc[2, 3], aux22)
watchelement([pp[_,2]], alloc[2, 2], aux21)
product(2,alloc[2, 2], aux20)
watchelement([pp[_,1]], alloc[2, 1], aux19)
product(2,alloc[2, 1], aux18)
watchelement([pp[_,0]], alloc[2, 0], aux17)
product(2,alloc[2, 0], aux16)
watchelement([pp[_,3]], alloc[1, 3], aux15)
product(2,alloc[1, 3], aux14)
watchelement([pp[_,2]], alloc[1, 2], aux13)
product(2,alloc[1, 2], aux12)
watchelement([pp[_,1]], alloc[1, 1], aux11)
product(2,alloc[1, 1], aux10)
watchelement([pp[_,0]], alloc[1, 0], aux9)
product(2,alloc[1, 0], aux8)
watchelement([pp[_,3]], alloc[0, 3], aux7)
product(2,alloc[0, 3], aux6)
watchelement([pp[_,2]], alloc[0, 2], aux5)
product(2,alloc[0, 2], aux4)
watchelement([pp[_,1]], alloc[0, 1], aux3)
product(2,alloc[0, 1], aux2)
watchelement([pp[_,0]], alloc[0, 0], aux1)
product(2,alloc[0, 0], aux0)

**EOF**
